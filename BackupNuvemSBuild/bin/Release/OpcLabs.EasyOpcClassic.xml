<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpcLabs.EasyOpcClassic</name>
    </assembly>
    <members>
        <member name="T:OpcLabs.BaseLib.AssemblyNames">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.BaseLib.PublicKeyTokens">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.BaseLib.SystemAssemblyNames">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.AssemblyNames">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.NamespaceDoc">
            <summary>
            This namespace contains classes that facilitate easy work with various OPC specifications (regardless of technology 
            used).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for OPC Alarms&amp;Events address space classes.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_AEAttributeElement\Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.AttributeId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.AttributeId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.Description">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.Description"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.DataType">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.DataType"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.Item(System.Int32)">
            <inheritdoc cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.Add(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.Contains(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.Remove(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElementCollection.ToList">
            <summary>
            Creates a list from a keyed collection.
            </summary>
            <returns>A list that contains values from the keyed collection.</returns>
            <remarks>
            <para>
            This method is provided to allow access to the keyed collection elements to languages and tools with limited COM
            collection support, such PowerScript (PowerBuilder).</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_AECategoryElement\Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.AttributeElements">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.AttributeElements"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.CategoryId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.CategoryId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.ConditionElements">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ConditionElements"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.Description">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.Description"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.Item(System.Int32)">
            <inheritdoc cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.Add(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.Contains(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.Remove(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElementCollection.ToList">
            <summary>
            Creates a list from a keyed collection.
            </summary>
            <returns>A list that contains values from the keyed collection.</returns>
            <remarks>
            <para>
            This method is provided to allow access to the keyed collection elements to languages and tools with limited COM
            collection support, such PowerScript (PowerBuilder).</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_AEConditionElement\Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.Name">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.Name"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.SubconditionNames">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.SubconditionNames"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.SetSubconditionNames(System.String[]@)">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.SubconditionNames"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.Item(System.String)">
            <inheritdoc cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.Add(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.Contains(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.Remove(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElementCollection.ToList">
            <summary>
            Creates a list from a keyed collection.
            </summary>
            <returns>A list that contains values from the keyed collection.</returns>
            <remarks>
            <para>
            This method is provided to allow access to the keyed collection elements to languages and tools with limited COM
            collection support, such PowerScript (PowerBuilder).</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.BrowsePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.BrowsePath"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.HasChildren">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.HasChildren"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.IsRoot">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.IsRoot"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.Name">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.Name"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.IsArea">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.IsArea"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.IsSource">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.IsSource"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.QualifiedName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.QualifiedName"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.Item(System.String)">
            <inheritdoc cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.Add(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.Contains(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.Remove(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElementCollection.ToList">
            <summary>
            Creates a list from a keyed collection.
            </summary>
            <returns>A list that contains values from the keyed collection.</returns>
            <remarks>
            <para>
            This method is provided to allow access to the keyed collection elements to languages and tools with limited COM
            collection support, such PowerScript (PowerBuilder).</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.Name">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Name"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.Definition">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Definition"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.Severity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Severity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.Description">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Description"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.Item(System.String)">
            <inheritdoc cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.Add(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.Contains(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.Remove(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElementCollection.ToList">
            <summary>
            Creates a list from a keyed collection.
            </summary>
            <returns>A list that contains values from the keyed collection.</returns>
            <remarks>
            <para>
            This method is provided to allow access to the keyed collection elements to languages and tools with limited COM
            collection support, such PowerScript (PowerBuilder).</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.NamespaceDoc">
            <summary>
            This namespace contains classes for OPC Alarms&amp;Events address space.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection">
            <summary>
            A collection of attribute elements (<see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement"/>), keyed by their Attribute Ids.
            </summary>
            <remarks>
            This collection is returned by the browsing methods.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="attributeElementCollection1">First object to be compared.</param>
            <param name="attributeElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="attributeElementCollection1">First object to be compared.</param>
            <param name="attributeElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.#ctor">
            <summary>
            Initializes a new, empty instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement})">
            <summary>
            Initializes a new copy of the collection.
            </summary>
            <param name="elements">The collection to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.Keys">
            <summary>
            A collection of Attribute Ids that are keys to the attribute elements in the dictionary.
            </summary>
            <returns>Returns a collection of keys. Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.GetSchema">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.ReadXml(System.Xml.XmlReader)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection.GetKeyForItem(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection">
            <summary>
            A collection of category elements (<see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement"/>), keyed by their Category Ids.
            </summary>
            <remarks>
            This collection is returned by the browsing methods.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.#ctor">
            <summary>
            Initializes a new, empty instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement})">
            <summary>
            Initializes a new copy of the collection.
            </summary>
            <param name="elements">The collection to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="categoryElementCollection1">First object to be compared.</param>
            <param name="categoryElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="categoryElementCollection1">First object to be compared.</param>
            <param name="categoryElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.Keys">
            <summary>
            A collection of Category Ids that are keys to the category elements in the dictionary.
            </summary>
            <returns>Returns a collection of keys. Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.GetSchema">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.ReadXml(System.Xml.XmlReader)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElementCollection.GetKeyForItem(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection">
            <summary>
            A collection of condition elements (<see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement"/>), keyed by their names.
            </summary>
            <remarks>
            This collection is returned by the browsing methods.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection.#ctor">
            <summary>
            Initializes a new, empty instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement})">
            <summary>
            Initializes a new copy of the collection.
            </summary>
            <param name="elements">The collection to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="conditionElementCollection1">First object to be compared.</param>
            <param name="conditionElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="conditionElementCollection1">First object to be compared.</param>
            <param name="conditionElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection.Keys">
            <summary>
            A collection of condition names that are keys to the condition elements in the dictionary.
            </summary>
            <returns>Returns a collection of keys. Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection.GetKeyForItem(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection">
            <summary>
            A collection of node elements (<see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/>), keyed by their names.
            </summary>
            <remarks>
            This collection is returned by the browsing methods.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection.#ctor">
            <summary>
            Initializes a new, empty instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement})">
            <summary>
            Initializes a new copy of the collection.
            </summary>
            <param name="elements">The collection to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="nodeElementCollection1">First object to be compared.</param>
            <param name="nodeElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="nodeElementCollection1">First object to be compared.</param>
            <param name="nodeElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection.Keys">
            <summary>
            A collection of node names that are keys to the condition elements in the dictionary.
            </summary>
            <returns>Returns a collection of keys. Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElementCollection.GetKeyForItem(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection">
            <summary>
            A collection of subcondition elements (<see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement"/>), keyed by their names.
            </summary>
            <remarks>
            This collection is returned by the browsing methods.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection.#ctor">
            <summary>
            Initializes a new, empty instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement})">
            <summary>
            Initializes a new copy of the collection.
            </summary>
            <param name="elements">The collection to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="subconditionElementCollection1">First object to be compared.</param>
            <param name="subconditionElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="subconditionElementCollection1">First object to be compared.</param>
            <param name="subconditionElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection.Keys">
            <summary>
            A collection of subcondition names that are keys to the subcondition elements in the dictionary.
            </summary>
            <returns>Returns a collection of keys. Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection.GetKeyForItem(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement">
            <summary>Contains information gathered about an OPC event attribute.</summary>
            <remarks>
            <para>This object is filled in and returned e.g. when you query for OPC event categories.</para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AEAttributeElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AEAttributeElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.DefaultAttributeId">
            <summary>
            Default attribute Id. Equals to zero.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.DefaultDescription">
            <summary>
            Default description. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement"/> object.</summary>
            <param name="attributeElement">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.#ctor(System.Int64,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.DefaultDataType">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.DataType"/> property. Equals to <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement)~System.String">
            <summary>Converts the object to its string representation.</summary>
            <returns>Returns the main characteristics of the object expressed as a string.</returns>
            <param name="attributeElement">The object to be expressed as a string.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.AttributeId">
            <summary>Attribute ID.</summary>
            <remarks>
            <para>Event attributes are vendor-specific and are associated with the event category and available from the server. 
            Their attribute IDs can be used in the event subscription to specify the information to be returned with an event 
            notification.</para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AEAttributeElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AEAttributeElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.Description">
            <summary>Text name or description for the event attribute.</summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AEAttributeElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AEAttributeElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.DataType">
            <summary>Data type of the event attribute (a VARTYPE).</summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AEAttributeElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AEAttributeElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.ToString">
            <summary>Returns string with the attribute Id and description.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.OpcLabs#EasyOpc#AlarmsAndEvents#AddressSpace#ComTypes#_AEAttributeElement#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.OpcLabs#EasyOpc#AlarmsAndEvents#AddressSpace#ComTypes#_AEAttributeElement#AttributeId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEAttributeElement.AttributeId"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.ResetDataType">
            <summary>
            Resets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.DataType"/> to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.ShouldSerializeDataType">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement.DataType"/> differs from its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement">
            <summary>Contains information gathered about an OPC event category.</summary>
            <remarks>
            <para>This object is filled in and returned e.g. when you query for OPC event categories.</para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.DefaultCategoryId">
            <summary>
            Default category Id. Equals to zero.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.DefaultDescription">
            <summary>
            Default description. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement"/> object.</summary>
            <param name="categoryElement">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.#ctor(System.Int64,System.String,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElementCollection)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.DefaultAttributeElements">
            <summary>
            Default attribute elements. An empty collection.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.DefaultConditionElements">
            <summary>
            Default condition elements. An empty collection.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="attributeElement1">First object to be compared.</param>
            <param name="attributeElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="attributeElement1">First object to be compared.</param>
            <param name="attributeElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement)~System.String">
            <summary>Converts the object to its string representation.</summary>
            <returns>Returns the main characteristics of the object expressed as a string.</returns>
            <param name="categoryElement">The object to be expressed as a string.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.AttributeElements">
            <summary>Event attributes that the server can provide as part of an event notification within this event category.
            </summary>
            <remarks>
            <para>Simple servers may not support <i>any</i> vendor-specific attributes for some or even all event categories.
            </para>
            <para>This is a keyed collection where the key is attribute ID, and the value is an 
            <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEAttributeElement"/>.
            </para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.CategoryId">
            <summary>Category ID.</summary>
            <remarks>
            <para>Event categories are vendor-specific. Their category IDs can be used in the event subscription for specifying 
            filters. Category IDs are unique across the server (e.g. if Category ID x is used for both simple events and 
            condition events, then the ID references the exact same category.)</para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ConditionElements">
            <summary>Event conditions supported by this event category.</summary>
            <remarks>
            <para>This is a keyed collection where the key is condition name, and the value is an 
            <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement"/>.
            </para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.Description">
            <summary>Text name or description for the event category.</summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AECategoryElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ToString">
            <summary>Returns string with the category Id and description.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.OpcLabs#EasyOpc#AlarmsAndEvents#AddressSpace#ComTypes#_AECategoryElement#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.OpcLabs#EasyOpc#AlarmsAndEvents#AddressSpace#ComTypes#_AECategoryElement#CategoryId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AECategoryElement.CategoryId"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ResetAttributeElements">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.AttributeElements"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ShouldSerializeAttributeElements">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.AttributeElements"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ResetConditionElements">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ConditionElements"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ShouldSerializeConditionElements">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement.ConditionElements"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement">
            <summary>Contains information gathered about an OPC event condition.</summary>
            <remarks>
            This object is filled in and returned e.g. when you query for OPC event categories.
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AEConditionElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AEConditionElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.DefaultName">
            <summary>
            Default condition name. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement"/> object.</summary>
            <param name="conditionElement">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.#ctor(System.String,System.String[])">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.DefaultSubconditionNames">
            <summary>
            Default subcondition names. An empty array.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="conditionElement1">First object to be compared.</param>
            <param name="conditionElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="conditionElement1">First object to be compared.</param>
            <param name="conditionElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement)~System.String">
            <summary>Converts the object to its string representation.</summary>
            <returns>Returns the main characteristics of the object expressed as a string.</returns>
            <param name="conditionElement">The object to be expressed as a string.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.Name">
            <summary>Condition name. This is the string to be used for display purposes.</summary>
            <remarks>
            <para>Condition names are server specific.</para>
            <para>The number of condition names returned will vary depending on the sophistication of the server, but is 
            expected to be less than 30 for most servers.</para>
            <para>The Server is in fact allowed to change the available selection at any time. Therefore, a Client should
            do (or at least allow as an option) a fresh Query every time a selection is to be presented to the end user.
            </para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AEConditionElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AEConditionElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.SubconditionNames">
            <summary>An array of subcondition names.</summary>
            <remarks>
            <para>Subcondition names are server specific.</para>
            <para>The number of sub-condition names returned will vary depending on the sophistication of the server, but is 
            expected to be less than 10 for most servers.</para>
            <para>It is expected that the available subcondition names for a particular condition on the Server will be fairly 
            'stable' and that they will generally not change 'online'. However, the Server is in fact allowed to change the 
            available selection at any time. Therefore, a Client should do (or at least allow as an option) a fresh Query every 
            time a selection is to be presented to the end user.</para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AEConditionElement\Properties.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AEConditionElement\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.SetSubconditionNames(System.String[]@)">
            <summary>
            Sets an array of subcondition names.
            </summary>
            <remarks>
            <para>
            Intended for certain COM callers. You can simply use the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.SubconditionNames"/> property setter in .NET instead.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.ToString">
            <summary>Returns a string with the condition name.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.OpcLabs#EasyOpc#AlarmsAndEvents#AddressSpace#ComTypes#_AEConditionElement#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AEConditionElement.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.ResetSubconditionNames">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.SubconditionNames"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.ShouldSerializeSubconditionNames">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement.SubconditionNames"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement">
            <summary>Contains information gathered about an OPC node (area or source in OPC event server's area space).</summary>
            <remarks>
            This object is filled in and returned e.g. when you browse the OPC event server's area space.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.DefaultIsArea">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.IsArea"/>. Equals to <b>false</b>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.DefaultIsBranch">
            <exclude/>
            <summary>Infrastructure.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.DefaultIsLeaf">
            <exclude/>
            <summary>Infrastructure.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.DefaultIsSource">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.IsSource"/>. Equals to <b>false</b>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.DefaultNodeId">
            <exclude/>
            <summary>Infrastructure.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.DefaultQualifiedName">
            <summary>
            Default qualified name.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> object.</summary>
            <param name="nodeElement">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.#ctor(System.String,OpcLabs.BaseLib.Navigation.BrowsePath,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.Root">
            <summary>
            The node element for the root of the address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="nodeElement1">First object to be compared.</param>
            <param name="nodeElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="nodeElement1">First object to be compared.</param>
            <param name="nodeElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.MakePathElements(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a path containing <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/>-s made from browse names, starting from the root.
            </summary>
            <param name="browseNames">The browse names that represent the path to be created.</param>
            <returns>An enumerable of node elements, starting from the root.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.IsArea">
            <summary>The node is an event area (a "folder" the can contain other nodes).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.IsBranch">
            <exclude/>
            <summary>Infrastructure.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.IsLeaf">
            <exclude/>
            <summary>Infrastructure.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.IsSource">
            <summary>The node is an event source that can provide OPC events.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.Name">
            <summary>Short user friendly portion of the namespace pointing to the element. This is the string to be used for 
            display purposes.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.NodeId">
            <exclude/>
            <summary>Infrastructure.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.NodePath">
            <exclude/>
            <summary>Infrastructure.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.QualifiedName">
            <summary>The fully qualified name for this area or source.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.OpcLabs#EasyOpc#AlarmsAndEvents#AddressSpace#ComTypes#_AENodeElement#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AENodeElement.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement">
            <summary>Contains information about an OPC event subcondition.</summary>
            <remarks>Available in ActiveSubcondition and values of SubconditionElements dictionary of 
            <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.DefaultDefinition">
            <summary>
            Default definition of the subcondition. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.DefaultDescription">
            <summary>
            Default description. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.DefaultName">
            <summary>
            Default subcondition name. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.DefaultSeverity">
            <summary>
            Default subcondition severity. Equals to zero.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement"/> object.</summary>
            <param name="subconditionElement">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="subconditionElement1">First object to be compared.</param>
            <param name="subconditionElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="subconditionElement1">First object to be compared.</param>
            <param name="subconditionElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement)~System.String">
            <summary>Converts the object to its string representation.</summary>
            <returns>Returns the main characteristics of the object expressed as a string.</returns>
            <param name="subconditionElement">The object to be expressed as a string.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Name">
            <summary>The name assigned to the sub-condition, e.g. "HighAlarm" for a sub-condition of "LevelAlarm".</summary>
            <remarks>
            In the case of a single-state alarm, the sub-condition name is the same as the associated condition name. The name of the 
            sub-condition is unique within its associated condition.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Definition">
            <summary>An expression which defines the sub-state represented by the sub-condition.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Severity">
            <summary>The severity of any event notifications generated on behalf of this sub-condition.</summary>
            <remarks>
            Remark: different sub-conditions of the same condition may have different severity levels.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Description">
            <summary>The text string to be included in any event notification generated on behalf of this sub-condition.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.ToString">
            <summary>Returns a string with the subcondition name.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.OpcLabs#EasyOpc#AlarmsAndEvents#AddressSpace#ComTypes#_AESubconditionElement#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.ComTypes._AESubconditionElement.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary">
            <summary>
            This is a dictionary where the key is category ID, and the value an array of event attribute IDs for that category.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.#ctor">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.#ctor(System.Collections.Generic.IDictionary{System.Int64,System.Int64[]})">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.#ctor(System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.Empty">
            <summary>
            An empty OPC-A&amp;E attribute set dictionary.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="attributeSetDictionary1">First object to be compared.</param>
            <param name="attributeSetDictionary2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="attributeSetDictionary1">First object to be compared.</param>
            <param name="attributeSetDictionary2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.GetSchema">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.ReadXml(System.Xml.XmlReader)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary">
            <summary>
            This is a dictionary where the key is attribute ID, and the value is the actual value of that event attribute.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.#ctor">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.Int64,System.Object})">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.#ctor(System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="attributeValueDictionary1">First object to be compared.</param>
            <param name="attributeValueDictionary2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="attributeValueDictionary1">First object to be compared.</param>
            <param name="attributeValueDictionary2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.Empty">
            <summary>
            An empty OPC-A&amp;E attribute value dictionary.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.GetSchema">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.ReadXml(System.Xml.XmlReader)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState">
            <summary>Contains current state information about an OPC condition instance.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState)">
            <summary>Initializes a new instance of the class, from other <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.</summary>
            <param name="conditionState">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/> object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElementCollection,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement,System.Boolean,System.Boolean,System.Boolean,OpcLabs.EasyOpc.DataAccess.DAQuality,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.DefaultAcknowledgeTime">
            <summary>
            Default acknowledge time. In UTC.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.DefaultActiveTime">
            <summary>
            Default active time. In UTC.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.DefaultInactiveTime">
            <summary>
            Default inactive time. In UTC.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.DefaultQuality">
            <summary>
            Default quality. In UTC.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.DefaultSubconditionActiveTime">
            <summary>
            Default subcondition active time.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState,OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState,OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionElements">
            <summary>Sub-conditions defined for this condition.</summary>
            <remarks>
            <para>For multi-state conditions, there will be more than one subcondition. For single-state conditions, there will 
            be one subcondition.</para>
            <para>This is a keyed collection where the key is the subcondition name, and the value is an 
            <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement"/>.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AttributeValues">
            <summary>Attributes associated with latest event notification for this condition.</summary>
            <remarks>
            <para>Attributes are vendor-specific.</para>
            <para>If a server cannot provide reasonable data for an attribute, the returned VARIANT should is set to VT_EMPTY.
            </para>
            <para>This is a dictionary where the key is attribute ID, and the value is the actual value of that event attribute.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveSubcondition">
            <summary>Currently active sub-condition, for multi-state conditions which are active. For a single-state condition, 
            this contains the information about the condition itself.</summary>
            <remarks>
            <para>Contains an <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AESubconditionElement"/>.</para>
            <para>For inactive conditions, this value is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Enabled">
            <summary>The condition is enabled.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Active">
            <summary>The condition is active.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Acknowledged">
            <summary>The condition is acknowledged.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Quality">
            <summary>Quality associated with the condition state.</summary>
            <remarks>
            <para>Values are as defined for the OPC Quality Flags in the OPC Data Access Server specification.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveTime">
            <summary>Time of the most recent transition into the condition. There may be transitions among the sub-conditions 
            which are more recent. In UTC.</summary>
            <remarks>
            <para>Contains 0 if the condition has never been active.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveTimeLocal">
            <summary>Time of the most recent transition into the condition. There may be transitions among the sub-conditions 
            which are more recent. In local time.</summary>
            <remarks>
            <para>Contains 0 if the condition has never been active.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionActiveTime">
            <summary>Time of the most recent transition into active subcondition. This is the time value which must be specified 
            when acknowledging the condition. In UTC.</summary>
            <remarks>
            <para>Contains 0 if the condition has never been active.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionActiveTimeLocal">
            <summary>Time of the most recent transition into active subcondition. This is the time value which must be specified 
            when acknowledging the condition. In local time.</summary>
            <remarks>
            <para>Contains 0 if the condition has never been active.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.InactiveTime">
            <summary>Time of the most recent transition out of this condition. In UTC.</summary>
            <remarks>
            <para>Contains 0 if the condition has never been active, or if it is currently active for the first time and has 
            never been exited.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.InactiveTimeLocal">
            <summary>Time of the most recent transition out of this condition. In local time</summary>
            <remarks>
            <para>Contains 0 if the condition has never been active, or if it is currently active for the first time and has 
            never been exited.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgeTime">
            <summary>The time of the most recent acknowledgment of this condition (of any sub-condition). In UTC.</summary>
            <remarks>
            <para>Contains 0 if the condition has never been acknowledged.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgeTimeLocal">
            <summary>The time of the most recent acknowledgment of this condition (of any sub-condition). In local time.</summary>
            <remarks>
            <para>Contains 0 if the condition has never been acknowledged.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgerId">
            <summary>This is the ID of the client who last acknowledged this condition.</summary>
            <remarks>
            <para>Contains an empty string if the condition has never been acknowledged.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Comment">
            <summary>The comment string passed in by the client who last acknowledged this condition.</summary>
            <remarks>
            <para>Contains an empty string if the condition has never been acknowledged.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_AEConditionState#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetAcknowledgeTime">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgeTime"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeAcknowledgeTime">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgeTime"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetAcknowledgeTimeLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgeTimeLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeAcknowledgeTimeLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgeTimeLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetActiveTime">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveTime"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeActiveTime">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveTime"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetActiveTimeLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveTimeLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeActiveTimeLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveTimeLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetAttributeValues">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AttributeValues"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeAttributeValues">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AttributeValues"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetInactiveTime">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.InactiveTime"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeInactiveTime">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.InactiveTime"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetInactiveTimeLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.InactiveTimeLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeInactiveTimeLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.InactiveTimeLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetQuality">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Quality"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeQuality">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Quality"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetSubconditionActiveTime">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionActiveTime"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeSubconditionActiveTime">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionActiveTime"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetSubconditionActiveTimeLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionActiveTimeLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeSubconditionActiveTimeLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionActiveTimeLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ResetSubconditionElements">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionElements"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ShouldSerializeSubconditionElements">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionElements"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData">
            <summary>Contains event notification information.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData"/> object.</summary>
            <param name="eventData">Event object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.#ctor(System.String,System.DateTime,System.String,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType,System.Int64,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,OpcLabs.EasyOpc.DataAccess.DAQuality,System.Boolean,System.DateTime,System.Int64,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.DefaultActiveTime">
            <summary>
            Default active time. In UTC.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.DefaultEventType">
            <summary>
            Default event type.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.DefaultQuality">
            <summary>
            Default quality.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.DefaultTime">
            <summary>
            Default time. In UTC.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Null">
            <summary>
            An empty OPC-A&amp;E event.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.QualifiedSourceName">
            <summary>The source of event notification.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Time">
            <summary>Time of the event occurrence - for conditions, time that the condition transitioned into the new state or 
            sub-condition. In UTC.</summary>
            <remarks>
            <para>For example, if the event notification is for acknowledgment of a condition, this would be the time that the 
            condition became acknowledged.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.TimeLocal">
            <summary>Time of the event occurrence - for conditions, time that the condition transitioned into the new state or 
            sub-condition. In local time.</summary>
            <remarks>
            <para>For example, if the event notification is for acknowledgment of a condition, this would be the time that the 
            condition became acknowledged.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Message">
            <summary>Event notification message describing the event.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.EventType">
            <summary>Simple, Condition-Related, or Tracking event.</summary>
            <remarks>
            <para>One of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> constants.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.CategoryId">
            <summary>Event category ID.</summary>
            <remarks>
            <para>Standard and Vendor-specific event category codes.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Severity">
            <summary>Event severity (1..1000).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.AttributeValues">
            <summary>Vendor-specific event attributes.</summary>
            <remarks>
            <para>Attributes are vendor-specific.</para>
            <para>If a server cannot provide reasonable data for an attribute, the returned VARIANT should be set to VT_EMPTY.
            </para>
            <para>This is a dictionary where the key is attribute ID, and the value is the actual value of that event attribute.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ConditionName">
            <summary>The name of the condition related to this event notification.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.SubconditionName">
            <summary>The name of the current sub-condition, for multi-state conditions. For a single-state condition, this contains 
            the condition name.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Enabled">
            <summary>New state of the condition: The condition is enabled.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Active">
            <summary>New state of the condition: The condition is active.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Acknowledged">
            <summary>New state of the condition: The condition is acknowledged.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Quality">
            <summary>Quality associated with the condition.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>Values are as defined for the OPC Quality Flags in the OPC Data Access Server specification.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.AcknowledgeRequired">
            <summary>This flag indicates that the related condition requires acknowledgment of this event.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>The determination of those events which require acknowledgment is server specific. For example, transition into 
            a LimitAlarm condition would likely require an acknowledgment, while the event notification of the resulting 
            acknowledgment would likely not require an acknowledgment.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActiveTime">
            <summary>Time that the condition became active (for single-state conditions), or the time of the transition into the 
            current sub-condition (for multi-state conditions). In UTC.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>This time is used by the client when acknowledging the condition.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActiveTimeLocal">
            <summary>Time that the condition became active (for single-state conditions), or the time of the transition into the 
            current sub-condition (for multi-state conditions). In local time.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>This time is used by the client when acknowledging the condition.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Cookie">
            <summary>Server defined cookie associated with the event notification.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>The cookie is used by the client when acknowledging the condition. This value is opaque to the client.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActorId">
            <summary>Actor ID.</summary>
            <remarks>
            <para><b>This property is used only for Tracking Events and for Condition-Related Events which are acknowledgment 
            notifications (see EventType).</b> </para>
            <para>For tracking events, this is the actor ID for the event notification.</para>
            <para>For condition-related events, this is the AcknowledgerID when the new state is acknowledged. If the 
            AcknowledgerID is an empty string, the event was automatically acknowledged by the server.</para>
            <para>For other events, the value is an empty string.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_AEEventData#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ResetActiveTime">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActiveTime"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ShouldSerializeActiveTime">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActiveTime"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ResetActiveTimeLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActiveTimeLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ShouldSerializeActiveTimeLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActiveTimeLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ResetAttributeValues">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.AttributeValues"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ShouldSerializeAttributeValues">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.AttributeValues"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ResetEventType">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.EventType"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ShouldSerializeEventType">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.EventType"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ResetQuality">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Quality"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ShouldSerializeQuality">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Quality"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ResetTime">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Time"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ShouldSerializeTime">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Time"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ResetTimeLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.TimeLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ShouldSerializeTimeLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.TimeLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter">
            <summary>Contains the filtering criteria to be used for the event subscription.</summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AESubscriptionFilter\Properties.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AESubscriptionFilter\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.DefaultLowSeverity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.LowSeverity"/> property. Equals to 1.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.DefaultHighSeverity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.HighSeverity"/> property. Equals to 1000.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType,System.Int64[],System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor[],OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor[])">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> object.</summary>
            <param name="subscriptionFilter">Subscription filter object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.DefaultAreas">
            <summary>
            Default areas. An empty array.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.DefaultCategories">
            <summary>
            Default categories. An empty array.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.DefaultSources">
            <summary>
            Default sources. An empty array.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Empty">
            <summary>
            An empty OPC-A&amp;E subscription filter.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.DefaultEventTypes">
            <summary>
            Default event types. Equals to all types included.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="subscriptionFilter1">First object to be compared.</param>
            <param name="subscriptionFilter2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="subscriptionFilter1">First object to be compared.</param>
            <param name="subscriptionFilter2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Areas">
            <summary>Array of process area strings of interest - only events or conditions in these areas will be reported.</summary>
            <remarks>
            Area strings can be obtained using browsing. It is possible to specify areas using the wildcard syntax.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Categories">
            <summary></summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.EventTypes">
            <summary>An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> value specifying which event types are of interest (essentially, a bit mask).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.HighSeverity">
            <summary>Highest severity of interest (inclusive).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.LowSeverity">
            <summary>Lowest severity of interest (inclusive).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Sources">
            <summary>Array of event sources of interest - only events from these sources will be reported.</summary>
            <remarks>
            Source strings can be obtained using browsing. It is possible to specify sources using the wildcard syntax.
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_AESubscriptionFilter\Properties.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_AESubscriptionFilter\Properties.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.SetAreas(System.Object)">
            <summary>
            Sets array of process area strings of interest - only events or conditions in these areas will be reported.
            </summary>
            <remarks>
            <para>
            Intended for certain COM callers. You can simply use the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Areas"/> property setter in .NET instead.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.SetCategories(System.Object)">
            <summary>
            Sets array of event category IDs of interest.
            </summary>
            <remarks>
            <para>
            Intended for certain COM callers. You can simply use the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Categories"/> property setter in .NET instead.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.SetSources(System.Object)">
            <summary>
            Sets array of event sources of interest - only events from these sources will be reported.
            </summary>
            <remarks>
            <para>
            Intended for certain COM callers. You can simply use the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Sources"/> property setter in .NET instead.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_AESubscriptionFilter#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.ResetAreas">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Areas"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.ShouldSerializeAreas">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Areas"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.ResetCategories">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Categories"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.ShouldSerializeCategories">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Categories"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.ResetEventTypes">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.EventTypes"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.ShouldSerializeEventTypes">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.EventTypes"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.ResetSources">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Sources"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.ShouldSerializeSources">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Sources"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities">
            <summary>
            Contains static members that facilitate work with types related to OPC Alarms&amp;Events.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidAttributeId(System.Int64)">
            <summary>
            Determines whether a given attribute Id value is valid in OPC Alarms&amp;Events. 
            </summary>
            <param name="attributeId">The attribute Id to be tested.</param>
            <returns><c>true</c> if <paramref name="attributeId"/> is a valid attribute Id; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidCategoryId(System.Int64)">
            <summary>
            Determines whether a given category Id value is valid in OPC Alarms&amp;Events. 
            </summary>
            <param name="categoryId">The category Id to be tested.</param>
            <returns><c>true</c> if <paramref name="categoryId"/> is a valid category Id; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidCookie(System.Int64)">
            <summary>
            Determines whether a given cookie value is valid in OPC Alarms&amp;Events. 
            </summary>
            <param name="cookie">The cookie to be tested.</param>
            <returns><c>true</c> if <paramref name="cookie"/> is a valid cookie; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidDataType(OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>
            Determines whether a given <see cref="T:OpcLabs.BaseLib.ComInterop.VarType"/> is a valid data type in OPC Alarms&amp;Events.
            </summary>
            <param name="dataType">The data type to be tested.</param>
            <returns><c>true</c> if <paramref name="dataType"/> is a valid data type in OPC Alarms&amp;Events;
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidEventSeverity(System.Int32)">
            <summary>
            Determines whether a given event severity value is valid in OPC Alarms&amp;Events. 
            Zero severities are not allowed.
            </summary>
            <param name="eventSeverity">The event severity to be tested.</param>
            <returns><c>true</c> if <paramref name="eventSeverity"/> is a valid event severity; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidEventSeverity(System.Int32,System.Boolean)">
            <summary>
            Determines whether a given event severity value is valid in OPC Alarms&amp;Events. 
            You can choose whether zero severities are also allowed.
            </summary>
            <param name="eventSeverity">The event severity to be tested.</param>
            <param name="allowZero">Indicates that zero represents a valid event severity for the test.</param>
            <returns><c>true</c> if <paramref name="eventSeverity"/> is a valid event severity; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidEventTypeFilter(System.Int64)">
            <summary>
            Determines whether a given event type filter value is valid in OPC Alarms&amp;Events. 
            Empty event type filters are not allowed.
            </summary>
            <param name="eventTypeFilter">The event type filter to be tested.</param>
            <returns><c>true</c> if <paramref name="eventTypeFilter"/> is a valid event type filter; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidEventTypeFilter(System.Int64,System.Boolean)">
            <summary>
            Determines whether a given event type filter value is valid in OPC Alarms&amp;Events. 
            You can choose whether empty event type filters are also allowed.
            </summary>
            <param name="eventTypeFilter">The event type filter to be tested.</param>
            <param name="allowEmpty">Indicates that empty filter is valid for the test.</param>
            <returns><c>true</c> if <paramref name="eventTypeFilter"/> is a valid event type filter; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidNotificationRate(System.Int32)">
            <summary>
            Determines whether a given notification rate value is valid in OPC Alarms&amp;Events. 
            </summary>
            <param name="notificationRate">The notification rate value to be tested.</param>
            <returns><c>true</c> if <paramref name="notificationRate"/> is a valid notification rate; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidTime(System.DateTime)">
            <summary>
            Determines whether a given time value is valid in OPC Alarms&amp;Events. 
            </summary>
            <param name="time">The time to be tested.</param>
            <returns><c>true</c> if <paramref name="time"/> is a valid time; 
            <c>false</c> otherwise.</returns>
            <remarks>Time must be in UTC, or it must be either <see cref="F:System.DateTime.MinValue"/> or <see cref="F:System.DateTime.MaxValue"/>.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.IsValidTimeLocal(System.DateTime)">
            <summary>
            Determines whether a given local time value is valid in OPC Alarms&amp;Events. 
            </summary>
            <param name="time">The local time to be tested.</param>
            <returns><c>true</c> if <paramref name="time"/> is a valid time; 
            <c>false</c> otherwise.</returns>
            <remarks>Time must be local, or it must be either <see cref="F:System.DateTime.MinValue"/> or <see cref="F:System.DateTime.MaxValue"/>.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateAttributeId(System.Int64,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateCategoryId(System.Int64,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateDataType(OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateEventTypeFilter(System.Int64,System.Boolean,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateEventTypeFilter(System.Int64,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateEventSeverity(System.Int32,System.Boolean,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateEventSeverity(System.Int32,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateNotificationRate(System.Int32,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateTime(System.DateTime,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEUtilities.ValidateTimeLocal(System.DateTime,System.String)">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for classes that facilitate easy work with OPC Alarms and Events.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientConfigurationEvents">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration"/> events to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientConfigurationEvents.LogEntry(System.Object,OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
            <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.LogEntry"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientEvents">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> events to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientEvents.EventingFailure(System.Object,OpcLabs.BaseLib.FailureEventArgs)">
            <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.EventingFailure"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientEvents.Notification(System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.Item(System.Int32)">
            <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.Add(System.Int32,System.Object)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.ContainsKey(System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.Remove(System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.TryGetValue(System.Int32,System.Object@)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeSetDictionary.ContainsValue(System.Int64[])">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeValueDictionary"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.Item(System.Int32)">
            <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.Add(System.Int32,System.Object)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.ContainsKey(System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.Remove(System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.TryGetValue(System.Int32,System.Object@)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEAttributeValueDictionary.ContainsValue(System.Object)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.BrowseFilter">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.BrowseFilter"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.VendorFilter">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.VendorFilter"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.SubconditionElements">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionElements"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.AttributeValues">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AttributeValues"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.ActiveSubcondition">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveSubcondition"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.Enabled">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Enabled"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.Active">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Active"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.Acknowledged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Acknowledged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.Quality">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Quality"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.ActiveTime">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveTime"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.ActiveTimeLocal">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.ActiveTimeLocal"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.SubconditionActiveTime">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionActiveTime"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.SubconditionActiveTimeLocal">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.SubconditionActiveTimeLocal"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.InactiveTime">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.InactiveTime"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.InactiveTimeLocal">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.InactiveTimeLocal"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.AcknowledgeTime">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgeTime"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.AcknowledgeTimeLocal">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgeTimeLocal"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.AcknowledgerId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.AcknowledgerId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEConditionState.Comment">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState.Comment"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.QualifiedSourceName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.QualifiedSourceName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Time">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Time"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.TimeLocal">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.TimeLocal"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Message">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Message"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.EventType">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.EventType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.CategoryId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.CategoryId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Severity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Severity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.AttributeValues">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.AttributeValues"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.ConditionName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ConditionName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.SubconditionName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.SubconditionName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Enabled">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Enabled"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Active">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Active"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Acknowledged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Acknowledged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Quality">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Quality"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.AcknowledgeRequired">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.AcknowledgeRequired"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.ActiveTime">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActiveTime"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.ActiveTimeLocal">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActiveTimeLocal"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.Cookie">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.Cookie"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventData.ActorId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData.ActorId"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.StandardName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.IsSimple">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.IsSimple"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.IsTracking">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.IsTracking"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.IsCondition">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.IsCondition"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.InternalValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.InternalValue"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.NumericalValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.NumericalValue"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.ArgumentString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.ArgumentString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.BrowsePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.BrowsePath"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.IsNull">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.IsNull"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.IsRoot">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.IsRoot"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.NodeId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.NodeId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.NodePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.NodePath"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.Match(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.NodeDescriptor.Match(OpcLabs.EasyOpc.NodeDescriptor)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.QualifiedName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.QualifiedName"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.Clone">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.Clone"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_AESubscriptionFilter\Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.EventTypes">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.EventTypes"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.Categories">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Categories"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.LowSeverity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.LowSeverity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.HighSeverity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.HighSeverity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.Areas">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Areas"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.Sources">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Sources"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_AESubscriptionFilter\Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.SetAreas(System.Object)">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Areas"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.SetCategories(System.Object)">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Categories"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionFilter.SetSources(System.Object)">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter.Sources"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.Active">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Active"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.NotificationRate">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.NotificationRate"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.Filter">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Filter"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.ReturnedAttributesByCategory">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.ReturnedAttributesByCategory"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.CustomReference">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.Widget.CustomReference"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.GetService(System.Type)">
            <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.GetServiceByName(System.String)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IServiceProviderExtension.GetServiceByName(System.IServiceProvider,System.String)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.ValueEquals(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.AdaptableParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.AdaptableParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.SharedInstance">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.SharedInstance"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.SharedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.SharedParameters"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\Specialized\TopServer_AE.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.CustomReference">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.Widget.CustomReference"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetService(System.Type)">
            <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetServiceByName(System.String)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IServiceProviderExtension.GetServiceByName(System.IServiceProvider,System.String)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.ValueEquals(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.CallbackQueueCapacity">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackQueueCapacity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.CallbackQueueIdleTimeToSleep">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackQueueIdleTimeToSleep"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.QueueCallbacks">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.QueueCallbacks"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.InstanceParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.InstanceParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.Isolated">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Isolated"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.IsolatedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.IsolatedParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.LicenseInfo">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.LicenseInfo"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.PullNotificationQueueCapacity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.PullNotificationQueueCapacity"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.SupportedTechnologies">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.SupportedTechnologies"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.AcknowledgeCondition(System.Object,System.Object,System.String,System.DateTime,System.Int32,System.String,System.String)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64)"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.BrowseAreas(System.String,System.String,System.String)">
            <summary>
            Browses the specified area for child areas.
            Uses computer name and server class for specifying the OPC server.
            A parent area is passed in. No filtering.
            </summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="parentQualifiedName">Fully qualified name of the parent area to be browsed (empty string for root)
            </param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular area found. The keys of the keyed collection are the names of the areas.</returns>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.BrowseNodes(System.Object,System.Object,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.BrowseServers(System.String)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseServers.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.BrowseSources(System.String,System.String,System.String)">
            <summary>
            Browses the specified area for child sources.
            Uses computer name and server class for specifying the OPC server.
            A parent area is passed in. No filtering.
            </summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="parentQualifiedName">Fully qualified name of the parent area to be browsed (empty string for root)
            </param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular source found. The keys of the keyed collection are the names of the sources.</returns>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,System.Object,System.Boolean)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,System.Boolean)"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetConditionState(System.Object,System.Object,System.String,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetConditionStateList(System.Object,System.Object,System.String,System.Collections.IList)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.QueryEventCategories(System.Object,System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.QuerySourceConditions(System.Object,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\QuerySourceConditions.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.RefreshEventSubscription(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.RefreshEventSubscription(System.Int32)"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\RefreshEventSubscription.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.Reset">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Reset"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.SubscribeEvents(System.Object,System.Object,System.Boolean,System.Object)">
            <summary>
            Subscribe to OPC events. Specify server descriptor and subscription parameters objects, and "refresh when active" 
            flag.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="subscriptionParameters">Subscription parameters to be used when the subscription is created</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.UnsubscribeAllEvents">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeAllEvents"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\UnsubscribeAllEvents.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.UnsubscribeEvents(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeEvents(System.Int32)"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\UnsubscribeEvents.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.PullNotification(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.PullNotification(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.Int32)"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.PullNotificationList(System.Int32,System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.NamespaceDoc">
            <summary>
            This namespace contains implementation classes that facilitate easy work with OPC Alarms and Events.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.Resource1.AEEventTypeConverter_ConvertTo_NotAEEventType">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not AEEventType, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.Resource1.EasyAEClientCompositor_Add_HandleRangeOverlap">
            <summary>
              Looks up a localized string similar to The new OPC Alarms&amp;Events client handle range overlaps with an existing client in the composite..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.CompositeEasyAEClient">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.DelegatingEasyAEClient">
            <tocexclude/>
            <summary>
            Delegates all IEasyAEClient calls to the inner client.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.DelegatingEasyAEClient.DelegationRecord.ToString">
            <remarks>
            Among others, provides better result when the delegated state is output as part of XXXXEventArgs. The 
            doubling or even further nesting of "[]" is intentional in this case, to provide a minimal visual 
            distinction of the fact the a delegation is taking place.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.DelegatingEasyAEClient.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
            <summary>Initializes a new instance of the class.</summary>
            <param name="innerClient">Inner client to which the functionality is delegated.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.DelegatingEasyAEClient.DelegateArguments(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler)">
            <summary>
            Delegates operation arguments, <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.DelegatingEasyAEClient.UndelegateEventArgs(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Undelegates event arguments of type <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.DelegatingEasyAEClient.Delegate(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
            <summary>
            Delegates operation arguments, <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.DelegatingEasyAEClient.Undelegate(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Undelegates event arguments of type <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.DelegatingEasyAEClient.InnerClientCallback(System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Undelegates the event arguments and invokes the inner callback.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EnqueuingEasyAEClient">
            <exclude/>  
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EnqueuingEasyAEClient.DefaultPullNotificationQueueCapacity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EnqueuingEasyAEClient.PullNotificationQueueCapacity"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EnqueuingEasyAEClient.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient">
            <tocexclude/>
            <summary>
            Forwards all IEasyAEClient calls to the inner client.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.#ctor">
            <overloads>
            <summary>Initializes a new instance of the class.</summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
            <param name="innerClient">Inner client to which the functionality is forwarded.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.InnerClient">
            <summary>
            Inner client to which the functionality is forwarded.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.Dispose">
            <inheridoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.HandleRanges">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.HandleRanges"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.SupportedTechnologies">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SupportedTechnologies"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.IsKnownEventSubscriptionHandle(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.IsKnownEventSubscriptionHandle(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,System.Boolean)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,System.Boolean)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.RefreshEventSubscription(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.RefreshEventSubscription(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.UnsubscribeEvents(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeEvents(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.UnsubscribeAllEvents">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeAllEvents"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.Notification">
            <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.EventingFailure">
            <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.EventingFailure"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.Delegate(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
            <summary>
            Delegates operation arguments of type <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type serviceType, or <c>null</c> if there is no service object of type <paramref name="serviceType"/>.
            </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.InvokeEventingFailure(OpcLabs.BaseLib.FailureEventArgs)">
            <summary>
            Invokes the <see cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.EventingFailure"/> event handler.
            </summary>
            <param name="failureEventArgs">The event arguments.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.InvokeNotification(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Invokes the <see cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.Notification"/> event handler.
            </summary>
            <param name="notificationEventArgs">The event arguments.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.Undelegate(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Undelegates event arguments of type <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.Undelegate(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs[])">
            <summary>
            Undelegates an array of event arguments of type <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.ForwardingEasyAEClient.InnerClientOnNotification(System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Undelegates the event arguments and invokes the base <see cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/> event.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.LicensingEasyAEClient">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.LicensingEasyAEClient.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.LicensingEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.LicensingEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.LicensingEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.LicensingEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.LicensingEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.LicensingEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.LicensingEasyAEClient.LicenseInfo">
            <inheritdoc cref="P:OpcLabs.BaseLib.ILicenseInfoProvider.LicenseInfo"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.PSBoxingEasyAEClient.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
            <summary>Initializes a new instance of the class.</summary>
            <param name="innerClient">Inner client to which the functionality is delegated.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.PSBoxingEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.PSBoxingEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.PSBoxingEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.PSBoxingEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.PSBoxingEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.PSBoxingEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.PSBoxingEasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.UnsupportedEasyAEClient">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EasyAEClientCompositor">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EasyAEClientCompositor.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EasyAEClientCompositor.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type serviceType, or <c>null</c> if there is no service object of type <paramref name="serviceType"/>.
            </returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EasyAEClientEnqueuingCompositor">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EasyAEClientSettingsCompositor">
            <exclude/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EasyAEClientSettingsCompositor.InstanceParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientSettings.InstanceParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EasyAEClientSettingsCompositor.IsolatedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientSettings.IsolatedParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.EasyAEClientSettingsCompositor.Isolated">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientSettings.Isolated"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Implementation.AENodeDescriptorConverter">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.EasyAEClientStaticDataBase">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.NamespaceDoc">
            <summary>
            This namespace contains internal classes that facilitate easy work with OPC Alarms and Events.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.Resource1.SimulatedEasyAEClient_BrowseNodes_NoParentBrowsePath">
            <summary>
              Looks up a localized string similar to The simulated OPC-A&amp;E client does not support browsing nodes without a given parent browse path..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.Resource1.SimulatedEasyAEClient_BrowseNodes_ParentNotAnArea">
            <summary>
              Looks up a localized string similar to When browsing nodes in a simulated OPC-A&amp;E client, the parent node is not an area..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.Resource1.SimulatedEasyAEClient_GetComponent_ClsidNotFound">
            <summary>
              Looks up a localized string similar to The simulated OPC-A&amp;E client cannot find a component with given CLSID..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.EasyAEClientPool">
            <exclude/>
            <summary>
            Provides <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> objects according to specified criteria.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.EasyAEClientPool.Instance">
            <summary>
            A single instance of the provider.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.EasyAEClientPool.CreateObject(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector,OpcLabs.BaseLib.Licensing.LicensingContext)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Abstract.ParameterizedObjectPool`3.CreateObject(`1,`2)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient">
            <exclude/>  
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient"/> object.</summary>
            <param name="client">The simulated OPC-A&amp;E client object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient.ValueEquals(OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient.ShouldSerializeHandleRanges">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.SimulatedEasyAEClient.HandleRanges"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode">
            <summary>
            Specifies how various operations are performed on OPC Alarms&amp;Events servers.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode)">
            <param name="mode">Client mode to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.Default">
            <summary>
            Default client mode.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientMode1">First object to be compared.</param>
            <param name="clientMode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientMode1">First object to be compared.</param>
            <param name="clientMode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_AEClientMode#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._AEClientMode.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode)">
            <summary>
            Infrastructure.
            </summary>
            <param name="clientMode">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for classes that are used by the OPC Alarms&amp;Events engine. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._AEClientMode">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._AEClientMode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._AEClientMode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._AEClientMode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._AEClientMode.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._AEClientMode.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._AEClientMode.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._AEClientMode.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters.Reset">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.Reset"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods.ServerDetach">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.ServerDetach"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode.AcknowledgerId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.AcknowledgerId"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.ClientReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ClientReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.ExecutionContext">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ExecutionContext"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.ServerFailedReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerFailedReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.ServerShutdownReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerShutdownReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.ServerStatusCheckPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerStatusCheckPeriod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.TurnOffActivationSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffActivationSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.TurnOffCallSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffCallSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.UseCustomSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.UseCustomSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.RequestQueueSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.RequestQueueSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.LinkCallbackQueueSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.LinkCallbackQueueSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.ResponseQueueSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.ResponseQueueSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.BrowseNodesChunk">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.BrowseNodesChunk"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.LinkRetrialPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.LinkRetrialPeriod"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters"/> to COM Engines.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.AutoAdjustmentPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.AutoAdjustmentPeriod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.GarbageCollectionPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.GarbageCollectionPeriod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.WorkerSleepDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.WorkerSleepDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.DefaultEventQueueSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DefaultEventQueueSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.MaxClientAge">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.MaxClientAge"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.ClientLruSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.ClientLruSize"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.HoldPeriods">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.HoldPeriods"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.Mode">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Mode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.Reset">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Reset"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.LinkRetrialDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.LinkRetrialDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.BufferSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.BufferSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.FastestNotificationRate">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.FastestNotificationRate"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.SlowestNotificationRate">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.SlowestNotificationRate"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.ClientParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ClientParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.EngineParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.EngineParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.LinkParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.LinkParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.MachineParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.MachineParameters"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.Reset">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.Reset"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode">
            <summary>
            Specifies how the OPC client object performs various operations on OPC Alarms&amp;Events servers.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.DefaultAcknowledgerId">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.AcknowledgerId"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.AEClientMode)">
            <param name="mode">Client mode to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode)">
            <param name="mode">Client mode to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.Default">
            <summary>
            Default client mode.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientMode1">First object to be compared.</param>
            <param name="clientMode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientMode1">First object to be compared.</param>
            <param name="clientMode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.AcknowledgerId">
            <summary>A string identifying who is acknowledging the conditions.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_EasyAEClientMode#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientMode.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.NamespaceDoc">
            <summary>
            This namespace contains classes that are used by the OPC Alarms&amp;Events engine. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters">
            <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters)">
            <param name="adaptableParameters">Isolator to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.Default">
            <summary>
            Default adaptable parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters"/> is equal to the current object.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.Reset">
            <summary>
            Sets the object properties back to their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_EasyAEAdaptableParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEAdaptableParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods">
            <summary>
            Contains optimization parameters that reduce the load on the OPC server by keeping the connections open should they
            be soon needed again.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.DefaultServerDetach">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.ServerDetach"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods)">
            <param name="holdPeriods">Hold periods to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientHoldPeriods1">First object to be compared.</param>
            <param name="clientHoldPeriods2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientHoldPeriods1">First object to be compared.</param>
            <param name="clientHoldPeriods2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.Default">
            <summary>
            Default client hold periods.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.ServerDetach">
            <summary>After a server object is detached, connection to the OPC server 
            will be maintained at least for the time period specified here.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_EasyAEClientHoldPeriods#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientHoldPeriods.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters">
            <summary>
            Contains parameters that influence operations that target a specific OPC server a whole.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.DefaultBrowseNodesChunk">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.BrowseNodesChunk"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.DefaultLinkCallbackQueueSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.LinkCallbackQueueSize"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.DefaultLinkRetrialPeriod">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.LinkRetrialPeriod"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.DefaultRequestQueueSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.RequestQueueSize"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.DefaultResponseQueueSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.ResponseQueueSize"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.#ctor(OpcLabs.EasyOpc.Engine.EasyClientParameters)">
            <param name="clientParameters">Client parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters)">
            <param name="clientParameters">Client parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.Default">
            <summary>
            Default client parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientParameters1">First object to be compared.</param>
            <param name="clientParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientParameters1">First object to be compared.</param>
            <param name="clientParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.RequestQueueSize">
            <summary>
            The maximum number of requests in a global queue.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.LinkCallbackQueueSize">
            <summary>
            Size of the internal queue that holds callback data from the OPC server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.ResponseQueueSize">
            <summary>
            The maximum number of responses in a global queue.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.BrowseNodesChunk">
            <summary>
            Number of nodes requested in one call when browsing for OPC areas or sources.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.LinkRetrialPeriod">
            <summary>
            Link retrial period. Number of milliseconds.
            Determines how often will the component run the internal process to re-connect to OPC links (live event 
            subscriptions) that have failed (e.g. due to incorrect parameters). 
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_EasyAEClientParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEClientParameters.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_EasyAEClientParameters#ExecutionContext">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ExecutionContext"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters">
            <summary>
            Contains parameters that are perpetually shared among all instances of the OPC Alarms&amp;Events client object.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.DefaultClientLruSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.ClientLruSize"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.DefaultMaxClientAge">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.MaxClientAge"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.#ctor(OpcLabs.EasyOpc.Engine.EasyEngineParameters)">
            <param name="engineParameters">Engine parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters)">
            <param name="engineParameters">Engine parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.Default">
            <summary>
            Default engine parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="engineParameters1">First object to be compared.</param>
            <param name="engineParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="engineParameters1">First object to be compared.</param>
            <param name="engineParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.MaxClientAge">
            <summary>
            Maximum client age. Number of milliseconds. 
            When the engine recognizes that there is a connection to some OPC server that is unused for this period of time or 
            longer, it will disconnect from it.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.ClientLruSize">
            <summary>
            Client LRU size. Maximum number of OPC servers the engine can be connected to at a same time.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters"/> is equal to the current object.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_EasyAEEngineParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEEngineParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters">
            <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientHoldPeriods)">
            <param name="clientMode">Client mode to use.</param>
            <param name="holdPeriods">Hold periods to use.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters)">
            <param name="instanceParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Default">
            <summary>
            Default host parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.HoldPeriods">
            <summary>
            Specifies optimization parameters that reduce the load on the OPC server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Mode">
            <summary>
            Specifies common parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters"/> is equal to the current object.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Reset">
            <summary>
            Sets the object properties back to their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_EasyAEInstanceParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAEInstanceParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.ResetHoldPeriods">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.HoldPeriods"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.ShouldSerializeHoldPeriods">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.HoldPeriods"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.ResetMode">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Mode"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.ShouldSerializeMode">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters.Mode"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters">
            <summary>
            Contains parameters that influence operations that target a specific OPC item.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.DefaultBufferSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.BufferSize"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.DefaultFastestNotificationRate">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.FastestNotificationRate"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.DefaultLinkRetrialDelay">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.LinkRetrialDelay"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.DefaultSlowestNotificationRate">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.SlowestNotificationRate"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters)">
            <param name="linkParameters">Link parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.Default">
            <summary>
            Default link parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.LinkRetrialDelay">
            <summary>
            Link retrial delay. Number of milliseconds.
            If a specific OPC link is found to be not operational, further attempts to use it will not be made until the link 
            retrial delay elapses. One of typical reasons for entering the link retrial period is using an unknown OPC area or source name, which can later become correct when the OPC server configuration is updated. 
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.BufferSize">
            <summary>
            Subscription buffer size.
            Maximum number of events that the OPC server will send in a single callback. 
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.FastestNotificationRate">
            <summary>
            Fastest notification rate. Number of milliseconds.
            If the client application specifies notification rate faster than the value specified here, EasyOPC will use the value from 
            this field instead.  
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.SlowestNotificationRate">
            <summary>
            Slowest notification rate. Number of milliseconds.
            If the client application specifies notification rate slower than the value specified here, EasyOPC will use the value from 
            this field instead.  
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_EasyAELinkParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAELinkParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters">
            <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEEngineParameters,OpcLabs.EasyOpc.Engine.EasyMachineParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAELinkParameters)">
            <param name="engineParameters">Engine parameters to be used.</param>
            <param name="machineParameters">Machine parameters to be used.</param>
            <param name="clientParameters">Client parameters to be used.</param>
            <param name="linkParameters">Topic parameters to be used.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters)">
            <param name="sharedParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.Default">
            <summary>
            Default adaptable parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters,OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ClientParameters">
            <summary>
            Contains parameters that influence operations that target a specific OPC server as a whole.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.EngineParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the engine (global) level.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.LinkParameters">
            <summary>
            A "link" represents a live subscription connection to OPC events. Contains parameters that influence how EasyOPC 
            works with OPC event subscriptions. 
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.MachineParameters">
            <summary>
            Contains parameters related to operations that target a specific computer but not a specific OPC server, such as 
            browsing for OPC servers using various methods.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters"/> is equal to the current object.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.Reset">
            <summary>
            Sets the object properties back to their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.OpcLabs#EasyOpc#AlarmsAndEvents#Engine#ComTypes#_EasyAESharedParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.ComTypes._EasyAESharedParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ResetClientParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ClientParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ShouldSerializeClientParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ClientParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ResetEngineParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.EngineParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ShouldSerializeEngineParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.EngineParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ResetLinkParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.LinkParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ShouldSerializeLinkParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.LinkParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ResetMachineParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.MachineParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.ShouldSerializeMachineParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters.MachineParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler">
            <summary>
            Represents the method that will handle an event raised every OPC event subscribed to. 
            This method can be called whether this is a refresh or standard event notification.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEMemberAttribute">
            <summary>
            Denotes that the member should be involved in OPC Data Access mapping.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AENodeAttribute">
            <summary>
            Gives information about OPC Alarms&amp;Events node (area or source).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AENodeAttribute.BrowsePath">
            <summary>
            Specifies the browse path for the OPC node (area or source).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AENodeAttribute.QualifiedName">
            <summary>
            Contains the qualified name of the OPC node (area or source; empty string for the root, null reference if unknown).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEQualifiedNameTemplateAttribute">
            <summary>
            Describes how to construct OPC qualified name (of nodes).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEQualifiedNameTemplateAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class with given template string.
            </summary>
            <param name="templateString">The template string.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEQualifiedNameTemplateAttribute.TemplateString">
            <summary>
            The template string.
            </summary>
            <remarks>
            <para>
            <c>Null</c> is allowed, because it allows to disable the template use from certain level onwards.</para>
            <para>
            Following macros can be used in template strings:
            <ul>
                <li><c>$(ParentQualifiedName)   </c>The OPC qualified name of parent node.</li>
                <li><c>$(BrowseName)            </c>The browse name of current node.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AETypeAttribute">
            <summary>
            Denotes that the type should be involved in OPC Alarms&amp;Events mapping.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind">
            <summary>
            Specifies how the OPC Alarms&amp;Events event will be mapped.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Result">
            <summary>
            Map the operation result, as <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/> or a derived type specific for the operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ErrorId">
            <summary>
            Map the error ID, as <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Exception">
            <summary>
            Map the exception, as <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Exception"/> or a derived type. <c>null</c> if the operation has been successful.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ErrorMessage">
            <summary>
            Map the error message, as <see cref="T:System.String"/>. An empty string if the operation has been successful.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.StatusInfo">
            <summary>
            Map the status information, as <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.StatusInfo"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.QualifiedSourceName">
            <summary>
            Map the source of event notification.
            </summary>
            <remarks>
            The linking target value is not changed if the operation resulted in an exception.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Time">
            <summary>
            Map the time of the event occurrence - for conditions, time that the condition transitioned into the new state or 
            sub-condition.
            </summary>
            <remarks>
            <para>For example, if the event notification is for acknowledgment of a condition, this would be the time that the 
            condition became acknowledged.</para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Message">
            <summary>Map the event notification message describing the event. This is the default mapping kind.</summary>
            <remarks>
            The linking target value is not changed if the operation resulted in an exception.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.EventType">
            <summary>Map indication of Simple, Condition-Related, or Tracking event.</summary>
            <remarks>
            <para>One of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> constants.</para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.CategoryId">
            <summary>Map event category ID.</summary>
            <remarks>
            <para>Standard and Vendor-specific event category codes.</para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Severity">
            <summary>
            Map the event severity (1..1000).
            </summary>
            <remarks>
            The linking target value is not changed if the operation resulted in an exception.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.AttributeValues">
            <summary>Map a dictionary of vendor-specific event attributes.</summary>
            <remarks>
            <para>Attributes are vendor-specific.</para>
            <para>If a server cannot provide reasonable data for an attribute, the returned VARIANT should be set to VT_EMPTY.
            </para>
            <para>This is a dictionary where the key is attribute ID, and the value is the actual value of that event attribute.
            </para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Value">
            <summary>
            Map vendor-specific event attribute, specified by its ID.
            </summary>
            <remarks>
            <para>Attributes are vendor-specific.</para>
            <para>If a server cannot provide reasonable data for an attribute, the returned VARIANT should be set to VT_EMPTY.
            </para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ConditionName">
            <summary>Map the name of the condition related to this event notification.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.SubconditionName">
            <summary>
            Map the name of the current sub-condition, for multi-state conditions. For a single-state condition, this contains 
            the condition name.
            </summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Enabled">
            <summary>Map new state of the condition: The condition is enabled.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Active">
            <summary>Map new state of the condition: The condition is active.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Acknowledged">
            <summary>Map new state of the condition: The condition is acknowledged.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Quality">
            <summary>
            Map the quality associated with the condition, as <see cref="T:OpcLabs.EasyOpc.DataAccess.DAQuality"/>.
            </summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>Values are as defined for the OPC Quality Flags in the OPC Data Access Server specification.</para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.AcknowledgeRequired">
            <summary>Map a flag indicating that the related condition requires acknowledgment of this event.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>The determination of those events which require acknowledgment is server specific. For example, transition into 
            a LimitAlarm condition would likely require an acknowledgment, while the event notification of the resulting 
            acknowledgment would likely not require an acknowledgment.</para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ActiveTime">
            <summary>Map time that the condition became active (for single-state conditions), or the time of the transition 
            into the current sub-condition (for multi-state conditions).</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>This time is used by the client when acknowledging the condition.</para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Cookie">
            <summary>Map server defined cookie associated with the event notification.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>The cookie is used by the client when acknowledging the condition. This value is opaque to the client.</para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ActorId">
            <summary>Map actor ID.</summary>
            <remarks>
            <para><b>This property is used only for Tracking Events and for Condition-Related Events which are acknowledgment 
            notifications (see EventType).</b> </para>
            <para>For tracking events, this is the actor ID for the event notification.</para>
            <para>For condition-related events, this is the AcknowledgerID when the new state is acknowledged. If the 
            AcknowledgerID is an empty string, the event was automatically acknowledged by the server.</para>
            <para>For other events, the value is an empty string.</para>
            <para>The linking target value is not changed if the operation resulted in an exception.</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.NamespaceDoc">
            <summary>
            This namespace contains classes used for live mapping of OPC Alarms&amp;Events sources to targets.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AENodeKind">
            <exclude/>
            <summary>
            Provides classification of OPC Alarms&amp;Events (OPC-A&amp;E) nodes.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AENodeKind.None">
            <summary>
            The node kind is not set.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AENodeKind.Source">
            <summary>
            The node is an event source.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AENodeKind.Area">
            <summary>
            The node is an event area.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AENodeKind.Root">
            <summary>
            The node is a root.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.NamespaceDoc">
            <summary>
            This namespace defines an object space for OPC Alarms&amp;Events.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd">
            <exclude/>
            <summary>
            Represents a branch front-end in OPC Alarms&amp;Events (OPC-A&amp;E) address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
            <remarks>This constructor is needed for the designer.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd"/> object.</summary>
            <param name="areaFrontEnd">The OPC-A&amp;E area front end object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class, with given branch name.
            </summary>
            <param name="name">The name of the branch.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd.NodeKind">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.IAENode.NodeKind"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd.ValueEquals(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEAreaFrontEnd.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent">
            <exclude/>
            <summary>
            The OPC-A&amp;E component, i.e. the executive part of the OPC-A&amp;E server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent"/> object.</summary>
            <param name="component">The OPC-A&amp;E component object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.ComponentBackEnd">
            <summary>
            The OPC-A&amp;E component back-end serving this component.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.Nodes">
            <summary>
            The OPC-A&amp;E address space nodes, starting from the root level.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.Root">
            <summary>
            The root node of the OPC-A&amp;E address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.CreateRoot">
            <summary>
            Creates the root node of the address space.
            </summary>
            <returns>Returns the root node created.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.ValueEquals(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.ShouldSerializeNodes">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEComponent.Nodes"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea">
            <exclude/>
            <summary>
            Represents a branch in OPC Alarms&amp;Events (OPC-A&amp;E) address space of the OPC server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
            <remarks>This constructor is needed for the designer.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea"/> object.</summary>
            <param name="serverArea">The OPC-A&amp;E server area object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class, with given branch name.
            </summary>
            <param name="name">The name of the branch.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea.ValueEquals(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerArea.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot">
            <exclude/>
            <summary>
            Represents a root node in OPC Alarms&amp;Events (OPC-A&amp;E) address space of the OPC server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot"/> object.</summary>
            <param name="serverRoot">The OPC-A&amp;E server root object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot.IsRoot">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectSpace.Node.IsRoot"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot.Name">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectSpace.Node.Name"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot.NodeKind">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.IAENode.NodeKind"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot.ValueEquals(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerRoot.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource">
            <exclude/>
            <summary>
            Represents a leaf in OPC Alarms&amp;Events (OPC-A&amp;E) address space of the OPC server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
            <remarks>This constructor is needed for the designer.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource"/> object.</summary>
            <param name="serverSource">The OPC-A&amp;E server source object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class, with given event source name.
            </summary>
            <param name="name">The name of the leaf.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource.LeafBackEnd">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectSpace.LeafFrontEnd.LeafBackEnd"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource.ValueEquals(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AEServerSource.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd">
            <exclude/>
            <summary>
            Represents an event source front-end in OPC Alarms&amp;Events (OPC-A&amp;E) address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
            <remarks>This constructor is needed for the designer.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd"/> object.</summary>
            <param name="serverSource">The OPC-A&amp;E source front end object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class, with given leaf name.
            </summary>
            <param name="name">The name of the leaf.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd.Clone">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd.NodeKind">
            <summary>
            Determines whether the node is an event source, event area, or an event root.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd.ValueEquals(OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.AESourceFrontEnd"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.IAEAreaBackEnd">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.IAEComponentBackEnd">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.IAENode">
            <exclude/>
            <summary>
            An OPC Alarms&amp;Events node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.IAENode.NodeKind">
            <summary>
            Determines whether the node is an event source, an event area, or an event root.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.IAENodeBackEnd">
            <exclude/>
            <summary>
            A back-end to an OPC-A&amp;E node.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ObjectSpace.IAESourceBackEnd">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.NamespaceDoc">
            <summary>
            This namespace contains classes that facilitate browsing in OPC Alarms&amp;Events.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.Resource1.ProblemBrowsingOpcAEAreas">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Alarms&amp;Events areas..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.Resource1.ProblemBrowsingOpcAECategoryConditions">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Alarms&amp;Events conditions of an event category..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.Resource1.ProblemBrowsingOpcAESourceConditions">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Alarms&amp;Events conditions of an event source..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.Resource1.ProblemBrowsingOpcAESources">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Alarms&amp;Events sources..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.Resource1.ProblemQueryingOpcAEAttributes">
            <summary>
              Looks up a localized string similar to Problem querying OPC Alarms&amp;Events attributes..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.Resource1.ProblemQueryingOpcAECategories">
            <summary>
              Looks up a localized string similar to Problem querying OPC Alarms&amp;Events categories..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AEAttributeBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryConditionBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AESourceConditionBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AESubconditionBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter,OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter,OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter.VendorFilter">
            <summary>A server specific filter string (empty string for no filtering).</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseFilter)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AEAttributeBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AEAttributeBrowseNode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AEAttributeBrowseNode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AEAttributeBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode,OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode,OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AECategoryBrowseNode)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AEConditionBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AEConditionBrowseNode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AEConditionBrowseNode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AEConditionBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseNode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseNode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AENodeBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AESubconditionBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AESubconditionBrowseNode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AESubconditionBrowseNode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.AESubconditionBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.IAECategoryBrowseNode">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Browsing.IAENodeBrowseNode">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration">
            <summary>
            Allows static configuration of the EasyAEClient object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration)">
            <param name="clientConfiguration">Client configuration object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.AdaptableParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.AdaptableParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.SharedInstance">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.SharedInstance"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.SharedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.SharedParameters"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.LogEntry">
            <summary>
            Raised for loggable entries originating in the OPC-A&amp;E client engine and the EasyAEClient component.
            </summary>
            <remarks>NOT YET IMPLEMENTED, I.E. IS NEVER ACTUALLY RAISED IN THIS VERSION!</remarks>  // TODO: implement
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_EasyAEClientConfiguration#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientConfiguration.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.ResetAdaptableParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.AdaptableParameters"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.ShouldSerializeAdaptableParameters">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.AdaptableParameters"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.ResetSharedInstance">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.SharedInstance"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.ShouldSerializeSharedInstance">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.SharedInstance"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.ResetSharedParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.SharedParameters"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.ShouldSerializeSharedParameters">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientConfiguration.SharedParameters"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector">
            <summary>
            Describes how to select the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector)">
            <param name="selector">Selector to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor(System.String)">
            <param name="differentiator"> An arbitrary string that differentiates the selected client from others with the 
            same parameters.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor(System.String,System.Boolean)">
            <param name="differentiator"> An arbitrary string that differentiates the selected client from others with the 
            same parameters.</param>
            <param name="isolated">Determines whether the client component selected should operate isolated from other client 
            components.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.Default">
            <summary>
            Default client selector.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Extensions.IEasyAEClientExtension2">
            <summary>
            Contains extension methods to the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient"/> interface.
            </summary>
            <remarks>
            Note that other extension classes for the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient"/> exist as well.
            Specifically, the basic set of extension methods is in the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension"/> class.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Extensions.IEasyAEClientExtension2.AcknowledgeMultipleConditions(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments[])">
            <summary>
            Acknowledges multiple conditions in the Event Server. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="acknowledgeConditionArgumentsArray">Conditions to be acknowledged.</param>
            <returns>An array of <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/> objects, with indices corresponding to the input array.
            </returns>
            <remarks>
            The size of the input array will become the size of the output array. The element positions (indices) in the output 
            array are the same as in the input array. 
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Extensions.IEasyAEClientExtension2.SubscribeMultipleEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments[])">
            <overloads>
            <summary>
            
            </summary>
            <remarks>
            The size of the input array will become the size of the output array. The element positions (indices) in the output 
            array are the same as in the input array. 
            </remarks>
            <returns>The function returns an array of integer handles. Each such handle uniquely identifies the events 
            subscription. The indices of elements in the output array are the same as those in the input array.
            </returns>
            </overloads>
            
            <param name="client">The client object that will perform the operation.</param>
            <param name="eventsSubscriptionArgumentsArray">Array of arguments, one element per each OPC events specification
            involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Extensions.IEasyAEClientExtension2.SubscribeMultipleEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments[],OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler)">
            <param name="client">The client object that will perform the operation.</param>
            <param name="eventsSubscriptionArgumentsArray">Array of arguments, one element per each OPC events specification
            involved in the operation.</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Extensions.IEasyAEClientExtension2.SubscribeMultipleEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments[])">
            <param name="client">The client object that will perform the operation.</param>
            <param name="eventsSubscriptionArgumentsArray">Array of arguments, one element per each OPC events specification
            involved in the operation. The arguments element may contain callback method as well.
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Extensions.IEasyAEClientExtension2.UnsubscribeMultipleEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.Collections.Generic.IEnumerable{System.Int32})">
            <overloads>
            Unsubscribe from changes of multiple OPC events.  
            </overloads>
            <remarks>
            <para>The event subscription handles becomes invalid after this method is called.</para>
            </remarks>
            
            <summary>Unsubscribe from changes of multiple OPC events, specifying array of integer handles.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="handles">Subscription handles. Can be an array.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Extensions.IEasyAEClientExtension2.FindEventCategory(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,System.Int64,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement@)">
            <summary>
            Attempts to find a specified event category in the OPC server, and returns information about it when found.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="categoryId">Event category ID to be found.</param>
            <param name="categoryElement">Information about the event category, if found.</param>
            <returns>Returns 'true' if the event category has been found, 'false' otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Extensions.IEasyAEClientExtension2.FindEventCondition(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,System.Int64,System.String,OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AEConditionElement@)">
            <summary>
            Attempts to find a specified event condition in the OPC server and for given event category, and returns information 
            about it when found.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="categoryId">Event category whose conditions should be searched.</param>
            <param name="conditionName">Event condition name to be found.</param>
            <param name="conditionElement">Information about the event condition, if found.</param>
            <returns>Returns 'true' if the event condition has been found, 'false' otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Extensions.NamespaceDoc">
            <summary>
            This namespace contains extension classes that facilitate easy work with OPC Alarms and Events.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for classes that are used to pass arguments to OPC Alarms&amp;Events operations and obtain the operation results. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.ServerDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ServerDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.SubscriptionParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.SubscriptionParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.RefreshWhenActive">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.RefreshWhenActive"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.ServerDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ServerDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.SubscriptionParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.SubscriptionParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.RefreshWhenActive">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.RefreshWhenActive"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.Diagnostics">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.Diagnostics"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.DiagnosticsCount">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.DiagnosticsCount"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.DiagnosticsSummary">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.DiagnosticsSummary"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.ErrorId">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.ErrorId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.ErrorMessage">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.ErrorMessage"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.ErrorMessageBrief">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.ErrorMessageBrief"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.Exception">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.Exception"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.NormalizedDiagnostics">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.NormalizedDiagnostics"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.NormalizedException">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.NormalizedException"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.Succeeded">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.Succeeded"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.MemberwiseClone">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.OperationEventArgs.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.ToLongString">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.OperationEventArgs.ToLongString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.Arguments">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.Arguments"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.Refresh">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.Refresh"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.RefreshComplete">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.RefreshComplete"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.EnabledChanged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.EnabledChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.ActiveChanged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.ActiveChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.AcknowledgedChanged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.AcknowledgedChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.QualityChanged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.QualityChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.SeverityChanged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.SeverityChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.SubconditionChanged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.SubconditionChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.MessageChanged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.MessageChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.AttributeChanged">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.AttributeChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.EventData">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.EventData"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.ChangeMask">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.ChangeMask"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.NamespaceDoc">
            <summary>
            This namespace contains classes that are used to pass arguments to OPC Alarms&amp;Events operations and obtain the operation results. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments">
            <summary>Holds arguments need to perform OPC-A&amp;E condition acknowledgement operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultAcknowledgerId">
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.AcknowledgerId"/> property. Equals to the 
            <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments"/> type name in curly brackets.
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultComment">
            <summary>
            Default comment. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultConditionName">
            <summary>
            Default condition name. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments)">
            <param name="acknowledgeConditionArguments">Arguments to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)">
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="sourceDescriptor">Contains fully qualified source name. Identifies the source of the condition that is 
            being acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
            <param name="acknowledgerId">A string passed in by the client, identifying who is acknowledging the 
            condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
            This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
            notification sent to all subscribing clients. 
            When omitted, a <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultAcknowledgerId"/> value is used. 
            An AcknowledgerId cannot result in an empty string, since 
            such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.</param>
            <param name="comment">Comment string passed in by the client associated with acknowledging the condition. 
            An empty string indicating no comment is allowed. When omitted, an empty string is used instead.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String,System.Object)">
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="sourceDescriptor">Contains fully qualified source name. Identifies the source of the condition that is 
            being acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
            <param name="acknowledgerId">A string passed in by the client, identifying who is acknowledging the 
            condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
            This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
            notification sent to all subscribing clients. 
            When omitted, a <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultAcknowledgerId"/> value is used. 
            An AcknowledgerId cannot result in an empty string, since 
            such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.</param>
            <param name="comment">Comment string passed in by the client associated with acknowledging the condition. 
            An empty string indicating no comment is allowed. When omitted, an empty string is used instead.</param>
            <param name="state">The user-defined state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String)">
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="sourceDescriptor">Contains fully qualified source name. Identifies the source of the condition that is 
            being acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
            <param name="acknowledgerId">A string passed in by the client, identifying who is acknowledging the 
            condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
            This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
            notification sent to all subscribing clients. 
            When omitted, a <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultAcknowledgerId"/> value is used. 
            An AcknowledgerId cannot result in an empty string, since 
            such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64)">
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="sourceDescriptor">Contains fully qualified source name. Identifies the source of the condition that is 
            being acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor(System.String,System.String,System.String,System.String,System.DateTime,System.Int64,System.String,System.String)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="qualifiedSourceName">Fully qualified source name. Identifies the source of the condition that is being 
            acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
            <param name="acknowledgerId">A string passed in by the client, identifying who is acknowledging the 
            condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
            This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
            notification sent to all subscribing clients. 
            When omitted, a <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultAcknowledgerId"/> value is used. 
            An AcknowledgerId cannot result in an empty string, since 
            such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.</param>
            <param name="comment">Comment string passed in by the client associated with acknowledging the condition. 
            An empty string indicating no comment is allowed. When omitted, an empty string is used instead.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor(System.String,System.String,System.String,System.String,System.DateTime,System.Int64,System.String)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="qualifiedSourceName">Fully qualified source name. Identifies the source of the condition that is being 
            acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
            <param name="acknowledgerId">A string passed in by the client, identifying who is acknowledging the 
            condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
            This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
            notification sent to all subscribing clients. 
            When omitted, a <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultAcknowledgerId"/> value is used. 
            An AcknowledgerId cannot result in an empty string, since 
            such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor(System.String,System.String,System.String,System.String,System.DateTime,System.Int64)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="qualifiedSourceName">Fully qualified source name. Identifies the source of the condition that is being 
            acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultActiveTime">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ActiveTime"/> property.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultServerDescriptor">
            <summary>
            Default server descriptor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultSourceDescriptor">
            <summary>
            Default source descriptor.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ServerDescriptor">
            <summary>Gets or sets the OPC server descriptor that is an argument to the operation.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.SourceDescriptor">
            <summary>Contains fully qualified source name. Identifies the source of the condition that is 
            being acknowledged, e.g. FIC101.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ConditionName">
            <summary>
            A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ActiveTime">
            <summary>
            An active time corresponding to the Source and Condition Name pair. In UTC.
            </summary>
            <remarks>
            This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ActiveTimeLocal">
            <summary>
            An active time corresponding to the Source and Condition Name pair. In local time.
            </summary>
            <remarks>
            This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.Cookie">
            <summary>
            A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.AcknowledgerId">
            <summary>
            A string passed in by the client, identifying who is acknowledging the 
            condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
            This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
            notification sent to all subscribing clients. 
            When omitted, a <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DefaultAcknowledgerId"/> value is used. 
            An AcknowledgerId cannot result in an empty string, since 
            such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.Comment">
            <summary>
            Comment string passed in by the client associated with acknowledging the condition. 
            An empty string indicating no comment is allowed. When omitted, an empty string is used instead.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ResetActiveTime">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ActiveTime"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ShouldSerializeActiveTime">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ActiveTime"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ResetActiveTimeLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ActiveTimeLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ShouldSerializeActiveTimeLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ActiveTimeLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ResetServerDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ServerDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ShouldSerializeServerDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ServerDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ResetSourceDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.SourceDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.ShouldSerializeSourceDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.SourceDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments">
            <summary>
            Holds an OPC server descriptor and event subscription parameters as arguments to subscription operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.DefaultRefreshWhenActive">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.RefreshWhenActive"/> property. Equals to <c>true</c>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments)">
            <param name="eventsSubscriptionArguments">The arguments object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,System.Object)">
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="subscriptionParameters">Subscription parameters to be used when the subscription is created</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean,System.Boolean)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.DefaultServerDescriptor">
            <summary>
            Default server descriptor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.DefaultSubscriptionParameters">
            <summary>
            Default subscription parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ServerDescriptor">
            <summary>Gets or sets the OPC server descriptor that is an argument to the operation.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.SubscriptionParameters">
            <summary>Subscription parameters to be used when the subscription is created.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.RefreshWhenActive">
            <summary>When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.OpcLabs#EasyOpc#AlarmsAndEvents#OperationModel#ComTypes#_AEEventsSubscriptionArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._AEEventsSubscriptionArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ResetServerDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ServerDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ShouldSerializeServerDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ServerDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ResetSubscriptionParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.SubscriptionParameters"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.ShouldSerializeSubscriptionParameters">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments.SubscriptionParameters"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments">
            <summary>Holds an OPC server descriptor, event subscription parameters, and possibly a callback method,
            as arguments to subscription operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler)">
            <param name="eventsSubscriptionArguments">The events subscription arguments object to copy from.</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
            <param name="eventsSubscriptionArguments">The events subscription arguments object to copy from</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)">
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="subscriptionParameters">Subscription parameters to be used when the subscription is created</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,System.Object)">
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="subscriptionParameters">Subscription parameters to be used when the subscription is created</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean,System.Boolean)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean,System.Boolean)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.String,System.String,System.Int32,System.Object)">
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.Default">
            <summary>
            Default events subscription arguments for EasyOPC.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.Callback">
            <summary>A callback method to be invoked for each significant monitored item change.</summary>
            <value>If this is a null reference, only the notification events are generated, but no callback method is invoked.
            </value>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.OpcLabs#EasyOpc#AlarmsAndEvents#OperationModel#ComTypes#_EasyAEEventsSubscriptionArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAEEventsSubscriptionArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs">
            <summary>Provides data for the EasyAEClient.Notification event.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Initializes a new instance of the class, with a copy of another instance.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="eventArgs1">First object to be compared.</param>
            <param name="eventArgs2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="eventArgs1">First object to be compared.</param>
            <param name="eventArgs2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.DefaultArguments">
            <summary>
            Default (events subscription) arguments.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.Arguments">
            <summary>
            Holds arguments that were used to subscribe to events in an OPC-A&amp;E server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.Refresh">
            <summary>Denotes whether this notification was triggered by subscription refresh.</summary>
            <remarks>
            <para>When Refresh is True, the value of True in RefreshComplete tells that the refresh has completed.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.RefreshComplete">
            <summary>When True, this notification denotes that the subscription refresh is complete.</summary>
            <remarks>
            <para>RefreshComplete can only be True when Refresh is also True.</para>
            <para>When RefreshComplete is True, the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.EventData"/> property contains a null reference.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.EnabledChanged">
            <summary>Indicates to the application that the Enabled state of the condition has changed.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>If the event notification is the result of a Refresh, the value of this property should be ignored.</para>
            <para>It is server-specific whether this property will be True for a "new event". (A "new event" is any event resulting 
            from the related condition leaving the Inactive and Acknowledged state.)</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.ActiveChanged">
            <summary>Indicates to the application that the Active state of the condition has changed.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>If the event notification is the result of a Refresh, the value of this property should be ignored.</para>
            <para>This property will be always True for a "new event". (A "new event" is any event resulting from the related 
            condition leaving the Inactive and Acknowledged state.)</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.AcknowledgedChanged">
            <summary>Indicates to the application that the Acknowledged state of the condition has changed.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>If the event notification is the result of a Refresh, the value of this property should be ignored.</para>
            <para>It is server-specific whether this property will be True for a "new event". (A "new event" is any event resulting 
            from the related condition leaving the Inactive and Acknowledged state.)</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.QualityChanged">
            <summary>Indicates to the application that the Quality of the condition has changed.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>If the event notification is the result of a Refresh, the value of this property should be ignored.</para>
            <para>It is server-specific whether this property will be True for a "new event". (A "new event" is any event resulting 
            from the related condition leaving the Inactive and Acknowledged state.)</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.SeverityChanged">
            <summary>Indicates to the application that the Severity of the condition has changed.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>If the event notification is the result of a Refresh, the value of this property should be ignored.</para>
            <para>It is server-specific whether this property will be True for a "new event". (A "new event" is any event resulting 
            from the related condition leaving the Inactive and Acknowledged state.)</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.SubconditionChanged">
            <summary>Indicates to the application that the subcondition (SubconditionName) of the condition has changed.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>If the event notification is the result of a Refresh, the value of this property should be ignored.</para>
            <para>It is server-specific whether this property will be True for a "new event". (A "new event" is any event resulting 
            from the related condition leaving the Inactive and Acknowledged state.)</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.MessageChanged">
            <summary>Indicates to the application that the Message of the condition has changed.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>If the event notification is the result of a Refresh, the value of this property should be ignored.</para>
            <para>It is server-specific whether this property will be True for a "new event". (A "new event" is any event resulting 
            from the related condition leaving the Inactive and Acknowledged state.)</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.AttributeChanged">
            <summary>Indicates to the application that one or more attributes of the condition have changed.</summary>
            <remarks>
            <para><b>This property is used only for Condition-Related Events (see EventType).</b> </para>
            <para>If the event notification is the result of a Refresh, the value of this property should be ignored.</para>
            <para>It is server-specific whether this property will be True for a "new event". (A "new event" is any event resulting 
            from the related condition leaving the Inactive and Acknowledged state.)</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.EventData">
            <summary>Event notification information.</summary>
            <remarks>
            <para>The the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.EventData"/> property contains an <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData"/> object for regular event notifications, and for notifications 
            triggered by subscription refresh (except for RefreshComplete notification).</para>
            <para>The the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.EventData"/> property contains a null reference when an error occurred (indicating connection loss; an Exception
            property is filled in this case), when a connection is re-gained (an Exception property contains a null reference in this 
            case), or when the notification indicates that subscription refresh is complete (RefreshComplete property contains True
            in this case).</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.ChangeMask">
            <summary>
            Indicates to the client which properties of the condition have changed, to have caused the server to send the event 
            notification.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.OpcLabs#EasyOpc#AlarmsAndEvents#OperationModel#ComTypes#_EasyAENotificationEventArgs#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.ComTypes._EasyAENotificationEventArgs.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.ResetArguments">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.Arguments"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.ShouldSerializeArguments">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs.Arguments"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver">
            <summary>
            Push-based notification receiver (observer) that acknowledges OPC-A&amp;E conditions.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.#ctor">
            <overloads>
            <summary>
            Create a new instance of the observer that acknowledges OPC-A&amp;E conditions.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector)">
            <summary>
            Creates a new instance of the observer, specifying a client selector.
            </summary>
            <param name="clientSelector">A client selector to be used by the observer.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="acknowledgeConditionObserver">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.Finalize">
            <summary>
            Finalizes the observer by returning the client object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.Create">
            <summary>
            Creates a new observer that acknowledges OPC-A&amp;E conditions, using a default <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.OnNext(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments)">
            <inheritdoc cref="M:System.IObserver`1.OnNext(`0)"/>
            <remarks>
            Writes the incoming value into the OPC-DA item.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.OnError(System.Exception)">
            <inheritdoc cref="M:System.IObserver`1.OnError(System.Exception)"/>
            <remarks>No operation.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.OnCompleted">
            <inheritdoc cref="M:System.IObserver`1.OnCompleted"/>
            <remarks>No operation.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable">
            <summary>
            Push-based notification provider (observable) for OPC Alarms&amp;Events notifications.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.#ctor">
            <overloads>
            <summary>
            Create a new instance of the OPC-A&amp;E notification observable.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments})">
            <summary>
            Create a new instance of the notification observable, with specified client object, and an enumerable
            containing the OPC events to be observed.
            </summary>
            <param name="clientSelector">The selector of the client object that is used for OPC Alarms&amp;Events operations.</param>
            <param name="arguments">The OPC events to be observed.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="notificationObservable">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments)">
            <summary>
            Creates a new notification observable for OPC events given by <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments"/> object.
            </summary>
            <param name="args">Contains the OPC events to be observed.</param>
            <returns>Returns an observable for notifications about given OPC events.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector"/> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments})">
            <summary>
            Creates a new notification observable for multiple OPC events given by 
            <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments"/> objects.
            </summary>
            <param name="arguments">Contains the enumerable of OPC events to be observed.</param>
            <returns>Returns an observable for notifications about given OPC events.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector"/> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,System.Object)">
            <summary>
            Creates a new notification observable for OPC events given by the server descriptor and subscription parameters 
            objects, and other parameters.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="subscriptionParameters">Subscription parameters to be used when the subscription is created</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <returns>Returns an observable for notifications about given OPC events.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector"/> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Creates a new notification observable for OPC events given by the machine name, server class, and other parameters.
            </summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <returns>Returns an observable for notifications about given OPC events.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector"/> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Arguments">
            <summary>
            The OPC events to be observed.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Subscribe(System.IObserver{OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs})">
            <inheritdoc cref="M:System.IObservable`1.Subscribe(System.IObserver{`0})"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.CreateEventsSubscriptionArguments(System.IObserver{OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs},OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.ShouldSerializeArguments">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Arguments"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive">
            <summary>
            Base class for OPC Alarms&amp;Events push-based notification providers (observables) and receivers (observers).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector">
            <summary>
            The default client selector that will be used when new instances of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive"/> are created, and no
            client selector is specified. 
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ClientSelector">
            <summary>
            The selector of the client object that is used for OPC Alarms&amp;Events operations.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ReturnClient(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient)">
            <summary>
            Returns the client object that was used by this reactive object.
            </summary>
            <param name="client">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> previously obtained for this reactive object.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ObtainClient">
            <summary>
            Obtains a client object to be used by this reactive object.
            </summary>
            <returns>Returns the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> according to the current client selector.</returns>
            <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">Thrown when a license was denied.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ResetClientSelector">
            <summary>
            Sets <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ClientSelector"/> back to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ShouldSerializeClientSelector">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ClientSelector"/> is not at its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.NamespaceDoc">
            <summary>
            This namespace contains reactive extensions (Rx) classes for OPC Alarms&amp;Events.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient">
            <summary>
              <para>The EasyAEClient object is the main object that allows simple access to OPC Alarms&amp;Events servers.</para>
              <para>
                <strong>The core members of this object come from the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient" /> interface.</strong>
              </para>
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.GetService(System.Type)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Widgets.Widget.GetService(System.Type)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.HandleRanges">
            <excludedoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.SupportedTechnologies">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SupportedTechnologies"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.IsKnownEventSubscriptionHandle(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.IsKnownEventSubscriptionHandle(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,System.Boolean)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,System.Boolean)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.RefreshEventSubscription(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.RefreshEventSubscription(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.UnsubscribeEvents(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeEvents(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.UnsubscribeAllEvents">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeAllEvents"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.EventingFailure">
            <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.EventingFailure"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Notification">
            <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.InnerClient">
            <summary>
            Inner client to which the functionality is forwarded.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.InnerClientCallback(System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Undelegates the event arguments and invokes the inner callback.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.InnerClientOnNotification(System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Undelegates the event arguments and invokes the base <see cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/> event.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Delegate(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
            <summary>
            Delegates operation arguments of type <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Undelegate(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
            <summary>
            Undelegates event arguments of type <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Undelegate(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs[])">
            <summary>
            Undelegates an array of event arguments of type <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.PullNotificationQueueCapacity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientEnqueuing.PullNotificationQueueCapacity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_EasyAEClient#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_EasyAEClient#InstanceParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.InstanceParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_EasyAEClient#IsolatedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.IsolatedParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_EasyAEClient#PullNotificationQueueCapacity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.PullNotificationQueueCapacity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.InstanceParameters">
            <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.IsolatedParameters">
            <summary>
            Contains parameters that influence the behavior of the component when it is isolated.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Isolated"/> property equal to <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Isolated">
            <summary>Specifies that you wish that the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> object instance works with an "isolated" 
            connection to the OPC server, i.e. one that is not shared with other instances.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ResetIsolated">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Isolated"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ShouldSerializeIsolated">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Isolated"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ResetInstanceParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.InstanceParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ShouldSerializeInstanceParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.InstanceParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ResetIsolatedParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.IsolatedParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ShouldSerializeIsolatedParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.IsolatedParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.LicenseInfo">
            <inheritdoc cref="P:OpcLabs.BaseLib.ILicenseInfoProvider.LicenseInfo"/>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.DefaultIsolated">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Isolated"/> property. Equals to <c>false</c>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.AdaptableParameters">
            <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
            <remarks>
            <para>
            When the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Isolated"/> property of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> is <c>false</c> (the default), these 
            adaptable parameters are used. When the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Isolated"/> property is <c>true</c>, each such instance has 
            its own set of adaptable parameters, taken from the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.IsolatedParameters"/> property instead.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.SharedInstance">
            <summary>
            A default, shared instance of the client object.
            </summary>
            <remarks>
            <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
            <para>
            The default instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="T:System.Threading.SynchronizationContext"/> may be used with each form.</para>
            <para>
            We do not recommend to use the default instance for library code, due to conflicts that may arise if your library
            sets some instance parameters which may not be the same as what other libraries or th final application expects.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.SharedParameters">
            <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Create">
            <summary>Creates a new instance of the class.</summary>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient)">
            <param name="client">Client object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64)">
            <summary>
            Acknowledges a condition in the Event Server. 
            Uses server descriptor for specifying the OPC server.
            Use default acknowledger ID and an empty comment.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="sourceDescriptor">Contains fully qualified source name. Identifies the source of the condition that is 
            being acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.AcknowledgeCondition(System.String,System.String,System.String,System.String,System.DateTime,System.Int64)">
            <summary>
            Acknowledges a condition in the Event Server. 
            Uses computer name and server class for specifying the OPC server.
            Use default acknowledger ID and an empty comment.
            </summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="qualifiedSourceName">Fully qualified source name. Identifies the source of the condition that is being 
            acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Reset">
            <summary>
            Sets the object properties back to their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ValueEquals(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ValueEquals(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)" />
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.CreateInnerClient">
            <summary>
            Infrastructure
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ResetSharedInstance">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.SharedInstance"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.ShouldSerializeSharedInstance">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClient.SharedInstance"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Resource1.ExceptionMessage_UnknownEventCategoryId">
            <summary>
              Looks up a localized string similar to Unknown OPC-A&amp;E event category ID..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.NamespaceDoc">
            <summary>
            This namespace contains classes that facilitate easy work with OPC Alarms and Events.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseFilter">
            <summary>An enumeration specifying which subset of browse elements to return.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseFilter.NoFilter">
            <summary>
            Return nothing.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseFilter.All">
            <summary>
            Return areas and sources.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseFilter.Areas">
            <summary>
            Return areas only.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseFilter.Sources">
            <summary>
            Return sources only.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType">
            <summary>Type of event, or multiple event types combined.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.DefaultAsString">
            <summary>
            Default value of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/>, i.e. corresponding to <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes.All"/>, expressed as
            string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.DefaultInternalValue">
            <summary>
            Internal enumeration-based value of default <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> (corresponds to <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes.All"/>).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.DefaultIsSimple">
            <summary>
            Default <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.IsSimple"/> value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.DefaultIsTracking">
            <summary>
            Default <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.IsTracking"/> value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.DefaultIsCondition">
            <summary>
            Default <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.IsCondition"/> value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.DefaultNumericalValue">
            <summary>
            Numerical value of default <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/>, which corresponds to <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes.All"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class, with all event types included.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <summary>Initializes a new instance of the class, from other <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/>.</summary>
            <param name="eventType">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes)">
            <summary>Initializes a new instance of the class, with value specified as a combination of enumerated values.</summary>
            <param name="internalValue">Combination of enumerated values to be converted.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.#ctor(System.Int64)">
            <summary>Initializes a new instance of the class, with value specified as bit fields in an integer.</summary>
            <param name="numericalValue">Numerical value to be converted.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param> 
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)~System.Int64">
            <summary>Converts an <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> object to a numerical bit-coded value.</summary>
            <param name="eventType">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> object value to be converted.</param>
            <returns>Returns a bit-coded value converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.op_Implicit(System.Int64)~OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType">
            <summary>Converts a numerical bit-coded value to an <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> object.</summary>
            <param name="numericalValue">Numerical value to be converted.</param>
            <returns>Returns an <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> object converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes)~OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType">
            <summary>Converts a combination of enumerated values to an AEEventType object.</summary>
            <param name="internalValue">Combination of enumerated values to be converted.</param>
            <returns>Returns an AEEventType converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)~OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes">
            <summary>Converts AEEventType object to a combination of enumerated values.</summary>
            <param name="eventType">AEEventType object to be converted.</param>
            <returns>Returns a combination of enumerated values converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.FromAEEventTypes(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes)">
            <summary>Converts a combination of enumerated values to an AEEventType object.</summary>
            <param name="internalValue">Combination of enumerated values to be converted.</param>
            <returns>Returns an AEEventType converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.FromInt64(System.Int64)">
            <summary>Converts a numerical bit-coded value to an <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> object.</summary>
            <param name="value">Numerical value to be converted.</param>
            <returns>Returns an <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> object converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.ToAEEventTypes(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <summary>Converts AEEventType object to a combination of enumerated values.</summary>
            <param name="eventType">AEEventType object to be converted.</param>
            <returns>Returns a combination of enumerated values converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.ToInt64(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <summary>Converts an <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> object to a numerical bit-coded value.</summary>
            <param name="eventType">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> object value to be converted.</param>
            <returns>Returns a bit-coded value converted from the input argument.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.IsSimple">
            <summary>Denotes whether simple event is included in the event types.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.IsTracking">
            <summary>Denotes whether tracking event is included in the event types.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.IsCondition">
            <summary>Denotes whether condition-related event is included in the event types.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.InternalValue">
            <summary>
            An internal value of the event types - a combination of enumerated values.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.NumericalValue">
            <summary>
            The numerical (integer) value of the event types.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.ToString">
            <summary>Returns a string with the descriptions of event types included in the filter.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.PropertyChanged">
            <summary>
            Handler for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.StandardName">
            <summary>
            A symbolic name of the current AEEventType if it has a standard name. Empty otherwise. 
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_AEEventType#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEEventType.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes">
            <summary>Contains pre-defined constants of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> internal values.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes.None">
            <summary>No event type.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes.Simple">
            <summary>Simple event.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes.Tracking">
            <summary>Tracking event.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes.Condition">
            <summary>Condition-Related event.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventTypes.All">
            <summary>All event types.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor">
            <summary>Contains information necessary to identify an OPC Alarms&amp;Events node (area or source), such as its 
            QualifiedName.</summary>
            <remarks>
            It is possible to construct this object from <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> returned by the browsing methods.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.DefaultQualifiedName">
            <summary>
            Default qualified name (none, i.e. <b>null</b>).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.RootQualifiedName">
            <summary>
            A qualified name that represents a root of the address space. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <summary>Initializes a new instance of the class, from specified node descriptor.</summary>
            <param name="nodeDescriptor">The node descriptor object.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement)">
            <summary>Initializes a new instance of the class, from specified node element.</summary>
            <param name="nodeElement">The node element object - contains information gathered about a node in OPC server's 
            address space.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.#ctor(System.String)">
            <summary>Initializes a new instance of the class, with specified qualified name.</summary>
            <param name="qualifiedName">Contains OPC qualified name.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.#ctor(System.String,OpcLabs.BaseLib.Navigation.BrowsePath)">
            <summary>Initializes a new instance of the class, with specified qualified name, and browse path.</summary>
            <param name="qualifiedName">Contains OPC qualified name (empty string for the root or if unknown).</param>
            <param name="browsePath">Contains the browse path for the OPC area or source.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.Root">
            <summary>
            The node descriptor for the root of the address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement)~OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor">
            <summary>Converts a <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> to an AENodeDescriptor object.</summary>
            <param name="nodeElement">Contains a node element.</param>
            <returns>Returns an AENodeDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.op_Implicit(System.String)~OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor">
            <summary>Converts a string containing a qualified name to an AENodeDescriptor object.</summary>
            <param name="qualifiedName">Contains OPC qualified name (empty string for the root or if unknown).</param>
            <returns>Returns an AENodeDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.FromAENodeElement(OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement)">
            <summary>Converts a <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> to an AENodeDescriptor object.</summary>
            <param name="nodeElement">Contains a node element.</param>
            <returns>Returns an AENodeDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.FromString(System.String)">
            <summary>Converts a string containing a qualified name to an AENodeDescriptor object.</summary>
            <param name="qualifiedName">Contains OPC qualified name (empty string for the root or if unknown).</param>
            <returns>Returns an AENodeDescriptor converted from the input argument.</returns>
            
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.QualifiedName">
            <summary>
            Contains OPC qualified name (empty string for the root, null reference if unknown).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.Clone">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_AENodeDescriptor#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AENodeDescriptor.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.GetNodeIdArgumentName">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension">
            <summary>
            Contains extension methods to the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient"/> interface.
            </summary>
            <remarks>
            <para>
            NOTE: This class is intentionally *not* placed in the <c>Extensions</c> namespace, but rather alongside the 
            extendee. The extension methods in this class are commonly used, and from the point of view of the developer,
            can be considered as part of the interface. In addition, this placement allows less namespaces references in typical
            projects, and better consistency with the COM interfaces (as only methods from this extension class may appear
            in the COM interfaces).</para>
            <para>
            Other extension classes may exist as well.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseServers(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
            <overloads>
            <summary>
            Browses for OPC (Alarms&amp;Events) servers.  
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseServers.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseServers.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            </overloads>
            
            <summary>
            Browses the local computer and returns information about OPC (Alarms&amp;Events) servers found.  
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.ServerElement"/> values, each containing information 
            about a particular OPC server found on the specified machine. The keys of the keyed collection are the server's 
            CLSIDs.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseServers.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseServers.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseServers(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String)">
            <summary>
            Browses the specified computer and returns information about OPC (Alarms&amp;Events) servers found.  
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="location">Name of the machine. Determines the computer to browse for OPC servers. May be an empty 
            string, in which case the the local computer will be browsed.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.ServerElement"/> values, each containing information 
            about a particular OPC server found on the specified machine. The keys of the keyed collection are the server's 
            CLSIDs.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.GetConditionState(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String)">
             <overloads>
             <summary>
             Returns the current state information for the condition instance corresponding to the source and condition name.
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             <para>Some servers may not maintain sufficient condition state information to fully implement this method.</para>
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Returns the current state information for the condition instance corresponding to the source and condition name,
             passing in a server descriptor. 
             No event attributes are returned.
             </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="sourceDescriptor">Contains fully qualified source name, as returned by browsing. The state of 
             the condition instance associated with this source is returned.</param>
             <param name="conditionName">A condition name, as returned by querying. The state of this condition is returned.
             </param>
             <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/> object. The object contains 
             information about the state of the condition.</returns>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.GetConditionState(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.String,System.String,System.Int64[])">
            <summary>
            Returns the current state information for the condition instance corresponding to the source and condition name,
            passing in the individual parameters for server location and its class. 
            Also allows to retrieve specified event attributes.
            </summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="qualifiedSourceName">Fully qualified source name. A source name, as returned by browsing. The state of 
            the condition instance associated with this source is returned.</param>
            <param name="conditionName">A condition name, as returned by querying. The state of this condition is returned.
            </param>
            <param name="attributes">Specifies the event attributes to be returned.</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/> object. The object contains 
            information about the state of the condition.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.GetConditionState(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.String,System.String)">
            <summary>
            Returns the current state information for the condition instance corresponding to the source and condition name,
            passing in the individual parameters for server location and its class. 
            No event attributes are returned.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="qualifiedSourceName">Fully qualified source name. A source name, as returned by browsing. The state of 
            the condition instance associated with this source is returned.</param>
            <param name="conditionName">A condition name, as returned by querying. The state of this condition is returned.
            </param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/> object. The object contains 
            information about the state of the condition.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.AcknowledgeCondition(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String)">
             <overloads>
             <summary>
             Acknowledges a condition in the Event Server. The client will receive event notifications (indicating the 
             acknowledgement) from conditions. This method specifically acknowledges the condition becoming active or 
             transitioning into a different sub-condition (and no other state transition of the condition). One or more 
             conditions belong to a specific event source - the source of the event notification. For each condition-related 
             event notification, the corresponding Source, Condition Name, Active Time and Cookie is received by the client as 
             part of the event notification.
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             <para>The client is required to pass the activeTime and cookie received in the event notification to the 
             AcknowledgeCondition method without modification.</para>
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Acknowledges a condition in the Event Server. 
             Uses server descriptor for specifying the OPC server.
             Pass in acknowledger ID, use empty comment.
             </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="sourceDescriptor">Contains fully qualified source name. Identifies the source of the condition that is 
             being acknowledged, e.g. FIC101.</param>
             <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
             are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
             </param>
             <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
             identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
             same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
             the client in the event notification. If the condition has become active again or transitioned into a different 
             sub-condition at a later time, this acknowledgment will be ignored.</param>
             <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
             to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
             notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
             back to the server in the condition acknowledgment.</param>
             <param name="acknowledgerId">A string passed in by the client, identifying who is acknowledging the 
             condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
             This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
             notification sent to all subscribing clients. When omitted, a default value from 
             <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode"/>.AcknowledgerId is used. An AcknowledgerId cannot result in an empty string, since 
             such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.</param>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.AcknowledgeCondition(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.String,System.String,System.DateTime,System.Int64,System.String,System.String)">
            <summary>
            Acknowledges a condition in the Event Server. 
            Uses computer name and server class for specifying the OPC server.
            Pass in acknowledger ID and comment.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="qualifiedSourceName">Fully qualified source name. Identifies the source of the condition that is being 
            acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
            <param name="acknowledgerId">A string passed in by the client, identifying who is acknowledging the 
            condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
            This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
            notification sent to all subscribing clients. When omitted, a default value from 
            <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode"/>.AcknowledgerId is used. An AcknowledgerId cannot result in an empty string, since 
            such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.</param>
            <param name="comment">Comment string passed in by the client associated with acknowledging the condition. 
            An empty string indicating no comment is allowed. When omitted, an empty string is used instead.</param>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.AcknowledgeCondition(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.String,System.String,System.DateTime,System.Int64,System.String)">
            <summary>
            Acknowledges a condition in the Event Server. 
            Uses computer name and server class for specifying the OPC server.
            Pass in acknowledger ID, use empty comment.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="qualifiedSourceName">Fully qualified source name. Identifies the source of the condition that is being 
            acknowledged, e.g. FIC101.</param>
            <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
            <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
            <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
            <param name="acknowledgerId">A string passed in by the client, identifying who is acknowledging the 
            condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
            This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
            notification sent to all subscribing clients. When omitted, a default value from 
            <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode"/>.AcknowledgerId is used. An AcknowledgerId cannot result in an empty string, since 
            such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.</param>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseAreas(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String)">
             <overloads>
             <summary>
             Browses the specified area (or root) in OPC server's process area space, and returns information about child areas 
             found.
             </summary>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Browses the specified area for child areas.
             Uses server descriptor for specifying the OPC server.
             A parent area, and a filter is passed in.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="parentNodeDescriptor">Contains fully qualified name of the parent area to be browsed (empty string for 
             root).</param>
             <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
             about a particular area found. The keys of the keyed collection are the names of the areas.</returns>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseAreas(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <summary>
            Browses the specified area for child areas.
            Uses server descriptor for specifying the OPC server.
            A parent area is passed in. No filtering.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="parentNodeDescriptor">Contains fully qualified name of the parent area to be browsed (empty string for 
            root).</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular area found. The keys of the keyed collection are the names of the areas.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseAreas(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>
            Browses the root area for child areas.
            Uses server descriptor for specifying the OPC server.
            No filtering.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular area found. The keys of the keyed collection are the names of the areas.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseAreas(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.String,System.String)">
            <summary>
            Browses the specified area for child areas.
            Uses computer name and server class for specifying the OPC server.
            A parent area, and a filter is passed in.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="parentQualifiedName">Fully qualified name of the parent area to be browsed (empty string for root)
            </param>
            <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular area found. The keys of the keyed collection are the names of the areas.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseAreas(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.String)">
            <summary>
            Browses the specified area for child areas.
            Uses computer name and server class for specifying the OPC server.
            A parent area is passed in. No filtering.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="parentQualifiedName">Fully qualified name of the parent area to be browsed (empty string for root)
            </param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular area found. The keys of the keyed collection are the names of the areas.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseAreas(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String)">
            <summary>
            Browses the root area for child areas.
            Uses computer name and server class for specifying the OPC server.
            No filtering.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular area found. The keys of the keyed collection are the names of the areas.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseNodes(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseFilter)">
             <overloads>
             <summary>
             Browses the specified area (or root) in OPC server's process area space, and returns information about child nodes 
             (areas or sources) found.
             </summary>
             </overloads>
            
             <summary>
             Browses the specified area for child nodes (areas or sources).
             Uses server descriptor for specifying the OPC server.
             A parent area descriptor, and a vendor filter is passed in.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="parentNodeDescriptor">Descriptor for the parent area to be browsed (can be the root).</param>
             <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
             <param name="browseFilter">Which subset of browse elements (areas, sources, or both) to return.</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
             about a particular node (area or source) found. The keys of the keyed collection are the names of the nodes.
             </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseNodes(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.String,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
            <summary>
            Browses the specified area for child areas.
            Uses computer name and server class for specifying the OPC server.
            A parent area name is passed in.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="parentQualifiedName">Fully qualified name of the parent area to be browsed (empty string for root)
            </param>
            <param name="browseParameters">Contains filtering conditions.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular node (area or source) found. The keys of the keyed collection are the names of the nodes.
            </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseSources(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String)">
             <overloads>
             <summary>
             Browses the specified area (or root) in OPC server's process area space, and returns information about child sources
             found.  
             </summary>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Browses the specified area for child sources.
             Uses server descriptor for specifying the OPC server.
             A parent area, and a filter is passed in.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="parentNodeDescriptor">Contains fully qualified name of the parent area to be browsed (empty string for 
             root).</param>
             <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
             about a particular source found. The keys of the keyed collection are the names of the sources.</returns>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseSources(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <summary>
            Browses the specified area for child sources.
            Uses server descriptor for specifying the OPC server.
            A parent area is passed in. No filtering.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="parentNodeDescriptor">Contains fully qualified name of the parent area to be browsed (empty string for 
            root).</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular source found. The keys of the keyed collection are the names of the sources.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseSources(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>
            Browses the root area for child areas.
            Uses server descriptor for specifying the OPC server.
            No filtering.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular source found. The keys of the keyed collection are the names of the sources.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseSources(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.String,System.String)">
            <summary>
            Browses the specified area for child sources.
            Uses computer name and server class for specifying the OPC server.
            A parent area, and a filter is passed in.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="parentQualifiedName">Fully qualified name of the parent area to be browsed (empty string for root)
            </param>
            <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular source found. The keys of the keyed collection are the names of the sources.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseSources(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.String)">
            <summary>
            Browses the specified area for child sources.
            Uses computer name and server class for specifying the OPC server.
            A parent area is passed in. No filtering.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="parentQualifiedName">Fully qualified name of the parent area to be browsed (empty string for root)
            </param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular source found. The keys of the keyed collection are the names of the sources.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.BrowseSources(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String)">
            <summary>
            Browses the root area for child sources.
            Uses computer name and server class for specifying the OPC server.
            No filtering.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it by 
            DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
            about a particular source found. The keys of the keyed collection are the names of the sources.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.QueryCategoryConditions(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,System.Int64)">
            <summary>
            Finds out event conditions supported by given event category.
            Uses server descriptor for specifying the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="categoryId">An event category Id for which the event conditions should be queried.</param>
            <returns>A collection of condition elements, one element for each condition of the given event category.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.QueryCategoryConditions(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int64)">
            <summary>
            Finds out event conditions supported by given event category.
            Uses computer name and server class for specifying the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="categoryId">An event category Id for which the event conditions should be queried.</param>
            <returns>A collection of condition elements, one element for each condition of the given event category.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.QueryEventCategories(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor)">
             <overloads>
             <summary>
             The QueryEventCategories method gives clients a means of finding out the specific categories of events supported by 
             a given server. This method would typically be invoked prior to specifying an event filter. Servers are able to 
             define their own custom event categories, but a list of recommended categories is provided in the OPC specification.  
             </summary>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Finds out events categories supported by the server.  
             Server descriptor is used for specifying the OPC server.
             Queries event categories for all available event types.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement"/> values, each containing 
             information about an event category implemented by the server. The keys of the keyed collection are the event 
             category IDs.</returns>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.QueryEventCategories(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
            <summary>
            Finds out events categories supported by the server.  
            Computer name and server class are used for specifying the OPC server.
            Queries event categories for given event types.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="eventTypes">One or more event types of interest. See <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> constants.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement"/> values, each containing 
            information about an event category implemented by the server. The keys of the keyed collection are the event 
            category IDs.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.QueryEventCategories(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String)">
            <summary>
            Finds out events categories supported by the server.  
            Computer name and server class are used for specifying the OPC server.
            Queries event categories for all available event types.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement"/> values, each containing 
            information about an event category implemented by the server. The keys of the keyed collection are the event 
            category IDs.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.QuerySourceConditions(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <summary>
            Finds out event conditions associated with the specified source name.
            Computer name and server class are used for specifying the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="sourceNodeDescriptor">A source node descriptor, usually expressed as qualified source name. 
            Only the conditions associated with this source are returned.</param>
            <returns>A collection of condition elements, one element for each condition of the given source.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.QueryCategoryAttributes(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,System.Int64)">
            <summary>
            Finds out event attributes that the server can provide as part of an event notification within a given event 
            category.
            Uses server descriptor for specifying the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="categoryId">An event category Id for which the event attributes should be queried.</param>
            <returns>A collection of attribute elements, one element for each attribute of the given event category.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.QueryCategoryAttributes(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int64)">
            <summary>
            Finds out event attributes that the server can provide as part of an event notification within a given event 
            category.
            Uses computer name and server class for specifying the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="categoryId">An event category Id for which the event attributes should be queried.</param>
            <returns>A collection of attribute elements, one element for each attribute of the given event category.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
             <overloads>
             <summary>
             Subscribe to particular OPC events. The <see cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/> is generated for each event.
             </summary>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Subscribe to OPC events, using an object that holds all necessary arguments.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="arguments">Holds an OPC server descriptor, event subscription parameters, and possibly a callback method,
             as arguments to subscription operation.</param>
             <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,System.Object)">
            
             <summary>
             Subscribe to OPC events. Specify server descriptor and subscription parameters objects, and "refresh when active" 
             flag.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="subscriptionParameters">Subscription parameters to be used when the subscription is created</param>
             <param name="refreshWhenActive">When set, the subscription will automatically perform
             a Refresh after each successful connection to the server (either the initial connection, or any automatic 
             reconnection after the connection is lost).</param>
             <param name="state">The state object (can be any value supplied by your code); available in event 
             notifications.</param>
             <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean,System.Boolean)">
            <summary>
            Subscribe to OPC events. Specify machine name, server class, notification rate, filter object, returned attributes,
            callback method, and "active" and "refresh when active" flags.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
            <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/> events will be 
            generated, but no callback method will be invoked.</remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean,System.Boolean)">
            <summary>
            Subscribe to OPC events. Specify machine name, server class, notification rate, filter object, returned attributes,
            and "active" and "refresh when active" flags.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
            <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
            <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean)">
            <summary>
            Subscribe to OPC events. Specify machine name, server class, notification rate, filter object, returned attributes,
            and an "active" flag. The subscription will automatically perform a Refresh after each successful connection to the 
            server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
            <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
            <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary)">
            <summary>
            Subscribe to OPC events. Specify machine name, server class, notification rate, filter object, and returned 
            attributes. The subscription is created active, and it will automatically perform a Refresh after each successful 
            connection to the server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category. If omitted, no event attributes will be returned in event notifications.</param>
            <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAENotificationEventArgs\AttributeValues.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int32,System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
            <summary>
            Subscribe to OPC events. Specify machine name, server class, notification rate, and filter object.
            The subscription is created active, and it will automatically perform a Refresh after each successful connection to 
            the server. No event attributes will be returned with the notifications.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
            for the event subscription.</param>
            <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler)">
            <summary>
            Subscribe to OPC events. Specify machine name, server class, notification rate, and a callback method.
            The subscription is created active, and it will automatically perform a Refresh after each successful connection to 
            the server. No event attributes will be returned with the notifications, and events will not be filtered.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="callback">A callback method to be invoked for each OPC event.</param>
            <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/> events will be 
            generated, but no callback method will be invoked.</remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.CallbackLambda.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.CallbackLambda.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int32,System.Object)">
            <summary>
            Subscribe to OPC events. Specify machine name, server class, and notification rate.
            The subscription is created active, and it will automatically perform a Refresh after each successful connection to 
            the server. No event attributes will be returned with the notifications, and events will not be filtered.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.String,System.String,System.Int32)">
            <summary>
            Subscribe to OPC events. Specify machine name, server class, and notification rate.
            The subscription is created active, and it will automatically perform a Refresh after each successful connection to 
            the server. No event attributes will be returned with the notifications, and events will not be filtered.
            Does not pass in a "state" object for use in event notifications.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.ChangeEventSubscription(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
             <overloads>
             <summary>
             Changes parameters of a particular event subscription.
             </summary>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Changes parameters of an event subscription. Specify new notification rate and subscription filter object.
             The subscription will be activated.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="handle">Event subscription handle as returned by the SubscribeEvents method</param>
             <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
             the server how often to send event notifications. This is a minimum time - do not send event notifications any 
             faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
             send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
             between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
             the parameter.</param>
             <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
             for the event subscription.</param>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.ChangeEventSubscription(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.Int32,System.Int32)">
            <summary>
            Changes parameters of an event subscription. Specify new notification rate.
            There will be no filtering, and the subscription will be activated.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="handle">Event subscription handle as returned by the SubscribeEvents method</param>
            <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.PullNotification(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.Int32)">
            <summary>
            Attempts to pull an OPC event subscribed to by the <see cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)"/> method. Returns
            refresh or standard event notifications.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite"/> (-1) to wait indefinitely.</param>
            <returns>The event arguments, or <c>null</c> if no event is available within the specified time.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient">
            <summary>
            Allows simple access to OPC Alarms&amp;Events servers.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.HandleRanges">
            <summary>
            Infrastructure. Gets the handle ranges allocated by this client.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SupportedTechnologies">
            <summary>
            Gets the OPC technologies supported.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.IsKnownEventSubscriptionHandle(System.Int32)">
            <summary>
            Determines whether the given event subscription handle is known to this client.
            </summary>
            <param name="handle">The event subscription handle to be tested.</param>
            <returns>Returns <c>true</c> if the given handle is known to the client (i.e. represents a currently subscribed event).
            Otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])">
             <overloads>
             <summary>
             Returns the current state information for the condition instance corresponding to the source and condition name.
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             <para>Some servers may not maintain sufficient condition state information to fully implement this method.</para>
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Returns the current state information for the condition instance corresponding to the source and condition name,
             passing in a server descriptor. 
             Also allows to retrieve specified event attributes.
             </summary>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="sourceDescriptor">Contains fully qualified source name, as returned by browsing. The state of 
             the condition instance associated with this source is returned.</param>
             <param name="conditionName">A condition name, as returned by querying. The state of this condition is returned.
             </param>
             <param name="attributes">Specifies the event attributes to be returned.</param>
             <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/> object. The object contains 
             information about the state of the condition.</returns>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)">
             <overloads>
             <summary>
             Acknowledges a condition in the Event Server. The client will receive event notifications (indicating the 
             acknowledgement) from conditions. This method specifically acknowledges the condition becoming active or 
             transitioning into a different sub-condition (and no other state transition of the condition). One or more 
             conditions belong to a specific event source - the source of the event notification. For each condition-related 
             event notification, the corresponding Source, Condition Name, Active Time and Cookie is received by the client as 
             part of the event notification.
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             <para>The client is required to pass the activeTime and cookie received in the event notification to the 
             AcknowledgeCondition method without modification.</para>
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Acknowledges a condition in the Event Server. 
             Uses server descriptor for specifying the OPC server.
             Pass in acknowledger ID and comment.
             </summary>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="sourceDescriptor">Contains fully qualified source name. Identifies the source of the condition that is 
             being acknowledged, e.g. FIC101.</param>
             <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
             are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
             </param>
             <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
             identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
             same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState"/>.SubconditionActiveTime condition attribute. Active Times are passed to 
             the client in the event notification. If the condition has become active again or transitioned into a different 
             sub-condition at a later time, this acknowledgment will be ignored.</param>
             <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
             to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
             notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
             back to the server in the condition acknowledgment.</param>
             <param name="acknowledgerId">A string passed in by the client, identifying who is acknowledging the 
             condition. This is an attribute (AcknowledgerID) of the condition that identifies who acknowledged the condition. 
             This is just a string generated by the client. This is also also included as the ActorId in the acknowledgment event 
             notification sent to all subscribing clients. When omitted, a default value from 
             <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEClientMode"/>.AcknowledgerId is used. An AcknowledgerId cannot result in an empty string, since 
             such AcknowledgerId is used to indicate that the event was automatically acknowledged by the server.</param>
             <param name="comment">Comment string passed in by the client associated with acknowledging the condition. 
             An empty string indicating no comment is allowed. When omitted, an empty string is used instead.</param>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <summary>
            Browses the specified computer and returns information about OPC (Alarms and Events) servers found.
            </summary>
            <param name="location">Name of the machine. Determines the computer to browse for OPC servers. May be an empty 
            string, in which case the the local computer will be browsed.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.ServerElement"/> values, each containing information 
            about a particular OPC server found on the specified machine. The keys of the keyed collection are the server's 
            CLSIDs.</returns>
            <param name="technologies">The OPC technologies to be used for server browsing.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseServers.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseServers.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
             <overloads>
             <summary>
             Browses the specified area (or root) in OPC server's process area space, and returns information about child nodes 
             (areas or sources) found.
             </summary>
             </overloads>
            
             <summary>
             Browses the specified area for child nodes (areas or sources).
             Uses server descriptor for specifying the OPC server.
             A parent area descriptor is passed in. No vendor-specific filtering.
             </summary>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="parentNodeDescriptor">Descriptor for the parent area to be browsed (can be the root).</param>
             <param name="browseParameters">Contains filtering conditions.</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement"/> values, each containing information 
             about a particular node (area or source) found. The keys of the keyed collection are the names of the nodes.
             </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
             <overloads>
             <summary>
             The QueryEventCategories method gives clients a means of finding out the specific categories of events supported by 
             a given server. This method would typically be invoked prior to specifying an event filter. Servers are able to 
             define their own custom event categories, but a list of recommended categories is provided in the OPC specification.  
             </summary>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Finds out events categories supported by the server.  
             Server descriptor is used for specifying the OPC server.
             Queries event categories for given event types.
             </summary>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="eventTypes">One or more event types of interest. See <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType"/> constants.</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AECategoryElement"/> values, each containing 
             information about an event category implemented by the server. The keys of the keyed collection are the event 
             category IDs.</returns>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
            <summary>
            Finds out event conditions associated with the specified source name.
            Uses server descriptor for specifying the OPC server.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="sourceNodeDescriptor">A source node descriptor, usually expressed as qualified source name. 
            Only the conditions associated with this source are returned.</param>
            <returns>A collection of condition elements, one element for each condition of the given source.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QuerySourceConditions.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\QuerySourceConditions.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)">
             <overloads>
             <summary>
             Subscribe to particular OPC events. The <see cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/> is generated for each event.
             </summary>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.php" 
                 lang="PHP" title="PHP"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Subscribe to OPC events. Specify server descriptor and subscription parameters objects, "refresh when active" 
             flag, and a callback method.
             </summary>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="subscriptionParameters">Subscription parameters to be used when the subscription is created</param>
             <param name="refreshWhenActive">When set, the subscription will automatically perform
             a Refresh after each successful connection to the server (either the initial connection, or any automatic 
             reconnection after the connection is lost).</param>
             <param name="callback">A callback method to be invoked for each OPC event.</param>
             <param name="state">The state object (can be any value supplied by your code); available in event 
             notifications.</param>
             <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
             <remarks>If <paramref name="callback"/> is a null reference, only the 
             <see cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification"/> events will be 
             generated, but no callback method will be invoked.</remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.php" 
                 lang="PHP" title="PHP"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.FilterByCategories.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,System.Boolean)">
             <overloads>
             <summary>
             Changes parameters of a particular event subscription.
             </summary>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>
             Changes parameters of an event subscription. Specify new notification rate, subscription filter object, and 
             an "active" flag.
             </summary>
             <param name="handle">Event subscription handle as returned by the SubscribeEvents method</param>
             <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
             the server how often to send event notifications. This is a minimum time - do not send event notifications any 
             faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
             send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
             between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
             the parameter.</param>
             <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> that determines the filtering criteria to be used 
             for the event subscription.</param>
             <param name="active">Activates or deactivates the subscription. If the client deactivates the subscription, then 
             the server will no longer send event notifications to the client based on that subscription, and 
             has no responsibility to buffer or maintain the event notifications. Thus event notifications may be lost.
             Even if the subscription is inactive, the Refresh method will still function. In effect, this allows a client to 
             obtain current condition states from time to time (by invoking Refresh) without the need to process event 
             notifications in "real time".</param>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.cs" 
                 lang="CSharp"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.RefreshEventSubscription(System.Int32)">
            <summary>
            Force a refresh for all active conditions and inactive, unacknowledged conditions whose event notifications match 
            the filter of the event subscription.
            <br/><br/>
            Clients often need to get the current condition information from the server, particularly at client startup, for 
            things such as a current alarm summary. The OPC Event Server supports this requirement by resending the most recent 
            event notifications which satisfy the filter in the event subscription and which are related to active and/or 
            unacknowledged conditions. The client can then derive the current condition status from the "refreshed" event 
            notifications.
            </summary>
            <param name="handle">Event subscription handle as returned by the SubscribeEvents method</param>
            <remarks>
            <para>When the client needs a refreshed list of active conditions, it will request a "refresh" from the server. The 
            server will send event notifications to that specific client indicating that they are "refresh" instead of 
            "original" event notifications. Since the client only needs to get the current state information for conditions, 
            only condition events will be refreshed. 
            Remark: "Refresh" is not a general "replay" capability since the server is not required to 
            maintain an event history. Refresh is only for updating the client's state information for active or unacknowledged 
            conditions.</para>
            <para>In addition to the refresh indicator, there may be other differences between original and refresh event 
            notifications. Specifically, since some attribute information available at the time of the original event 
            notification may be unavailable at the time of the refresh, some attributes in the refresh may be null.</para>
            <para>Refresh and original event notifications may be interleaved. Thus, it is the responsibility of the client to 
            check time stamps on the event notifications and put them into the correct order, to ensure correct condition status 
            is obtained.</para>
            <para>When sending refresh event notifications, the server indicates if there are more refresh event notifications 
            to send (see the RefreshComplete property of EasyAENotificationEventArgs).</para>
            <para>This method is applicable to condition-related events only. Notifications for simple events and tracking 
            events are not returned, even if they would satisfy the filter of the event subscription.</para>
            <para>This method is applicable both when the subscription is active and when it is inactive (see the discussion of 
            the Active for the SubscribeEvents and ChangeEventSubscription methods).</para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\RefreshEventSubscription.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\RefreshEventSubscription.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeEvents(System.Int32)">
            <summary>
            Unsubscribe from particular OPC event notifications.
            </summary>
            <param name="handle">Event subscription handle as returned by the SubscribeEvents method</param>
            <remarks>
            <para>The event subscription handle becomes invalid after this method is called.</para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\UnsubscribeEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\UnsubscribeEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeAllEvents">
            <summary>
            Unsubscribe from changes of all OPC events.
            </summary>
            <remarks>
            All event subscriptions on this <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient"/> object are unsubscribed. Their corresponding handles
            become invalid after this method is called.
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\UnsubscribeAllEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\UnsubscribeAllEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)">
            <summary>
            Attempts to pull multiple OPC events subscribed to by the <see cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAENotificationEventHandler,System.Object)"/> method. Returns refresh or standard event notifications.
            </summary>
            <param name="maximumCount">Maximum number of event notifications returned.</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite"/> (-1) to wait indefinitely.</param>
            <returns>The event arguments, or <c>null</c> if no event is available within the specified time.</returns>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.EventingFailure">
            <summary>
            Raised when a failure in the eventing infrastructure occurs.
            </summary>
        </member>
        <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification">
            <summary>
            Raised for every OPC event subscribed to by the SubscribeEvents method. This method can be called whether this is 
            a refresh or standard event notification.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\SWToolbox\TOPServer_AE.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientEnqueuing">
            <summary>
            Provides access to enqueuing for <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient"/> objects.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientEnqueuing.PullNotificationQueueCapacity">
            <summary>
            Capacity of the event pull queue for notifications.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main1.cs" 
                lang="CSharp"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientSettings">
            <summary>
            Provides access to settings for <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient"/> objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientSettings.InstanceParameters">
            <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientSettings.IsolatedParameters">
            <summary>
            Contains parameters that influence the behavior of the component when it is isolated.
            </summary>
            <remarks>Parameters in this property only apply to instances that have their <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientSettings.Isolated"/> property 
            equal to <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientSettings.Isolated">
            <summary>Specifies that you wish that the object instance works with an "isolated" 
            connection to the OPC server, i.e. one that is not shared with other instances.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters">
            <summary>Contains filtering conditions for OPC Alarms&amp;Events node browsing.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.DefaultBrowseFilter">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.BrowseFilter"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.DefaultVendorFilter">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.VendorFilter"/>. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseFilter,System.String)">
            <summary>Initializes a new instance of the class, with specified browse filter and vendor filter.</summary>
            <param name="browseFilter">Specifies which subset of browse elements to return.</param>
            <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseFilter)">
            <summary>Initializes a new instance of the class, with specified browse filter.</summary>
            <param name="browseFilter">Specifies which subset of browse elements to return.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters"/> object.</summary>
            <param name="browseParameters">Contains filtering conditions to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.Empty">
            <summary>
            An empty node filter.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="nodeFilter1">First object to be compared.</param>
            <param name="nodeFilter2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="nodeFilter1">First object to be compared.</param>
            <param name="nodeFilter2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.BrowseFilter">
            <summary>Specifies which subset of browse elements to return (areas, sources, or both).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.VendorFilter">
            <summary>A server specific filter string (empty string for no filtering).</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_AEBrowseParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AEBrowseParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters">
            <summary>Contains event subscription parameters, such as the active flag, notification rate, filter, and selection 
            of returned attributes.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.DefaultActive">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Active"/> property. Equals to <c>true</c>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.DefaultNotificationRate">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.NotificationRate"/> property. Equals to <see cref="F:System.Threading.Timeout.Infinite"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters"/> class.
            </summary>
            </overloads>
            
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters)">
            <summary>Initializes a new instance of the class, from other <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters"/>.</summary>
            <param name="subscriptionParameters">Subscription parameters object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.#ctor(System.Boolean,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary)">
            <summary>Initializes a new instance of the class, specifying the "active" flag, notification rate, subscription
            filter object, and returned attributes.</summary>
            <param name="active">Denotes active or inactive subscription.</param>
            <param name="notificationRate">Notification rate of the event subscription.</param>
            <param name="filter">Filtering criteria for the event subscription.</param>
            <param name="returnedAttributesByCategory">Attributes to be returned with event notifications for each event 
            category.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.#ctor(System.Boolean,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
            <summary>Initializes a new instance of the class, specifying the "active" flag, notification rate, and
            subscription filter object.</summary>
            <param name="active">Denotes active or inactive subscription.</param>
            <param name="notificationRate">Notification rate of the event subscription.</param>
            <param name="filter">Filtering criteria for the event subscription.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.#ctor(System.Boolean,System.Int32)">
            <summary>Initializes a new instance of the class, specifying the "active" flag, and notification rate.</summary>
            <param name="active">Denotes active or inactive subscription.</param>
            <param name="notificationRate">Notification rate of the event subscription.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.#ctor(System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary)">
            <summary>Initializes a new instance of the class, specifying notification rate, subscription
            filter object, and returned attributes.</summary>
            <param name="notificationRate">Notification rate of the event subscription.</param>
            <param name="filter">Filtering criteria for the event subscription.</param>
            <param name="returnedAttributesByCategory">Attributes to be returned with event notifications for each event 
            category.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.#ctor(System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
            <summary>Initializes a new instance of the class, specifying notification rate, and
            subscription filter object.</summary>
            <param name="notificationRate">Notification rate of the event subscription.</param>
            <param name="filter">Filtering criteria for the event subscription.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.#ctor(System.Int32)">
            <summary>Initializes a new instance of the class, specifying notification rate.</summary>
            <param name="notificationRate">Notification rate of the event subscription.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Default">
            <summary>
            Default subscription parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.DefaultFilter">
            <summary>
            Default filter.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Active">
            <summary>Denotes active or inactive subscription.</summary>
            <remarks>
            <para>If the client deactivates the subscription, then the server will no longer send event notifications to the client 
            based on that subscription, and has no responsibility to buffer or maintain the event notifications. Thus event 
            notifications may be lost.</para>
            <para>Even if the subscription is inactive, the Refresh method will still function. In effect, this allows a client 
            to obtain current condition states from time to time (by invoking Refresh) without the need to process event notifications 
            in "real time".</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.NotificationRate">
            <summary>Notification rate of the event subscription.</summary>
            <remarks>
            <para>The notification rate is in milliseconds and tells the server how often to send event notifications. This is a 
            minimum time - do not send event notifications any faster that this UNLESS the buffer size is reached. A value of 0 
            for notification rate means that the server should send event notifications as soon as it gets them. This property is 
            used to improve communications efficiency between client and server. The notification rate is a recommendation from 
            the client, and the server is allowed to ignore the parameter.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Filter">
            <summary>Filtering criteria for the event subscription.</summary>
            <remarks>
            <para>Contains <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter"/> object.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.ReturnedAttributesByCategory">
            <summary>Attributes to be returned with event notifications for each event category.</summary>
            <remarks>
            <para>A dictionary where they key is the category ID, and the value is an array of attribute IDs for that event 
            category.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_AESubscriptionParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._AESubscriptionParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.ResetFilter">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Filter"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.ShouldSerializeFilter">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.Filter"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.ResetReturnedAttributesByCategory">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.ReturnedAttributesByCategory"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.ShouldSerializeReturnedAttributesByCategory">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters.ReturnedAttributesByCategory"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Boxing.Redistributables.NamespaceDoc">
            <summary>
            This namespace contains boxer classes for OPC "Classic" redistributables.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Boxing.Redistributables.OpcCorePSBoxer">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.Boxing.Redistributables.Ucrt10RedistBoxer">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.Boxing.Redistributables.VC140RedistBoxer">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.Browsing.NamespaceDoc">
            <summary>
            This namespace contains classes that facilitate browsing in OPC "Classic".
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Browsing.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.Resource1.NoOpcServerFamily">
            <summary>
              Looks up a localized string similar to No OPC server family has been specified..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.Resource1.ProblemBrowsingOpcAEServers">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Alarms&amp;Events (OPC-A&amp;E) servers..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.Resource1.ProblemBrowsingOpcDAServers">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Data Access (OPC-DA) servers..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.Resource1.ServerBrowseable_CreateNode_ServerUrlComputerNameMismatch">
            <summary>
              Looks up a localized string similar to The location &quot;{0}&quot; contained in OPC server URL &quot;{1}&quot; does not match the computer name of the parent node, &quot;{2}&quot;. You need to add your server node under the proper computer node, or place it under &quot;Any Computer&quot;, if available..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.Resource1.ServerBrowseable_ServerClassOrUrlCannotBeEmpty">
            <summary>
              Looks up a localized string similar to Server class or URL cannot be empty..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Browsing.ServerBrowseable">
            <exclude/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.ServerBrowseable.ServerFamilies">
            <summary>
            The server family or families. Determines e.g. whether OPC Data Access servers, OPC Alarms&amp;Events servers, 
            other servers, or a combination of them will be browsed.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode.op_Equality(OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode,OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode.op_Inequality(OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode,OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode.Technologies">
            <summary>
            The OPC technologies to be used for server browsing.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode.Matches(OpcLabs.BaseLib.Browsing.ComputerBrowseNode)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Browsing.ComputerBrowseNode.Matches(OpcLabs.BaseLib.Browsing.ComputerBrowseNode)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode.Equals(OpcLabs.EasyOpc.Browsing.OpcComputerBrowseNode)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Browsing.ServerBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.ServerBrowseNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.ServerBrowseNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.ServerBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.ServerBrowseNode.op_Equality(OpcLabs.EasyOpc.Browsing.ServerBrowseNode,OpcLabs.EasyOpc.Browsing.ServerBrowseNode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.ServerBrowseNode.op_Inequality(OpcLabs.EasyOpc.Browsing.ServerBrowseNode,OpcLabs.EasyOpc.Browsing.ServerBrowseNode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.ServerBrowseNode.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.ServerBrowseNode.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Browsing.ServerBrowseNode.Equals(OpcLabs.EasyOpc.Browsing.ServerBrowseNode)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Browsing.IServerBrowseNode">
            <exclude/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.IServerBrowseNode.ServerDescriptor">
            <summary>Gets the OPC server descriptor.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Browsing.IServerBrowseNode.ServerElement">
            <summary>
            Gets the information about the OPC server. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Browsing.IOpcRootBrowseNode">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Catids">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for classes that facilitate easy work with OPC Classic.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.ComTypes._NodeElement">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.NodeElement"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeElement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeElement.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeElement.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeElement.BrowsePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.BrowsePath"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeElement.HasChildren">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.HasChildren"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeElement.IsRoot">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.IsRoot"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeElement.Name">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.Name"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.ComTypes._OpcResultException">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.OpcResultException"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._OpcResultException.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._OpcResultException.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._OpcResultException.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._OpcResultException.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._OpcResultException.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._OpcResultException.Message">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.Message"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._OpcResultException.StackTrace">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.StackTrace"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._OpcResultException.HelpLink">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.HelpLink"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._OpcResultException.Source">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.Source"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._OpcResultException.InnerException">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.InnerException"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._OpcResultException.TargetSite">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.TargetSite"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._OpcResultException.GetBaseException">
            <inheritdoc cref="M:System.Runtime.InteropServices._Exception.GetBaseException"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._OpcResultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._OpcResultException.Data">
            <inheritdoc cref="P:System.Exception.Data"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._OpcResultException.HResult">
            <inheritdoc cref="P:System.Exception.HResult"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.ComTypes._NodeDescriptor">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.NodeDescriptor"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.ArgumentString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.ArgumentString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.BrowsePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.BrowsePath"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.IsNull">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.IsNull"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.IsRoot">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.IsRoot"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.NodeId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.NodeId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.NodePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.NodePath"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.Match(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.NodeDescriptor.Match(OpcLabs.EasyOpc.NodeDescriptor)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.ComTypes._ServerCategories">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.ServerCategories"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\_ServerCategories\Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerCategories.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerCategories.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerCategories.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerCategories.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerCategories.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerCategories.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerCategories.Families">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerCategories.Families"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerCategories.OpcAlarmsAndEvents10">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerCategories.OpcAlarmsAndEvents10"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerCategories.OpcDataAccess10">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerCategories.OpcDataAccess10"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerCategories.OpcDataAccess20">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerCategories.OpcDataAccess20"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerCategories.OpcDataAccess30">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerCategories.OpcDataAccess30"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerCategories.OpcXmlDataAccess10">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerCategories.OpcXmlDataAccess10"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.ComTypes._ServerDescriptor">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.ServerDescriptor"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Authority">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.Authority"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.DescriptorString">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.DescriptorString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.PathAndQuery">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.PathAndQuery"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.SchemeAndAuthority">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.SchemeAndAuthority"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.UserInfo">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.UserInfo"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.UrlString">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.UrlString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Fragment">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.Fragment"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Host">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.Host"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.IsNull">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.IsNull"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Password">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.Password"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Path">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.Path"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Port">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.Port"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Prefix">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.Prefix"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Query">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.Query"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Scheme">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.Scheme"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.UserName">
            <inheritdoc cref="P:OpcLabs.BaseLib.ResourceDescriptor.UserName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.NetworkSecurity">
            <inheritdoc cref="P:OpcLabs.BaseLib.EndpointDescriptor.NetworkSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Clsid">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectDescriptor.Clsid"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.ClsidString">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectDescriptor.ClsidString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Location">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectDescriptor.Location"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.MachineName">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectDescriptor.MachineName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.ObjectId">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectDescriptor.ObjectId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.ProgId">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectDescriptor.ProgId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.ServerClass">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectDescriptor.ServerClass"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.ShortUrlString">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectDescriptor.ShortUrlString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.Technology">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerDescriptor.Technology"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.ComTypes._ServerElement">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.ServerElement"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\_ServerElement\Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElement.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.Clsid">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.Clsid"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.ClsidString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.ClsidString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.Description">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.Description"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.Location">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.Location"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.ProgId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.ProgId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.ServerCategories">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.ServerCategories"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.ServerClass">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.ServerClass"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.Technology">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.Technology"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.UrlString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.UrlString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.Vendor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.Vendor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElement.VersionIndependentProgId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ServerElement.VersionIndependentProgId"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.ComTypes._ServerElementCollection">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.ServerElementCollection"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.Item(System.String)">
            <inheritdoc cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.Add(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.Contains(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.Remove(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ComTypes._ServerElementCollection.ToList">
            <summary>
            Creates a list from a keyed collection.
            </summary>
            <returns>A list that contains values from the keyed collection.</returns>
            <remarks>
            <para>
            This method is provided to allow access to the keyed collection elements to languages and tools with limited COM
            collection support, such PowerScript (PowerBuilder).</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for OPC Data Access address space classes.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.BrowsePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.BrowsePath"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.HasChildren">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.HasChildren"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.IsRoot">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.IsRoot"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.Name">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.Name"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.IsBranch">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.IsBranch"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.IsLeaf">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.IsLeaf"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.IsHint">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.IsHint"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.IsItem">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.IsItem"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.ItemId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.ItemId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.NodePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeElement.NodePath"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.Item(System.String)">
            <inheritdoc cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.Add(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.Contains(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.Remove(System.String)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElementCollection.ToList">
            <summary>
            Creates a list from a keyed collection.
            </summary>
            <returns>A list that contains values from the keyed collection.</returns>
            <remarks>
            <para>
            This method is provided to allow access to the keyed collection elements to languages and tools with limited COM
            collection support, such PowerScript (PowerBuilder).</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.DataType">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DataType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.Description">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.Description"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.DescriptorString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DescriptorString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.ItemId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.ItemId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.Name">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.Name"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.ItemPath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.ItemPath"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.PropertyId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.PropertyId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.QualifiedName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.QualifiedName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.QualifiedNameString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.QualifiedNameString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.Item(System.Object)">
            <inheritdoc cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.Count">
            <inheritdoc cref="P:System.Collections.ObjectModel.Collection`1.Count"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.GetEnumerator">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.GetEnumerator"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.Add(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.Clear">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.Clear"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.Contains(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.Remove(System.Object)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElementCollection.ToList">
            <summary>
            Creates a list from a keyed collection.
            </summary>
            <returns>A list that contains values from the keyed collection.</returns>
            <remarks>
            <para>
            This method is provided to allow access to the keyed collection elements to languages and tools with limited COM
            collection support, such PowerScript (PowerBuilder).</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.NamespaceDoc">
            <summary>
            This namespace contains classes for OPC Data Access address space.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection">
            <summary>
            A collection of node elements (<see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/>), keyed by their names.
            </summary>
            <remarks>
            This collection is returned by the browsing methods.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection.#ctor">
            <summary> 
            Initializes a new instance of the class. 
            </summary> 
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement})">
            <summary> 
            Initializes a new instance of the class that contains 
            elements copied from the specified collection. 
            </summary> 
            <param name="collection">collection: The collection from which the elements are copied.</param> 
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception> 
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection.op_Equality(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection,OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="nodeElementCollection1">First object to be compared.</param>
            <param name="nodeElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection.op_Inequality(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection,OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="nodeElementCollection1">First object to be compared.</param>
            <param name="nodeElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection.Keys">
            <summary>
            A collection of node names that are keys to the condition elements in the dictionary.
            </summary>
            <returns>Returns a collection of keys. Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElementCollection.GetKeyForItem(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection">
            <summary>
            A collection of property elements (<see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement"/>), keyed by their names.
            </summary>
            <remarks>
            This collection is returned by the browsing methods.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.#ctor">
            <summary> 
            Initializes a new instance of the class. 
            </summary> 
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement})">
            <summary> 
            Initializes a new instance of the class that contains 
            elements copied from the specified collection. 
            </summary> 
            <param name="collection">collection: The collection from which the elements are copied.</param> 
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception> 
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.op_Equality(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection,OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="propertyElementCollection1">First object to be compared.</param>
            <param name="propertyElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.op_Inequality(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection,OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="propertyElementCollection1">First object to be compared.</param>
            <param name="propertyElementCollection2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.GetSchema">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.ReadXml(System.Xml.XmlReader)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.Keys">
            <summary>
            A collection of property descriptors that are keys to the condition elements in the dictionary.
            </summary>
            <returns>Returns a collection of keys. Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElementCollection.GetKeyForItem(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement">
            <summary>Contains information gathered about an OPC-DA node (branch or leaf in OPC-DA server's address space).</summary>
            <remarks>
            This object is filled in and returned e.g. when you browse the OPC-DA server's address space.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.DefaultNodeId">
            <exclude/>
            <summary>Infrastructure.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.DefaultItemId">
            <summary>
            Default Item Id. Equals to <b>null</b>, meaning that no Item Id is specified.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.#ctor(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> object.</summary>
            <param name="nodeElement">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.#ctor(System.String,OpcLabs.BaseLib.Navigation.BrowsePath,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.Root">
            <summary>
            The node element for the root of the address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.op_Equality(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement,OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="nodeElement1">First object to be compared.</param>
            <param name="nodeElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.op_Inequality(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement,OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="nodeElement1">First object to be compared.</param>
            <param name="nodeElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.MakePathElements(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a path containing <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/>-s made from browse names, starting from the root.
            </summary>
            <param name="browseNames">The browse names that represent the path to be created.</param>
            <returns>An enumerable of node elements, starting from the root.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.ItemId">
            <summary>The unique identifier for this item.</summary>
            <remarks>
            If the <see cref="P:OpcLabs.EasyOpc.NodeElement.IsLeaf"/> is True and ItemID is an empty string, then this element is a “hint” versus 
            being a valid item. The <see cref="P:OpcLabs.EasyOpc.NodeElement.Name"/> property contains the hint text.
            If the value is a null reference, then the server has failed provide the item ID.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.IsHint">
            <summary>
            This element is a “hint” leaf versus being a valid item. The <see cref="P:OpcLabs.EasyOpc.NodeElement.Name"/> property contains the 
            hint text, and ItemID is an empty string.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.IsItem">
            <summary>
            This element is an item, i.e. it is a leaf but not a hint.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.Name">
            <summary>Short user friendly portion of the namespace pointing to the element. This is the string to be used for 
            display purposes.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.NodeId">
            <exclude/>
            <summary>Infrastructure.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.OpcLabs#EasyOpc#DataAccess#AddressSpace#ComTypes#_DANodeElement#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DANodeElement.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement">
            <summary>Contains information gathered about an OPC property.</summary>
            <remarks>
            This object is filled in and returned e.g. when you browse the properties of an OPC item.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DefaultDescription">
            <summary>
            Default description. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DefaultItemId">
            <summary>
            Default Item Id that can be used to access the property (none, i.e. an empty string). 
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DefaultItemPath">
            <summary>
            Default item path that can be used to access the property (none, i.e. an empty string). 
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DefaultName">
            <summary>
            Default property name. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DefaultQualifiedNameString">
            <summary>
            Default string form of the qualified name. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement"/> object.</summary>
            <param name="propertyElement">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId,OpcLabs.BaseLib.Xml.XmlQualifiedName2,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId,OpcLabs.BaseLib.ComInterop.VarType,System.String,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId,OpcLabs.BaseLib.Xml.XmlQualifiedName2,OpcLabs.BaseLib.ComInterop.VarType,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(System.String,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(OpcLabs.BaseLib.Xml.XmlQualifiedName2,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(System.String,OpcLabs.BaseLib.ComInterop.VarType,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(OpcLabs.BaseLib.Xml.XmlQualifiedName2,OpcLabs.BaseLib.ComInterop.VarType,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DefaultDataType">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DataType"/> property. Equals to <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DefaultPropertyId">
            <summary>
            Default property Id. It is a "null" property Id, signifying that the property Id is not specified.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DefaultQualifiedName">
            <summary>
            Default qualified name (used with OPC XML-DA). Empty.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.op_Equality(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement,OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="propertyElement1">First object to be compared.</param>
            <param name="propertyElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.op_Inequality(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement,OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="propertyElement1">First object to be compared.</param>
            <param name="propertyElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.op_Implicit(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement)~System.String">
            <summary>
            Converts the object into a string usable for identification of the property.
            The value returned is the <see cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.PropertyId"/> integer formatted as a string.
            </summary>
            <returns>Returns the main characteristics of the object expressed as a string.</returns>
            <param name="propertyElement">The object to be expressed as a string.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DataType">
            <summary>The canonical data type of this property.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.Description">
            <summary>A non-localized text description of the property.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DescriptorString">
            <summary>
            A string that describes the property.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.ItemId">
            <summary>A fully qualified Item Id that can be used to access this property. An empty string denotes that 
            the property can not be accessed via an Item Id.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.ItemPath">
            <summary>
            Contains item path (empty string for the root or if unknown) of an item that can be used to access this property. 
            Only used with OPC XML.
            </summary>
            <remarks>
            <para>
            Not to be confused with the browse path, or the access path (only in OPC-DA 1.0, and quite rare). 
            Corresponds to <see cref="P:OpcLabs.EasyOpc.NodeDescriptor.NodePath"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.Name">
            <summary>A string identifier of the property, for pre-defined properties. An empty string if the property is not 
            known.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.PropertyId">
            <summary>The Property ID for this property.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.QualifiedName">
            <summary>The qualified name for this property (used with OPC XML-DA).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.QualifiedNameString">
            <summary>The string form of the qualified name for this property (used with OPC XML-DA).</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.ToString">
            <summary>Returns a string with the property Id.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.OpcLabs#EasyOpc#DataAccess#AddressSpace#ComTypes#_DAPropertyElement#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.ComTypes._DAPropertyElement.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.ResetQualifiedName">
            <summary>
            Reset the <see cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.QualifiedName"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.ShouldSerializeQualifiedName">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement.QualifiedName"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.NamespaceDoc">
            <summary>
            This namespace contains classes that facilitate browsing in OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.Resource1.ProblemBrowsingOpcDAAccessPaths">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Data Access (OPC-DA) access paths..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.Resource1.ProblemBrowsingOpcDABranches">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Data Access (OPC-DA) branches..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.Resource1.ProblemBrowsingOpcDALeaves">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Data Access (OPC-DA) leaves..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.Resource1.ProblemBrowsingOpcDAProperties">
            <summary>
              Looks up a localized string similar to Problem browsing OPC Data Access (OPC-DA) properties..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.DAAccessPathBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.DAPropertyBrowseable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.DABranchBrowseFilter">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DABranchBrowseFilter.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DABranchBrowseFilter.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DABranchBrowseFilter.Equals(OpcLabs.EasyOpc.DataAccess.Browsing.DABranchBrowseFilter)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.DALeafBrowseFilter">
            <exclude/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.DALeafBrowseFilter.DataType">
            <summary>Specifies to only return nodes of certain data type. Use Empty for no filtering.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.DALeafBrowseFilter.RequireReadable">
            <summary>
            Determines whether the leaves returned by the filter must be readable.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.DALeafBrowseFilter.RequireWritable">
            <summary>
            Determines whether the leaves returned by the filter must be writable.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DALeafBrowseFilter.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DALeafBrowseFilter.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DALeafBrowseFilter.Equals(OpcLabs.EasyOpc.DataAccess.Browsing.DALeafBrowseFilter)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseFilter">
            <exclude/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseFilter.NamePattern">
            <summary>A wildcard string to filter the returned element names (empty string for no filtering).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseFilter.VendorFilter">
            <summary>A server specific filter string (empty string for no filtering).</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseFilter.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseFilter.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseFilter.Equals(OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseFilter)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.DAAccessPathBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DAAccessPathBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseNode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseNode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DANodeBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.DAPropertyBrowseNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DAPropertyBrowseNode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DAPropertyBrowseNode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Browsing.DAPropertyBrowseNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.IDAAccessPathBrowseNode">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.IDANodeBrowseNode">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Browsing.IDAPropertyBrowseNode">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for classes that facilitate easy work with OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientConfigurationEvents">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration"/> events to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientConfigurationEvents.LogEntry(System.Object,OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
            <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.LogEntry"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAAccessRight"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.StandardName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.AllowRead">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.AllowRead"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.AllowWrite">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.AllowWrite"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.InternalValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.InternalValue"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.NumericalValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.NumericalValue"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DABrowseParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.BrowseFilter">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.BrowseFilter"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.ElementNameFilter">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.ElementNameFilter"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.VendorFilter">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.VendorFilter"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.DataTypeFilter">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.DataTypeFilter"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.AccessRightsFilter">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.AccessRightsFilter"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAGroupParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.Locale">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Locale"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.RequestedUpdateRate">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.RequestedUpdateRate"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.PercentDeadband">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.PercentDeadband"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.ArgumentString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.ArgumentString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.BrowsePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.BrowsePath"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.IsNull">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.IsNull"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.IsRoot">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.IsRoot"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.NodeId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.NodeId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.NodePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.NodePath"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.Match(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.NodeDescriptor.Match(OpcLabs.EasyOpc.NodeDescriptor)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.ItemId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.ItemId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.AccessPath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.AccessPath"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.RequestedDataType">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.RequestedDataType"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.Clone">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.Clone"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.ArgumentString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.ArgumentString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.BrowsePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.BrowsePath"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.IsNull">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.IsNull"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.IsRoot">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.IsRoot"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.NodeId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.NodeId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.NodePath">
            <inheritdoc cref="P:OpcLabs.EasyOpc.NodeDescriptor.NodePath"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.Match(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.NodeDescriptor.Match(OpcLabs.EasyOpc.NodeDescriptor)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.ItemId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.ItemId"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.Clone">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.Clone"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.IsNull">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.IsNull"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.PropertyId">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.PropertyId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.QualifiedName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.QualifiedName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.QualifiedNameString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.QualifiedNameString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.StandardName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.InternalValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.InternalValue"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.IsNull">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.IsNull"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.NumericalValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.NumericalValue"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.GetName(System.String)">
            <summary>Returns a string identifier of the property, for pre-defined properties. An empty string is returned if 
            the property is not known.</summary>
            <param name="serverClsidString">A CLSID of the OPC server for which the property name should be obtained. This is used
            for properties that are server-specific. For standard properties, the method does not use this parameter and
            it can be passed in as a <c>null</c> reference.</param>
            <returns>Returns the property name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.GetPropertyType(System.String)">
            <summary>
            Determines a type of this OPC property.
            </summary>
            <param name="serverClsidString">The CLSID of the OPC server on which the property resides. This is used
            for properties that are server-specific. For standard properties, the method does not use this parameter and
            it can be passed in as a <c>null</c> reference.</param>
            <returns>A type of the OPC property. If the property type cannot be determined, the property is assumed to be of 
            <see cref="T:System.Object"/> type.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAQuality"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.ToString(System.String,System.IFormatProvider)">
            <inheritdoc cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>
            <remarks><para>Due to overload conflict, the actual name of this method becomes ToString_2.</para></remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.ToString(System.String)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IFormattableExtension.ToString(System.IFormattable,System.String)"/>
            <remarks><para>Due to overload conflict, the actual name of this method becomes ToString_3.</para></remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.StandardName">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.CarriesValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.CarriesValue"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.InternalValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.InternalValue"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.IsBad">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.IsBad"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.IsGood">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.IsGood"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.IsUncertain">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.IsUncertain"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.LimitBitField">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.LimitBitField"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.NumericalValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.NumericalValue"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.QualityChoiceBitField">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.QualityChoiceBitField"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.StatusBitField">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAQuality.StatusBitField"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.SetQualityAndSubStatus(OpcLabs.EasyOpc.DataAccess.DAQualityChoice,System.Int16)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.DAQuality.SetQualityAndSubStatus(OpcLabs.EasyOpc.DataAccess.DAQualityChoice,System.Int16)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.DeviceSource.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.DataSource">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAReadParameters.DataSource"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.ValueAge">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAReadParameters.ValueAge"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.ToString(System.String,System.IFormatProvider)">
            <inheritdoc cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>
            <remarks><para>Due to overload conflict, the actual name of this method becomes ToString_2.</para></remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.ToString(System.String)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IFormattableExtension.ToString(System.IFormattable,System.String)"/>
            <remarks><para>Due to overload conflict, the actual name of this method becomes ToString_3.</para></remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.HasValue">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.HasValue"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.Quality">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Quality"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.Timestamp">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Timestamp"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.TimestampLocal">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.TimestampLocal"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.Value">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Value"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.ValueType">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.ValueType"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.DisplayValue">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.DAVtq.DisplayValue"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.SetValue(System.Object)">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Value"/>
            <remarks>Intended for use from Visual Basic 6.0.</remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.CustomReference">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.Widget.CustomReference"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.GetService(System.Type)">
            <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.GetServiceByName(System.String)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IServiceProviderExtension.GetServiceByName(System.IServiceProvider,System.String)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.ValueEquals(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.BeginInit">
            <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.BeginInit"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.EndInit">
            <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.EndInit"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.AdaptableParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.AdaptableParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.EnableNativeClient">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EnableNativeClient"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.EnableNetApiClient">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EnableNetApiClient"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.EnableServiceClient">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EnableServiceClient"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.ServiceProviderEndpointDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ServiceProviderEndpointDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.SharedInstance">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.SharedInstance"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.SharedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.SharedParameters"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientEvents">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> events to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientEvents.EventingFailure(System.Object,OpcLabs.BaseLib.FailureEventArgs)">
            <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.EventingFailure"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientEvents.ItemChanged(System.Object,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> to COM clients.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\ReadItemValue.Main.js" 
                lang="JScript"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\Python\CPython\Console\DocExamples\_EasyDAClient\ReadItemValue.Main.py" 
                lang="Python" title="Python"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.CustomReference">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.Widget.CustomReference"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetService(System.Type)">
            <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetServiceByName(System.String)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IServiceProviderExtension.GetServiceByName(System.IServiceProvider,System.String)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ValueEquals(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.CallbackQueueCapacity">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackQueueCapacity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.CallbackQueueIdleTimeToSleep">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackQueueIdleTimeToSleep"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.QueueCallbacks">
            <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.QueueCallbacks"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.InstanceParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.InstanceParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.Isolated">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Isolated"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.IsolatedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.IsolatedParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.LicenseInfo">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.LicenseInfo"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.PullItemChangedQueueCapacity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.PullItemChangedQueueCapacity"/>
            <example>
            <code 
                source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\PullItemChanged.Main.js" 
                lang="JScript"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\Python\CPython\Console\DocExamples\_EasyDAClient\PullItemChanged.Main.py" 
                lang="Python" title="Python"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.SupportedTechnologies">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SupportedTechnologies"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseAccessPaths(System.Object,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseAccessPaths.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseAccessPathList(System.Object,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseBranches(System.String,System.String,System.String)">
            <summary>Browse for child branches. Specify machine name, and server class.</summary>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular branch found. The keys of the keyed collection are the names of the branches.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseBranches.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseLeaves(System.String,System.String,System.String)">
            <summary>Browse for child leaves. Specify machine name, and server class.</summary>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseLeaves.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseNodes(System.Object,System.Object,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" 
                lang="PowerScript" title="PowerScript"
                region="Example BrowseNodes.Main"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseProperties(System.Object,System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\BrowseProperties.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\BrowseProperties.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseProperties.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseServers(System.String)">
            <summary>
            Browses the specified computer and returns information about OPC (Data Access) servers found.
            </summary>
            <param name="location">Name of the machine. Determines the computer to browse for OPC servers. May be an empty 
            string, in which case the the local computer will be browsed.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.ServerElement"/> values, each containing information 
            about a particular OPC server found on the specified machine. The keys of the keyed collection are the server's 
            CLSIDs.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\BrowseServers.Main.js" 
                lang="JScript"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\BrowseServers.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseServers.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ChangeItemSubscription(System.Int32,System.Int32)">
            <summary>Changes parameters of a subscription. Specify handle, and requested update rate.
            </summary>
            <param name="handle">Item subscription handle as returned by the SubscribeItem method</param>
            <param name="requestedUpdateRate">The new requested update rate.</param>
            <remarks>
            <para>It is more efficient to change multiple subscriptions using 
            <see cref="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ChangeMultipleItemSubscriptions(System.Object)"/> method.</para>
            </remarks>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ChangeItemSubscription.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ChangeItemSubscriptionList(System.Collections.IList)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ChangeMultipleItemSubscriptions(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ChangeMultipleItemSubscriptions.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetMultiplePropertyValues(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.TimeMeasurements.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetPropertyValue(System.String,System.String,System.String,System.Int32)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID.
            </summary>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The numerical value of the Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.TimeMeasurements.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetPropertyValueList(System.Collections.IList)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadItem(System.String,System.String,System.String)">
            <summary>
            Reads a named item using individual parameters specifying its location, and using server's canonical data type.
            </summary>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> object. The object contains the value, timestamp 
            and quality of the OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\ReadItem.Main.js" 
                lang="JScript"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" 
                lang="PowerScript" title="PowerScript"
                region="Example ReadItem.Main"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadItemList(System.Collections.IList)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
            <example>
            <code 
                source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" 
                lang="PowerScript" title="PowerScript"
                region="Example ReadItemList.Main"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadItemValue(System.String,System.String,System.String)">
            <summary>
            Reads a value of named item using individual parameters specifying its location, using server's canonical data type. 
            </summary>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>If successful, the function returns the actual value of OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\ReadItemValue.Main.js" 
                lang="JScript"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" 
                lang="PowerScript" title="PowerScript"
                region="Example ReadItemValue.Main"/>
            <code 
                source="..\..\Native\Examples\Python\CPython\Console\DocExamples\_EasyDAClient\ReadItemValue.Main.py" 
                lang="Python" title="Python"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.CLSID.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadItemValueList(System.Collections.IList)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
            <example>
            <code 
                source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" 
                lang="PowerScript" title="PowerScript"
                region="Example ReadItemValueList.Main"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadMultipleItems(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.ManyRepeat.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Synchronous.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.TestSuccess.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.ThrowOnAccess.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.TimeMeasurements.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadMultipleItemValues(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItemValues.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItemValues.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.SubscribeItem(System.String,System.String,System.String,System.Int32)">
            <summary>Subscribe to OPC item. Specify machine name, server class, item ID, and requested update rate.
            No state object is specified (this overload is suitable for simple scenarios only).</summary>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.SubscribeItemList(System.Collections.IList)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.SubscribeMultipleItems(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.UnsubscribeAllItems">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeAllItems"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\UnsubscribeAllItems.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.UnsubscribeItem(System.Int32)">
            <summary>Unsubscribe from OPC item, specifying its handle.
            </summary>
            <param name="handle">Item subscription handle as returned by the SubscribeItem method</param>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\UnsubscribeItem.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.UnsubscribeItemList(System.Collections.IList)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.UnsubscribeMultipleItems(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})"/>
            <example>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\UnsubscribeMultipleItems.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\UnsubscribeMultipleItems.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteItem(System.String,System.String,System.String,System.Object,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQualities)">
            <summary>Writes separately given value, timestamp and quality into a named item using individual parameters 
            specifying its location, and a specific data type.</summary>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
            <param name="timestamp">The timestamp to be written.</param>
            <param name="quality">The numerical value of the quality to be written.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\WriteItem.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteItem.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteItemList(System.Collections.IList)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteItemValue(System.String,System.String,System.String,System.Object)">
            <summary>Writes a value into a named item using individual parameters specifying its location, and using
            server's canonical data type.</summary>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" 
                lang="PowerScript" title="PowerScript"
                region="Example WriteItemValue.Main"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteItemValueList(System.Collections.IList)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
            <example>
            <code 
                source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" 
                lang="PowerScript" title="PowerScript"
                region="Example WriteItemValueList.Main"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteMultipleItems(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItems.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItems.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteMultipleItemValues(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])"/>
            <example>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.TestSuccess.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.TestSuccess.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.PullItemChanged(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.PullItemChanged(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.Int32)"/>
            <example>
            <code 
                source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\PullItemChanged.Main.js" 
                lang="JScript"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.inc" 
                language="ObjectPascal" lang="Object Pascal" title="Object Pascal"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" 
                lang="PowerScript" title="PowerScript"
                region="Example PullItemChanged.Main"/>
            <code 
                source="..\..\Native\Examples\Python\CPython\Console\DocExamples\_EasyDAClient\PullItemChanged.Main.py" 
                lang="Python" title="Python"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.PullItemChangeList(System.Int32,System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)"/>
            <remarks>
            <para>
            This method uses lists instead of arrays.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.Reset">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Reset"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity">
            <summary>
            Provides point connectivity to OPC Data Access (COM-based) and OPC XML-DA servers.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="daConnectivity">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes an instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity"/> class with Designer support. 
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.BrowsePointService.CreatePointBrowseable(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.Point.IBrowsePointService.CreatePointBrowseable(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.BrowsePointService.IsPointNode(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.Point.IBrowsePointService.IsPointNode(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.BrowsePointService.OpcLabs#BaseLib#Connectivity#Point#IBrowsePointService#NodePathFromPoint(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.Point.IBrowsePointService.NodePathFromPoint(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.BrowsePointService.PointFromNodePath(System.Collections.Generic.IEnumerable{System.Object})">
            <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.Point.IBrowsePointService.PointFromNodePath(System.Collections.Generic.IEnumerable{System.Object})"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.CreatePointService.Types">
            <inheritdoc cref="P:OpcLabs.BaseLib.Composition.IObjectFactoryService.Types"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.CreatePointService.CreateObject(System.Type)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Composition.IObjectFactoryService.CreateObject(System.Type)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.DefaultConfiguration">
            <summary>
            The default configuration that will be used when new instances of <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity"/> are created. 
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.Configuration">
            <summary>
            The configuration data.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ItemReadParametersTemplate">
            <summary>
            Template for OPC item read parameters in newly added bindings.
            </summary>
            <remarks>
            The template is used in design-time to facilitate repetitive use of the same item read parameters.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ItemSubscribeParametersTemplate">
            <summary>
            Template for OPC item subscribe parameters in newly added bindings.
            </summary>
            <remarks>
            The template is used in design-time to facilitate repetitive use of the same item subscribe parameters.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ItemWriteParametersTemplate">
            <summary>
            Template for OPC item write parameters in newly added bindings.
            </summary>
            <remarks>
            The template is used in design-time to facilitate repetitive use of the same item write parameters.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.InstanceParameters">
            <summary>
            Instance parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.IsolatedParameters">
            <summary>
            Isolated parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ValueEquals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.Clone">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.OpcLabs#BaseLib#Configuration#Internal#IConfigurationService#ConfigurationParts">
            <inheritdoc cref="P:OpcLabs.BaseLib.Configuration.Internal.IConfigurationService.ConfigurationParts"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.OpcLabs#BaseLib#Configuration#Internal#IConfigurationService#PartTypes">
            <inheritdoc cref="P:OpcLabs.BaseLib.Configuration.Internal.IConfigurationService.PartTypes"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.RestartNeeded">
            <inheritdoc cref="P:OpcLabs.BaseLib.Configuration.Internal.IConfigurationService.RestartNeeded"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ConfigurationPartsChanged">
            <inheritdoc cref="E:OpcLabs.BaseLib.Configuration.Internal.IConfigurationService.ConfigurationPartsChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.LicenseInfo">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.BeginInit">
            <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.BeginInit"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.EndInit">
            <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.EndInit"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.GetService(System.Type)">
            <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.GetLicensedClient">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.Construct">
            <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.ConnectivityBase.Construct"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ObtainClient">
            <summary>
            Obtains a client object to be used by this connectivity.
            </summary>
            <returns>Returns the <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> according to the current client selector.</returns>
            <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">Thrown when a license was denied.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ReturnClient(OpcLabs.EasyOpc.DataAccess.EasyDAClient)">
            <summary>
            Returns the client object that was used by this connectivity.
            </summary>
            <param name="client">The <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> previously obtained for this connectivity.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ResetItemReadParametersTemplate">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ItemReadParametersTemplate"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ShouldSerializeItemReadParametersTemplate">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ItemReadParametersTemplate"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ResetItemSubscribeParametersTemplate">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ItemSubscribeParametersTemplate"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ShouldSerializeItemSubscribeParametersTemplate">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ItemSubscribeParametersTemplate"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ResetItemWriteParametersTemplate">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ItemWriteParametersTemplate"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ShouldSerializeItemWriteParametersTemplate">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ItemWriteParametersTemplate"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ResetConfiguration">
            <summary>
            Sets <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.Configuration"/> back to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ShouldSerializeConfiguration">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.Configuration"/> is not at its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ResetInstanceParameters">
            <summary>
            Reset the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.InstanceParameters"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ShouldSerializeInstanceParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.InstanceParameters"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ResetIsolatedParameters">
            <summary>
            Reset the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.IsolatedParameters"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.ShouldSerializeIsolatedParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity.IsolatedParameters"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration">
            <summary>
            Configuration data for <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivity"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.DefaultTemplateRequestedUpdateRate">
            <summary>
            The default requested update rate in the subscribe parameters template. Equals to 1000 milliseconds (1 second).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor(OpcLabs.BaseLib.Connectivity.SelectorConfiguration{OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters})">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="selectorConfiguration">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="connectivityConfiguration">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters)">
            <summary>
            Initializes a new instance of the class with the given parameters.
            </summary>
            <param name="sharedParameters">Shared parameters.</param>
            <param name="isolatedParameters">Isolated parameters.</param>
            <param name="instanceParameters">Instance parameters.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.Default">
            <summary>
            Default configuration.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration,OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration,OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemReadParametersTemplate">
            <summary>
            Template for OPC item read parameters in newly added bindings.
            </summary>
            <remarks>
            The template is used in design-time to facilitate repetitive use of the same item read parameters.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemSubscribeParametersTemplate">
            <summary>
            Template for OPC item subscribe parameters in newly added bindings.
            </summary>
            <remarks>
            The template is used in design-time to facilitate repetitive use of the same item subscribe parameters.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemWriteParametersTemplate">
            <summary>
            Template for OPC item write parameters in newly added bindings.
            </summary>
            <remarks>
            The template is used in design-time to facilitate repetitive use of the same item write parameters.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.Clone">
            <inheridoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetItemReadParametersTemplate">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemReadParametersTemplate"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeItemReadParametersTemplate">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemReadParametersTemplate"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetItemSubscribeParametersTemplate">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemSubscribeParametersTemplate"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeItemSubscribeParametersTemplate">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemSubscribeParametersTemplate"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetItemWriteParametersTemplate">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemWriteParametersTemplate"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeItemWriteParametersTemplate">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemWriteParametersTemplate"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetInstanceParameters">
            <summary>
            Reset the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.InstanceParameters"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeInstanceParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.InstanceParameters"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetIsolatedParameters">
            <summary>
            Reset the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.IsolatedParameters"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeIsolatedParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.IsolatedParameters"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetSharedParameters">
            <summary>
            Reset the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.SharedParameters"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeSharedParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.SharedParameters"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointChangedEventArgs">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.NamespaceDoc">
            <summary>
            This namespace provides internal classes for OPC Data Access connectivity. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.Resource1.DAItemPointReadParametersTypeConverter_ConvertTo_DAItemPointReadParameters">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAItemPointReadParameters, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.Resource1.DAItemPointSubscribeParametersTypeConverter_ConvertTo_DAItemPointSubscribeParameters">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAItemPointSubscribeParameters, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.Resource1.DAItemPointTypeConverter_ConvertTo_DAItemPoint">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAItemPoint, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.Resource1.DAItemPointWriteParametersTypeConverter_ConvertTo_DAItemPointWriteParameters">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAItemPointWriteParameters, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.Resource1.DAPropertyPointTypeConverter_ConvertTo_DAPropertyPoint">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAPropertyPoint, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.DAPointReader">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.DAPointSubscriber">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.DAPointWriter">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.NamespaceDoc">
            <summary>
            This namespace provides classes for OPC Data Access connectivity. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Resource1.DAConnectivity_Configuration_NotADAConnectivityConfiguration">
            <summary>
              Looks up a localized string similar to A configuration collection passed to OPC DA connectivity must contain an OPC DA connectivity configuration..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments">
            <summary>
            Arguments common to various operations on OPC-DA item point.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.#ctor">
            <summary>
            Creates a new instance of the object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="itemPointArguments">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.DefaultQuality">
            <summary>
            Default quality.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.DefaultTimestamp">
            <summary>
            Default timestamp. In UTC.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.DefaultTimestampLocal">
            <summary>
            Default timestamp. In local time.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.DefaultVtq">
            <summary>
            Default value-timestamp-quality.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Quality">
            <summary>Gets or sets the quality.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Timestamp">
            <summary>Gets or sets the timestamp. In UTC.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.TimestampLocal">
            <summary>Gets or sets the timestamp. In local time.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Value">
            <summary>Gets or sets the data value.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Vtq">
            <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp and quality).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Assign(OpcLabs.EasyOpc.DataAccess.DAVtq,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>
            Assigns <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> to the arguments.
            </summary>
            <param name="vtq">The value/timestamp/quality to be assigned to these arguments.</param>
            <param name="itemPoint">The item point that is the source of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.AssignInput(System.Object,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>
            Assigns an input to the arguments.
            </summary>
            <param name="input">The input to be assigned to these arguments.</param>
            <param name="itemPoint">The item point that is the source of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.BaseLib.Transfer.ResultArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.BaseLib.Transfer.ResultArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ResetQuality">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Quality"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ShouldSerializeQuality">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Quality"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ResetTimestamp">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Timestamp"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ShouldSerializeTimestamp">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Timestamp"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ResetTimestampLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.TimestampLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ShouldSerializeTimestampLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.TimestampLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ResetVtq">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Vtq"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ShouldSerializeVtq">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Vtq"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments">
            <summary>
            Arguments used when reading OPC-DA item points.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.#ctor">
            <summary>
            Creates a new instance of the object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="itemPointReadArguments">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Quality">
            <summary>Gets or sets the quality.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.StatusInfo">
            <summary>
            Status information.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Timestamp">
            <summary>Gets or sets the timestamp. In UTC.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.TimestampLocal">
            <summary>Gets or sets the timestamp. In local time.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Value">
            <summary>Gets or sets the data value.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Vtq">
            <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp and quality).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Assign(OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>
            Assigns <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> to the arguments.
            </summary>
            <param name="vtqResult">The VTQ result to be assigned to these arguments.</param>
            <param name="itemPoint">The item point that is the source of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Assign(OpcLabs.BaseLib.OperationModel.ValueResult,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>
            Assigns <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> to the arguments.
            </summary>
            <param name="valueResult">The value result to be assigned to these arguments.</param>
            <param name="itemPoint">The item point that is the source of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ResetQuality">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Quality"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ShouldSerializeQuality">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Quality"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ResetTimestamp">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Timestamp"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ShouldSerializeTimestamp">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Timestamp"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ResetTimestampLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.TimestampLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ShouldSerializeTimestampLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.TimestampLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ResetVtq">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Vtq"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ShouldSerializeVtq">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Vtq"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments">
            <summary>
            Arguments used when subscribing to OPC-DA item points.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.#ctor">
            <summary>
            Creates a new instance of the object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="itemPointSubscribeArguments">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Quality">
            <summary>Gets or sets the quality.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.StatusInfo">
            <summary>
            Status information.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Timestamp">
            <summary>Gets or sets the timestamp. In UTC.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.TimestampLocal">
            <summary>Gets or sets the timestamp. In local time.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Value">
            <summary>Gets or sets the data value.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Vtq">
            <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp and quality).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Assign(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>
            Assigns <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/> to the arguments.
            </summary>
            <param name="easyDAItemChangedEventArgs">The item changed event arguments to be assigned to these arguments.</param>
            <param name="itemPoint">The item point.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ResetQuality">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Quality"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ShouldSerializeQuality">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Quality"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ResetTimestamp">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Timestamp"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ShouldSerializeTimestamp">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Timestamp"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ResetTimestampLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.TimestampLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ShouldSerializeTimestampLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.TimestampLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ResetVtq">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Vtq"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ShouldSerializeVtq">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Vtq"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments">
            <summary>
            Arguments used when writing OPC-DA item points.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.#ctor">
            <summary>
            Creates a new instance of the object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="itemPointWriteArguments">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Quality">
            <summary>Gets or sets the quality.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Timestamp">
            <summary>Gets or sets the timestamp. In UTC.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.TimestampLocal">
            <summary>Gets or sets the timestamp. In local time.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Value">
            <summary>Gets or sets the data value.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Vtq">
            <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp and quality).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Retrieve(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint,System.Object)">
            <summary>
            Retrieves <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/> from the arguments.
            </summary>
            <param name="itemArguments">The write arguments base to be retrieved from these arguments.</param>
            <param name="itemPoint">The item point.</param>
            <param name="input">The input retrieved.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ResetQuality">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Quality"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ShouldSerializeQuality">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Quality"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ResetTimestamp">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Timestamp"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ShouldSerializeTimestamp">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Timestamp"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ResetTimestampLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.TimestampLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ShouldSerializeTimestampLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.TimestampLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ResetVtq">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Vtq"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ShouldSerializeVtq">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Vtq"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments">
            <summary>
            Arguments used when reading (or subscribing to) OPC-DA property points.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.#ctor">
            <summary>
            Creates a new instance of the object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="propertyPointReadArguments">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Value">
            <summary>
            Gets a generic Object value that is a successful result of the operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Assign(OpcLabs.BaseLib.OperationModel.ValueResult,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
            <summary>
            Assigns <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> to the arguments.
            </summary>
            <param name="valueResult">The value result to be assigned to these arguments.</param>
            <param name="propertyPoint">The property point that is the source of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.AssignInput(System.Object,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
            <summary>
            Assigns an input to the arguments.
            </summary>
            <param name="input">The input to be assigned to these arguments.</param>
            <param name="propertyPoint">The property point that is the source of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters">
            <summary>
            Parameters for reading OPC-DA item points.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.DefaultAsString">
            <summary>
            Default <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters"/>, expressed as string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.DefaultValueOnly">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.ValueOnly"/> property. Equals to <c>false</c>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor">
            <summary>
            Creates a new instance of the object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters)">
            <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters"/>.
            </summary>
            <param name="parameters">The parameters to use.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/>.
            </summary>
            <param name="readParameters">The read parameters to use.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DAReadParameters,System.Boolean)">
            <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/>, and "value only" indicator.
            </summary>
            <param name="readParameters">The read parameters to use.</param>
            <param name="valueOnly">Determines whether only the value part will be read; error if the value is not available.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.CacheSource">
            <summary>
            Item point read parameters that specify the cache data source.
            </summary>
            <remarks>
            OPC reads will be fulfilled from the cache in the OPC server.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.Default">
            <summary>
            Default item point read parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.DeviceSource">
            <summary>
            Item point read parameters that specify the device data source.
            </summary>
            <remarks>
            OPC reads will be fulfilled from the device by the OPC server.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.ValueOnly">
            <summary>
            Determines whether only the value part will be read; error if the value is not available.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters">
            <summary>
            Parameters for subscribing to OPC-DA item points.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.DefaultAsString">
            <summary>
            Default <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters"/>, expressed as string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.DefaultRequestedUpdateRate">
            <summary>
            Default requested update rate. Equals to 1 second.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Default">
            <summary>
            Default item point subscribe parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Fast">
            <summary>
            Fast item point subscribe parameters.
            </summary>
            <remarks>
            The requested update rate is 200 milliseconds.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Inactive">
            <summary>
            Inactive item point subscribe parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Slow">
            <summary>
            Slow item point subscribe parameters.
            </summary>
            <remarks>
            The requested update rate is 5 seconds.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.VeryFast">
            <summary>
            Very fast item point subscribe parameters.
            </summary>
            <remarks>
            The requested update rate is 50 milliseconds.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.VerySlow">
            <summary>
            Very slow item point subscribe parameters.
            </summary>
            <remarks>
            The requested update rate is 20 seconds.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.#ctor">
            <summary>
            Creates a new instance of the object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters)">
            <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters"/>.
            </summary>
            <param name="parameters">The parameters to use.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
            <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.DAGroupParameters"/>.
            </summary>
            <param name="groupParameters">The group parameters to use.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.RequestedUpdateRate">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.RequestedUpdateRate"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.GetRequestedUpdateRateDefault">
            <inheritdoc/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters">
            <summary>
            Parameters for writing OPC-DA item points.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.DefaultAsString">
            <summary>
            Default <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters"/>, expressed as string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.DefaultValueOnly">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ValueOnly"/> property. Equals to <c>true</c>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.#ctor">
            <summary>
            Creates a new instance of the object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters)">
            <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters"/>.
            </summary>
            <param name="parameters">The parameters to use.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.Default">
            <summary>
            Default item point write parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ValueOnly">
            <summary>
            Determines whether only the value part will be written.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.Clone">
            <inheritdoc/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.PropertyChanged">
            <summary>
            Handler for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ReadStringList(System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint">
            <summary>
            A connectivity point that represents an OPC Data Access (OPC-DA) item.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.#ctor">
            <summary>
            Initializes a new instance of the class, with default data.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>
            Initializes a new instance of the class, with given server and item descriptors.
            </summary>
            <param name="serverDescriptor">The point's server descriptor.</param>
            <param name="itemDescriptor">The point's item descriptor.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>Initializes a new instance of the class with a copy of another instance.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.DefaultItemDescriptor">
            <summary>
            Default item descriptor.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.op_Explicit(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)~OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments">
            <summary>
            Converts item point to corresponding item arguments.
            </summary>
            <param name="itemPoint">The attribute point to be converted.</param>
            <returns>The item arguments that correspond to the item point. <b>null</b> if the item point
            passed in was <b>null</b>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ToDAItemArguments(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>
            Converts item point to corresponding item arguments.
            </summary>
            <param name="itemPoint">The attribute point to be converted.</param>
            <returns>The item arguments that correspond to the item point. <b>null</b> if the item point
            passed in was <b>null</b>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ItemDescriptor">
            <summary>Gets or sets the OPC item descriptor.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ToString(System.String,System.IFormatProvider)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ReadStringList(System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ResetItemDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ItemDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ShouldSerializeItemDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ItemDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint">
            <summary>
            Base class for OPC-DA connectivity points.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="daPoint">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.#ctor(OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>
            Initializes a new instance of the class, with given server descriptor.
            </summary>
            <param name="serverDescriptor">The point's server descriptor.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.DefaultServerDescriptor">
            <summary>
            Default server descriptor.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ServerDescriptor">
            <summary>Gets or sets the OPC server descriptor that is an argument to the operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ToString(System.String)">
            <summary>
            Converts the value of the current object to its equivalent string representation using the specified format.
            </summary>
            <param name="format">A standard or custom format string (see Remarks).</param>
            <returns>A string representation of value of the current object as specified by <paramref name="format"/>.</returns>
            <remarks>
            <para>
            The <paramref name="format"/> parameter should contain either a standard format specifier or a custom format 
            pattern that defines the format of the returned string. If <paramref name="format"/> is <c>null</c> or an empty 
            string, the general format specifier, 'G', is used.</para>
            <para>
            This method uses formatting information derived from the current culture.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ToString(System.String,System.IFormatProvider)">
            <inheritdoc/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.PropertyChanged">
            <summary>
            Handler for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ReadStringList(System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ResetServerDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ServerDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ShouldSerializeServerDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ServerDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint">
            <summary>
            A connectivity point that represents an OPC Data Access (OPC-DA) property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.#ctor">
            <summary>
            Initializes a new instance of the class, with default data.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>
            Initializes a new instance of the class, with given server, node and property descriptors.
            </summary>
            <param name="serverDescriptor">The point's server descriptor.</param>
            <param name="nodeDescriptor">The point's node descriptor.</param>
            <param name="propertyDescriptor">The point's property descriptor.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
            <summary>Initializes a new instance of the class with a copy of another instance.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.DefaultNodeDescriptor">
            <summary>
            Default node descriptor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.DefaultPropertyDescriptor">
            <summary>
            Default property descriptor.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.NodeDescriptor">
            <summary>Gets or sets the OPC node descriptor.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.PropertyDescriptor">
            <summary>Gets or sets the OPC property descriptor.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ToString(System.String,System.IFormatProvider)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ReadStringList(System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ResetNodeDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.NodeDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ShouldSerializeNodeDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.NodeDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ResetPropertyDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.PropertyDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ShouldSerializePropertyDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.PropertyDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord">
            <summary>
            Contains values of well-known OPC Properties for an OPC item.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.#ctor">
            <summary>
            Initializes a new instance of the class, with all values at their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.#ctor(OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord)">
            <summary>
            Initializes a new instance of the class, with all values copied from another instance.
            </summary>
            <param name="itemPropertyRecord">The item property record whose elements are copied to the new item property record.
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.PropertyIds">
            <summary>
            A property set defining which property Ids are contained in this structure.
            </summary>
            <remarks>
            <para>
            You can use this property set e.g. when obtaining a dictionary of OPC property values.
            </para>
            <para>
            This is currently equal to <see cref="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.OpcFoundationSet"/> property set.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.op_Equality(OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord,OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="itemPropertyRecord1">First object to be compared.</param>
            <param name="itemPropertyRecord2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.op_Inequality(OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord,OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="conditionElement1">First object to be compared.</param>
            <param name="conditionElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.AccessRights">
            <summary>
            Gets or sets Item Access Rights.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.AlarmAreaList">
            <summary>
            Gets or sets Alarm Area List.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.AlarmQuickHelp">
            <summary>
            Gets or sets Alarm Quick Help.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.CloseLabel">
            <summary>
            Gets or sets Contact Close Label.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.ChangeRateLimit">
            <summary>
            Gets or sets Rate of Change Limit.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.ConditionLogic">
            <summary>
            Gets or sets Condition Logic.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.ConditionStatus">
            <summary>
            Gets or sets Condition Status.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.DataType">
            <summary>
            Gets or sets Item Canonical DataType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.Deadband">
            <summary>
            Gets or sets Deadband.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.Description">
            <summary>
            Gets or sets Item Description.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.DeviationLimit">
            <summary>
            Gets or sets Deviation Limit.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.EUInfo">
            <summary>
            Gets or sets Item EUInfo.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.EUType">
            <summary>
            Gets or sets Item EU Type.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.EUUnits">
            <summary>
            Gets or sets EU Units.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.HighEU">
            <summary>
            Gets or sets High EU.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.HighHighLimit">
            <summary>
            Gets or sets HiHi Limit.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.HighIR">
            <summary>
            Gets or sets High Instrument Range.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.HighLimit">
            <summary>
            Gets or sets Hi Limit.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.LimitExceeded">
            <summary>
            Gets or sets Limit Exceeded.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.LowEU">
            <summary>
            Gets or sets Low EU.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.LowIR">
            <summary>
            Gets or sets Low Instrument Range.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.LowLimit">
            <summary>
            Gets or sets Lo Limit.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.LowLowLimit">
            <summary>
            Gets or sets LoLo Limit.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.OpenLabel">
            <summary>
            Gets or sets Contact Open Label.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.PrimaryAlarmArea">
            <summary>
            Gets or sets Primary Alarm Area.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.Quality">
            <summary>
            Gets or sets Item Quality.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.ScanRate">
            <summary>
            Gets or sets Server Scan Rate.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.SoundFile">
            <summary>
            Gets or sets Sound File.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.Timestamp">
            <summary>
            Gets or sets Item Timestamp.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.TimeZone">
            <summary>
            Gets or sets Item Timezone.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.Value">
            <summary>
            Gets or sets Item Value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.CanHaveNullValue(OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>
            Determines whether the given property can have a <c>null</c> value.
            </summary>
            <param name="propertyId">The ID of the property to be tested.</param>
            <returns>Returns <c>true</c> if the property can have a <c>null</c> value; returns <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.GetProperty(OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>
            Obtains a property value from this structure for an OPC property specified by its Id.
            </summary>
            <param name="propertyId">The Id of OPC property to be retrieved.</param>
            <returns>The value of OPC property.</returns>
            <remarks>
            Throws an exception if the structure does not contain a value for a specified OPC property.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.HasProperty(OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>
            Determines whether a specified OPC property is contained in this structure.
            </summary>
            <param name="propertyId">The Id of OPC property to be queried.</param>
            <returns>True if the structure contains the OPC property specified, otherwise false.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.PutProperty(OpcLabs.EasyOpc.DataAccess.DAPropertyId,System.Object)">
            <summary>
            Modified a property value in this structure, for an OPC property specified by its Id.
            </summary>
            <param name="propertyId">The Id of OPC property to be modified.</param>
            <param name="value">The new value of OPC property.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.TryGetProperty(OpcLabs.EasyOpc.DataAccess.DAPropertyId,System.Object@)">
            <summary>
            Attempts to obtain a property value from this structure for an OPC property specified by its Id.
            </summary>
            <param name="propertyId">The Id of OPC property to be retrieved.</param>
            <param name="value">The value of OPC property.</param>
            <returns>True if the structure contains the OPC property specified, otherwise false.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord.Equals(OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet">
            <summary>
            Contains a set of OPC Property Ids.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.#ctor">
            <summary>
            Initializes a new instance of the class. The set will not contain any properties.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.DAPropertyId})">
            <summary>
            Initializes a new instance of the class, copying in OPC property IDs from another collection.
            </summary>
            <param name="collection">The collection whose elements are copied to the new set.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.AlarmAndEventsSet">
            <summary>
            Properties Related to Alarm and Condition Values.
            </summary>
            <remarks>
            <para>Contains following property Ids:
            <ul>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ConditionStatus"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.AlarmQuickHelp"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.AlarmAreaList"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.PrimaryAlarmArea"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ConditionLogic"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LimitExceeded"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Deadband"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighHighLimit"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighLimit"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowLimit"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowLowLimit"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ChangeRateLimit"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DeviationLimit"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.SoundFile"/>  </li>
            </ul>
            </para>
            <para>
            See the OPC Alarm and Events specification for additional information./// </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.BasicSet">
            <summary>
            Set of basic properties defined by the OPC Foundation. Includes dynamic (Value/Timestamp/Quality) properties.
            </summary>
            <remarks>
            <para>
            This is a union of <see cref="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.BasicSetNoVtq"/> and <see cref="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.VtqSet"/> property sets.
            </para>
            <para>
            ID Set 1:
            <br/>
            "ID Set 1 - OPC Specific Properties - This includes information directly related to the OPC Server for the system."
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.BasicSetNoVtq">
            <summary>
            Set of basic properties defined by the OPC Foundation, excluding the dynamic (Value/Timestamp/Quality) properties.
            </summary>
            <remarks>
            <para>Contains following property Ids:
            <ul>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DataType"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.AccessRights"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ScanRate"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.EUType"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.EUInfo"/>  </li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.ExtensionSet">
            <summary>
            Recommended properties related to the Item Value.
            </summary>
            <remarks>
            <para>Contains following property Ids:
            <ul>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.EUUnits"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Description"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighEU"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowEU"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighIR"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowIR"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.CloseLabel"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.OpenLabel"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.TimeZone"/>  </li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.OpcFoundationSet">
            <summary>
            Basic and Recommended properties, as defined by OPC Foundation.
            </summary>
            <remarks>
            <para>
            This is a union of <see cref="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.BasicSet"/> and <see cref="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.RecommendedSet"/> property sets.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.RecommendedSet">
            <summary>
            Properties recommended by OPC Foundation (related to Item Value, and also to Alarm and Condition Values).
            </summary>
            <remarks>
            <para>
            This is a union of <see cref="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.ExtensionSet"/> and <see cref="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.AlarmAndEventsSet"/> property sets.
            </para>
            <para>
            ID Set 2:
            <br/>
            "Recommended Properties - This is additional information which is commonly associated with ITEMs. This includes 
            additional ranges of values that are reserved for use by other future OPC specifications. For information about the 
            newest field ID assignments, consult the other OPC Foundation specifications."
            <br/>
            "... properties associated with an item which seem to fit the descriptions [are] recommended [to] use these specific 
            descriptions and ID codes to expose those properties ... ."
            <br/>
            "A server can provide any subset of these values (or none of them)."
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.VtqSet">
            <summary>
            Dynamic (Value/Timestamp/Quality) properties.
            </summary>
            <remarks>
            <para>Contains following property Ids:
            <ul>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Value"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Quality"/>  </li>
            <li><see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Timestamp"/>  </li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.op_Inequality(OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet,OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet)">
            <summary>
            Determines whether the specified property sets contain different elements.
            </summary>
            <param name="first">First property set to be compared.</param>
            <param name="second">Second property set to be compared.</param>
            <returns>True if the property sets are different, otherwise false.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.op_Addition(OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet,OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet)">
            <summary>
            Produces the set union of two property sets.
            </summary>
            <param name="first">First property set.</param>
            <param name="second">Second property set.</param>
            <returns>A property set that contains elements from both input property sets, excluding duplicates.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.op_Equality(OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet,OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet)">
            <summary>
            Determines whether the specified property sets contain the same elements.
            </summary>
            <param name="first">First property set to be compared.</param>
            <param name="second">Second property set to be compared.</param>
            <returns>True if the property sets are the same, otherwise false.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.Add(OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet,OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet)">
            <summary>
            Produces the set union of two property sets.
            </summary>
            <param name="first">First property set.</param>
            <param name="second">Second property set.</param>
            <returns>A property set that contains elements from both input property sets, excluding duplicates.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.Equals(OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet,OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet)">
            <summary>
            Determines whether the specified property sets contain the same elements.
            </summary>
            <param name="first">First property set to be compared.</param>
            <param name="second">Second property set to be compared.</param>
            <returns>True if the property sets are the same, otherwise false.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.Equals(System.Object)">
            <summary>
            Determines whether the specified property set contains the same elements as the current property set.
            </summary>
            <param name="obj">Property set to be compared.</param>
            <returns>True if the property sets are the same, otherwise false.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdSet.GetHashCode">
            <summary>
            Serves as a hash function for a OPC property sets.
            </summary>
            <returns>A hash code for the current property set.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary">
            <summary>
            A dictionary whose key is a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId"/> and value is a <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.#ctor">
            <summary>
            Initializes a new instance of the class that is empty.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.#ctor(System.Collections.Generic.IDictionary{OpcLabs.EasyOpc.DataAccess.DAPropertyId,OpcLabs.BaseLib.OperationModel.ValueResult})">
            <summary>
            Initializes a new instance of the class that contains elements copied from the specified dictionary.
            </summary>
            <param name="dictionary">The dictionary whose elements are copied to the new dictionary.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The initial number of elements that the dictionary can contain.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.op_Equality(OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary,OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="propertyValueDictionary1">First object to be compared.</param>
            <param name="propertyValueDictionary2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.op_Inequality(OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary,OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="propertyValueDictionary1">First object to be compared.</param>
            <param name="propertyValueDictionary2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.GetSchema">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.ReadXml(System.Xml.XmlReader)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyIdExtension">
            <summary>
            Contains extension methods to the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId"/> class.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2">
            <summary>
            Contains extension methods to the <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient"/> interface.
            </summary>
            <remarks>
            Note that other extension classes for the <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient"/> exist as well.
            Specifically, the basic set of extension methods is in the <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension"/> class.
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetDataTypePropertyValue.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetDataTypePropertyValue.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItem``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <overloads>
            <summary>
            Reads a typed named item from an OPC server. A typed value, quality and timestamp are returned. 
            </summary>
            <remarks>
            <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
            specific data type can be requested.</para>
            <para>The ReadItem method only waits for the first update from the server (or until the timeout elapses); it does 
            not wait until the quality becomes "uncertain" or "good". </para>
            </remarks>
            </overloads>
            
            <summary>Reads a typed named item using descriptor objects for the OPC server and OPC-DA item.</summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The OPC item involved in the operation.</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> object. The object contains the value, 
            timestamp and quality of the OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItem``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>Reads a typed named item using descriptor objects for the OPC server and OPC-DA item, and specifying read
            parameters such as the data source or value age.</summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The OPC item involved in the operation.</param>
            <param name="readParameters">Read parameters, such as the data source or value age.</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> object. The object contains the value, 
            timestamp and quality of the OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItem``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>Reads a typed named item using individual parameters specifying its location, and a specific data type.
            </summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> object. The object contains the value, 
            timestamp and quality of the OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItem``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>Reads a typed named item using individual parameters specifying its location, and value age.</summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">The age of value you would like to obtain (in milliseconds).</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> object. The object contains the value, 
            timestamp and quality of the OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>
            <para>
            The data source (a device, OPC server's cache, or a value from OPC client component memory cache) is dynamically 
            determined based on the <paramref name="valueAge"/> argument.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValue``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
             <overloads>
             <summary>
             Reads a typed named item from an OPC server. Only the item's typed value is returned (quality and timestamp are not 
             returned).
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             <para>Use this method if you are only interested in the actual typed value of the OPC item. Use ReadItem
             method if you also need the quality or timestamp. The ReadItemValue method makes it very easy 
             to obtain the actual typed data value with just one function call. </para> 
             <para>The ReadItemValue method waits until the quality becomes "good", or the timeout elapses. </para>
             </remarks>
             </overloads>
            
             <summary>
             Reads a value of typed named item using descriptor objects for the OPC server and OPC-DA item. 
             </summary>
             <typeparam name="TValue">The type of item value.</typeparam>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="nodeDescriptor">The OPC item involved in the operation.</param>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
             <returns>If successful, the function returns the actual, typed value of OPC item requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValue``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of typed named item using descriptor objects for the OPC server and OPC-DA item, and specifying read
            parameters such as the data source or value age. 
            </summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The OPC item involved in the operation.</param>
            <param name="readParameters">Read parameters, such as the data source or value age.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <returns>If successful, the function returns the actual, typed value of OPC item requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValue``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of typed named item using individual parameters specifying its location. 
            </summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <returns>If successful, the function returns the actual, typed value of OPC item requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValue``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of typed named item using individual parameters specifying its location, a specific data type, and 
            value age. 
            </summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">The age of value you would like to obtain (in milliseconds).</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <returns>If successful, the function returns the actual, typed value of OPC item requested.</returns>
            <remarks>
            <para>
            The data source (a device, OPC server's cache, or a value from OPC client component memory cache) is dynamically 
            determined based on the <parameref name="valueAge"/> argument.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItem``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{``0})">
             <overloads>
             <summary>
             Writes into a typed named item in an OPC server. A typed value, quality and timestamp are written. 
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             </remarks>
             </overloads>
            
             <summary>Writes a typed <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> into a (typed) named item using descriptor objects for the OPC 
             server and OPC-DA item.
             </summary>
             <typeparam name="TValue">The type of item value.</typeparam>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="nodeDescriptor">The OPC item involved in the operation.</param>
             <param name="vtq">The object containing the typed value, timestamp and quality to be written.</param>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItem``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{``0})">
            <summary>Writes a typed <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> into a named item using individual parameters specifying its 
            location.</summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="vtq">The object containing the typed value, timestamp and quality to be written.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItem``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,``0,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Writes a separately given typed value, timestamp and quality into a named item using individual parameters 
            specifying its location.</summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The typed value to be written.</param>
            <param name="timestamp">The timestamp to be written.</param>
            <param name="quality">The quality to be written.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValue``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,``0)">
             <overloads>
             <summary>
             Writes a typed value into a (typed) named item in an OPC server. Only the item's typed value is written (quality 
             and timestamp are not written).
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             </remarks>
             </overloads>
            
             <summary>Writes a typed value into a named item using descriptor objects for the OPC server and OPC-DA item.
             </summary>
             <typeparam name="TValue">The type of item value.</typeparam>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="nodeDescriptor">The OPC item involved in the operation.</param>
             <param name="value">The typed value to be written.</param>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValue``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,``0)">
            <summary>Writes a typed value into a named item using individual parameters specifying its location.</summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The typed value to be written.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Boolean"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Boolean"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Boolean"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Boolean"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Byte"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Byte"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Byte"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Byte"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Char"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Char"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Char"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Char"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.DateTime"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.DateTime"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.DateTime"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.DateTime"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Decimal"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Decimal"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Decimal"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Decimal"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Double"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Double"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Double"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Double"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int16"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int16"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int16"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int16"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int32"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int32"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int32"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int32"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int64"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int64"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int64"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Int64"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.IntPtr"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.IntPtr"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.IntPtr"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.IntPtr"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Single"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Single"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Single"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.Single"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.String"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.String"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor. You can also pass
            a value age in place of read parameters</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.String"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueArrayOfString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to an array of <see cref="T:System.String"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Boolean"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Boolean"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Boolean"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Boolean"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Byte"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Byte"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Byte"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Byte"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Char"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Char"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Char"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Char"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.DateTime"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.DateTime"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.DateTime"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.DateTime"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Decimal"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Decimal"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Decimal"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Decimal"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Double"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Double"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Double"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Double"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int16"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int16"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int16"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int16"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int32"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int32"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int32"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int32"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int64"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int64"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int64"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Int64"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.IntPtr"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.IntPtr"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.IntPtr"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.IntPtr"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Single"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Single"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Single"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.Single"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.String"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.String"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.String"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.ReadItemValueString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Reads a value of named OPC item, and converts it to <see cref="T:System.String"/>.
            The value is requested from the OPC server using a corresponding data type.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a value of the OPC item, converted to a type indicated by the method name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Boolean[])">
            <summary>
            Writes an array of <see cref="T:System.Boolean"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Boolean[])">
            <summary>
            Writes an array of <see cref="T:System.Boolean"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Byte[])">
            <summary>
            Writes an array of <see cref="T:System.Byte"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Byte[])">
            <summary>
            Writes an array of <see cref="T:System.Byte"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Char[])">
            <summary>
            Writes an array of <see cref="T:System.Char"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Char[])">
            <summary>
            Writes an array of <see cref="T:System.Char"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Decimal[])">
            <summary>
            Writes an array of <see cref="T:System.Decimal"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Decimal[])">
            <summary>
            Writes an array of <see cref="T:System.Decimal"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Double[])">
            <summary>
            Writes an array of <see cref="T:System.Double"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Double[])">
            <summary>
            Writes an array of <see cref="T:System.Double"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Int16[])">
            <summary>
            Writes an array of <see cref="T:System.Int16"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int16[])">
            <summary>
            Writes an array of <see cref="T:System.Int16"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Int32[])">
            <summary>
            Writes an array of <see cref="T:System.Int32"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32[])">
            <summary>
            Writes an array of <see cref="T:System.Int32"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Int64[])">
            <summary>
            Writes an array of <see cref="T:System.Int64"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int64[])">
            <summary>
            Writes an array of <see cref="T:System.Int64"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Single[])">
            <summary>
            Writes an array of <see cref="T:System.Single"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Single[])">
            <summary>
            Writes an array of <see cref="T:System.Single"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.IntPtr[])">
            <summary>
            Writes an array of <see cref="T:System.IntPtr"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.IntPtr[])">
            <summary>
            Writes an array of <see cref="T:System.IntPtr"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.String[])">
            <summary>
            Writes an array of <see cref="T:System.String"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueArrayOfString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.String[])">
            <summary>
            Writes an array of <see cref="T:System.String"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.IntPtr)">
            <summary>
            Writes a <see cref="T:System.IntPtr"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.IntPtr)">
            <summary>
            Writes a <see cref="T:System.IntPtr"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WriteItemValueString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value into a named OPC item.
            A corresponding data type is passed to the OPC server.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>        
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetItemPropertyRecord(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <overloads>
            <summary>
            Obtains a <see cref="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord"/> structure filled with OPC property values for a given OPC item.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            </overloads>
            
            <summary>
            Obtains a structure filled with OPC property values of all well-known OPC properties for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a structure containing the OPC property values requested.</returns>
            <remarks>
            <p>
            This method allows you to obtain a structure filled in with property values for a given OPC item. It can 
            retrieve all well-known properties at once, or you can pass in a set of property Ids that you are interested in. You
            can then simply use the properties in the resulting <see cref="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord"/> structure, without further 
            looking up the values in any way.</p>
            <p>
            Using implicit conversions, you can pass an item ID in place of node descriptor.</p>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetItemPropertyRecord(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.DAPropertyId},System.Boolean)">
            <summary>
            Obtains a structure filled with OPC property values for a given OPC item. You can specify the property Ids.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyIds">Specifies which OPC properties should be obtained and returned.</param>
            <param name="allowFailures">If false, any failures cause the method to throw an exception.
            If true, failures are ignored, and the affected OPC properties will contain default values.</param>
            <returns>Returns a structure containing the OPC property values requested.</returns>
            <remarks>
            <p>
            This method allows you to obtain a structure filled in with property values for a given OPC item. It can 
            retrieve all well-known properties at once, or you can pass in a set of property Ids that you are interested in. You
            can then simply use the properties in the resulting <see cref="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord"/> structure, without further 
            looking up the values in any way.</p>
            <p>
            Using implicit conversions, you can pass an item ID in place of node descriptor.</p>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetItemPropertyRecord(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains a structure filled with OPC property values of all well-known OPC properties for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a structure containing the OPC property values requested.</returns>
            <remarks>This method allows you to obtain a structure filled in with property values for a given OPC item. It can 
            retrieve all well-known properties at once, or you can pass in a set of property Ids that you are interested in. You
            can then simply use the properties in the resulting <see cref="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord"/> structure, without further 
            looking up the values in any way.</remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetItemPropertyRecord.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetItemPropertyRecord(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.DAPropertyId},System.Boolean)">
            <summary>
            Obtains a structure filled with OPC property values for a given OPC item. You can specify the property Ids.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="propertyIds">Specifies which OPC properties should be obtained and returned.</param>
            <param name="allowFailures">If false, any failures cause the method to throw an exception.
            If true, failures are ignored, and the affected OPC properties will contain default values.</param>
            <returns>Returns a structure containing the OPC property values requested.</returns>
            <remarks>This method allows you to obtain a structure filled in with property values for a given OPC item. It can 
            retrieve all well-known properties at once, or you can pass in a set of property Ids that you are interested in. You
            can then simply use the properties in the resulting <see cref="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAItemPropertyRecord"/> structure, without further 
            looking up the values in any way.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDictionary(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <overloads>
            <summary>
            Obtains a <see cref="T:OpcLabs.EasyOpc.DataAccess.Extensions.DAPropertyValueDictionary"/> filled with OPC property values for a given OPC item.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.vb"
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            </overloads>
            
            <summary>
            Obtains a dictionary filled with all well-known OPC property values for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a dictionary of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects keyed by <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId"/>.</returns>
            <remarks>
            <p>
            This method allows you to obtain a dictionary of property values for a given OPC item, where a key to the dictionary
            is the property Id. You can pass in a set of property Ids that you are interested in, or have the method obtain all 
            well-known OPC properties. You can then easily extract the value of any property by looking it up in a dictionary 
            (as opposed to having to numerically index into an array, as with the base 
            <see cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId[])"/> 
            method).</p>
            <p>
            Using implicit conversions, you can pass an item ID in place of node descriptor.</p>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDictionary(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.DAPropertyId})">
            <summary>
            Obtains a dictionary filled with known OPC property values for a given OPC item. You can specify the property Ids.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyIds">Specifies which OPC properties should be obtained and returned.</param>
            <returns>Returns a dictionary of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects keyed by <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId"/>.</returns>
            <remarks>
            <p>
            This method allows you to obtain a dictionary of property values for a given OPC item, where a key to the dictionary
            is the property Id. You can pass in a set of property Ids that you are interested in, or have the method obtain all 
            well-known OPC properties. You can then easily extract the value of any property by looking it up in a dictionary 
            (as opposed to having to numerically index into an array, as with the base 
            <see cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId[])"/> 
            method).</p>
            <p>
            Using implicit conversions, you can pass an item ID in place of node descriptor.</p>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDictionary(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains a dictionary filled with all well-known OPC property values for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a dictionary of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects keyed by <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId"/>.</returns>
            <remarks>
            This method allows you to obtain a dictionary of property values for a given OPC item, where a key to the dictionary
            is the property Id. You can pass in a set of property Ids that you are interested in, or have the method obtain all 
            well-known OPC properties. You can then easily extract the value of any property by looking it up in a dictionary 
            (as opposed to having to numerically index into an array, as with the base 
            <see cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId[])"/> 
            method).
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDictionary(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.DAPropertyId})">
            <summary>
            Obtains a dictionary filled with known OPC property values for a given OPC item. You can specify the property Ids.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="propertyIds">Specifies which OPC properties should be obtained and returned.</param>
            <returns>Returns a dictionary of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects keyed by <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId"/>.</returns>
            <remarks>
            This method allows you to obtain a dictionary of property values for a given OPC item, where a key to the dictionary
            is the property Id. You can pass in a set of property Ids that you are interested in, or have the method obtain all 
            well-known OPC properties. You can then easily extract the value of any property by looking it up in a dictionary 
            (as opposed to having to numerically index into an array, as with the base 
            <see cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId[])"/> 
            method).
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetPropertyValueDictionary.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValue``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of typed OPC property, using descriptor objects for the OPC server, node, and the property.
            </summary>
            <typeparam name="TValue">The type of property value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The descriptor of the OPC property involved in the operation.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValue``1(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of typed OPC property, using individual parameters specifying the OPC server, and OPC Item ID.
            </summary>
            <typeparam name="TValue">The type of property value.</typeparam>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.Byte"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.Byte"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.Char"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.Char"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.DateTime"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.DateTime"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.Decimal"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.Decimal"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.Double"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.Double"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.Int16"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.Int16"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.Int32"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.Int32"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.Int64"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.Int64"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.IntPtr"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.IntPtr"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.Single"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.Single"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to <see cref="T:System.String"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to <see cref="T:System.String"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.Boolean"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfBoolean(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.Boolean"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.Byte"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfByte(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.Byte"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.Char"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfChar(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.Char"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.DateTime"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfDateTime(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.DateTime"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.Decimal"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfDecimal(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.Decimal"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.Double"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfDouble(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.Double"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.Int16"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfInt16(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.Int16"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.Int32"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfInt32(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.Int32"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.Int64"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfInt64(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.Int64"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.IntPtr"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfIntPtr(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.IntPtr"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.Single"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfSingle(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.Single"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Gets a value of OPC property, using descriptor object for the OPC server, and an OPC Item ID,
            and converts it to an array of <see cref="T:System.String"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The property descriptor of the OPC property being obtained.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPropertyValueArrayOfString(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID,
            and converts it to an array of <see cref="T:System.String"/>.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested, converted to a type 
            indicated by the method name.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetAccessRightsPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Item Access Rights OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetAccessRightsPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Item Access Rights OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetAlarmAreaListPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Alarm Area List OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetAlarmAreaListPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Alarm Area List OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetAlarmQuickHelpPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Alarm Quick Help OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetAlarmQuickHelpPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Alarm Quick Help OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetCloseLabelPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Contact Close Label OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetCloseLabelPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Contact Close Label OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetChangeRateLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Rate of Change Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetChangeRateLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Rate of Change Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetConditionLogicPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Condition Logic OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetConditionLogicPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Condition Logic OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetConditionStatusPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Condition Status OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetConditionStatusPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Condition Status OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetDataTypePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Item Canonical DataType OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetDataTypePropertyValue.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetDataTypePropertyValue.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetDataTypePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Item Canonical DataType OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetDataTypePropertyValue.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientExtension\GetDataTypePropertyValue.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetDeadbandPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Deadband OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetDeadbandPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Deadband OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetDescriptionPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Item Description OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetDescriptionPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Item Description OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetDeviationLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Deviation Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetDeviationLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Deviation Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetEUInfoPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Item EUInfo OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetEUInfoPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Item EUInfo OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetEUTypePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Item EU Type OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetEUTypePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Item EU Type OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetEUUnitsPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of EU Units OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetEUUnitsPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of EU Units OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetHighEUPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of High EU OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetHighEUPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of High EU OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetHighHighLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of HiHi Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetHighHighLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of HiHi Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetHighIRPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of High Instrument Range OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetHighIRPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of High Instrument Range OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetHighLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Hi Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetHighLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Hi Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLimitExceededPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Limit Exceeded OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLimitExceededPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Limit Exceeded OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLowEUPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Low EU OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLowEUPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Low EU OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLowIRPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Low Instrument Range OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLowIRPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Low Instrument Range OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLowLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Lo Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLowLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Lo Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLowLowLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of LoLo Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetLowLowLimitPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of LoLo Limit OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetOpenLabelPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Contact Open Label OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetOpenLabelPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Contact Open Label OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPrimaryAlarmAreaPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Primary Alarm Area OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetPrimaryAlarmAreaPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Primary Alarm Area OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetQualityPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Item Quality OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetQualityPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Item Quality OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetScanRatePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Server Scan Rate OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetScanRatePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Server Scan Rate OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetSoundFilePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Sound File OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetSoundFilePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Sound File OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetTimestampPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Item Timestamp OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetTimestampPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Item Timestamp OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetTimeZonePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Item Timezone OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetTimeZonePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Item Timezone OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetValuePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Obtains value of Item Value OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>
            <p>Do not confuse this method with <see>
                                              <cref>EasyDAClient.GetPropertyValue(OpcLabs.EasyOpc.ServerDescriptor,string,OpcLabs.EasyOpc.DataAccess.DAPropertyId)</cref>
                                            </see> .
            </p>
            <p>
            Using implicit conversions, you can pass an item ID in place of node descriptor.</p>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.GetValuePropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Obtains value of Item Value OPC property for a given OPC item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a value of this OPC property for a specified OPC item, converted to a proper type.</returns>
            <remarks>
            Do not confuse this method with 
            <see cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)"/>.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Extensions.NamespaceDoc">
            <summary>
            This namespace contains extension classes that facilitate easy work with OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAUtilities">
            <summary>
            Contains static members that facilitate work with types related to OPC Data Access.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.IsValidDataType(OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>
            Determines whether a given <see cref="T:OpcLabs.BaseLib.ComInterop.VarType"/> is a valid data type in OPC Data Access.
            </summary>
            <param name="dataType">The data type to be tested.</param>
            <returns><c>true</c> if <paramref name="dataType"/> is a valid data type in OPC Data Access;
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.IsValidPercentDeadband(System.Single)">
            <summary>
            Determines whether a given percent deadband value is valid in OPC Data Access. 
            </summary>
            <param name="percentDeadband">The percent deadband value to be tested.</param>
            <returns><c>true</c> if <paramref name="percentDeadband"/> is a valid percent deadband value; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.IsValidTime(System.DateTime)">
            <summary>
            Determines whether a given time value is valid in OPC Data Access. 
            </summary>
            <param name="time">The time to be tested.</param>
            <returns><c>true</c> if <paramref name="time"/> is a valid time; 
            <c>false</c> otherwise.</returns>
            <remarks>Time must be in UTC, or it must be either <see cref="F:System.DateTime.MinValue"/> or <see cref="F:System.DateTime.MaxValue"/>.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.IsValidTimeLocal(System.DateTime)">
            <summary>
            Determines whether a given local time value is valid in OPC Data Access. 
            </summary>
            <param name="time">The local time to be tested.</param>
            <returns><c>true</c> if <paramref name="time"/> is a valid time; 
            <c>false</c> otherwise.</returns>
            <remarks>Time must be local, or it must be either <see cref="F:System.DateTime.MinValue"/> or <see cref="F:System.DateTime.MaxValue"/>.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.IsValidTimeWeak(System.DateTime)">
            <summary>
            Determines whether a given time value is weakly valid in OPC Data Access. 
            </summary>
            <param name="time">The time to be tested.</param>
            <returns><c>true</c> if <paramref name="time"/> is a valid time; 
            <c>false</c> otherwise.</returns>
            <remarks>Time must be in UTC, or it must be of unspecified kind.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.IsValidTimeWeakLocal(System.DateTime)">
            <summary>
            Determines whether a given local time value is weakly valid in OPC Data Access. 
            </summary>
            <param name="time">The local time to be tested.</param>
            <returns><c>true</c> if <paramref name="time"/> is a valid time; 
            <c>false</c> otherwise.</returns>
            <remarks>Time must be local, or it must be of unspecified kind.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.IsValidUpdateRate(System.Int32)">
            <summary>
            Determines whether a given update rate value is valid in OPC Data Access. 
            </summary>
            <param name="updateRate">The update rate value to be tested.</param>
            <returns><c>true</c> if <paramref name="updateRate"/> is a valid update rate; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.IsValidValueAge(System.Int32)">
            <summary>
            Determines whether a given value age is valid in OPC Data Access. 
            </summary>
            <param name="valueAge">The value age to be tested.</param>
            <returns><c>true</c> if <paramref name="valueAge"/> is a valid value age; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.ValidateDataType(OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.IsValidLocale(System.Int64)">
            <summary>
            Determines whether a given locale is valid in OPC Data Access. 
            </summary>
            <param name="locale">The locale to be tested.</param>
            <returns><c>true</c> if <paramref name="locale"/> is a valid locale; 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.ValidateLocale(System.Int64,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.ValidatePercentDeadband(System.Single,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.ValidateTime(System.DateTime,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.ValidateTimeLocal(System.DateTime,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.ValidateTimeWeak(System.DateTime,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.ValidateTimeWeakLocal(System.DateTime,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.ValidateUpdateRate(System.Int32,System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAUtilities.ValidateValueAge(System.Int32,System.String)">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAVtq">
            <summary>Holds data value, timestamp and quality, abbreviated sometimes as VTQ. This is a common combination in OPC,
            e.g. returned when an OPC item is read.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.#ctor(System.Object,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality)">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class, with the specified data value, timestamp and quality.</summary>
             <param name="value">The actual data value.</param>
             <param name="timestamp">The timestamp of the data.</param>
             <param name="quality">The quality of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.#ctor(System.Object,System.DateTime)">
            <summary>Initializes a new instance of the class, with the specified data value and timestamp.</summary>
            <param name="value">The actual data value.</param>
            <param name="timestamp">The timestamp of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.#ctor(System.Object,OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Initializes a new instance of the class, with the specified data value and quality.</summary>
            <param name="value">The actual data value.</param>
            <param name="quality">The quality of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.#ctor(System.Object)">
            <summary>Initializes a new instance of the class, with the specified data value.</summary>
            <param name="value">The actual data value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.#ctor(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> object.</summary>
            <param name="vtq">The object containing the value, timestamp and quality to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.DefaultQuality">
            <summary>
            Default quality.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.DefaultTimestamp">
            <summary>
            Default timestamp. In UTC.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.DefaultTimestampLocal">
            <summary>
            Default timestamp. In local time.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Null">
            <summary>
            A null value-timestamp-quality.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.op_Equality(OpcLabs.EasyOpc.DataAccess.DAVtq,OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.op_Inequality(OpcLabs.EasyOpc.DataAccess.DAVtq,OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.HasValue">
            <summary>Returns whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Value"/> contains valid data.</summary>
            <value>Returns True when the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Quality"/> is not Bad.</value>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Quality">
            <summary>Gets or sets the quality.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Timestamp">
            <summary>Gets or sets the timestamp. In UTC.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.TimestampLocal">
            <summary>Gets or sets the timestamp. In local time.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Value">
            <summary>Gets or sets the data value.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.ValueType">
            <summary>
            Returns the type of the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Value"/>, or <c>null</c> if there is no value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.DisplayValue">
            <summary>Formats the data value for display.</summary>
            <returns>Returns the string formatted with information about data value. Returns empty string when there is no value
            define in this object (i.e. when the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.HasValue"/> returns false), usually when the quality is bad. 
            </returns>
            <remarks>The current data value can be a null reference.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.SetValue(System.Object)">
            <summary>
            Sets the data value.
            </summary>
            <remarks>
            <para>
            Intended for certain COM callers. You can simply use the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Value"/> property setter in .NET instead.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ToString">
            <summary>Returns a <see cref="T:System.String"/> that represents the current <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/>.</summary>
            <remarks>
            <para>When the quality is bad, the returned string contains just the timestamp and quality. Otherwise, the
            returned string contains also the data value, and its type.</para>
            </remarks>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ToString(System.String)">
            <summary>
            Converts the value of the current object to its equivalent string representation using the specified format.
            </summary>
            <param name="format">A standard or custom format string (see Remarks).</param>
            <returns>A string representation of value of the current object as specified by <paramref name="format"/>.</returns>
            <remarks>
            <para>
            The <paramref name="format"/> parameter should contain either a standard format specifier or a custom format 
            pattern that defines the format of the returned string. If <paramref name="format"/> is <c>null</c> or an empty 
            string, the general format specifier, 'G', is used.</para>
            <para>
            This method uses formatting information derived from the current culture.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ToString(System.String,System.IFormatProvider)">
            <inheritdoc cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAVtq.OpcLabs#EasyOpc#DataAccess#ComTypes#_DAVtq#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAVtq.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.CheckValue(System.Object)">
            <summary>
            Infrastructure.
            </summary>
            <param name="value">Value to be checked.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.Equals(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ResetQuality">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Quality"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ShouldSerializeQuality">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Quality"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ResetTimestamp">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Timestamp"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ShouldSerializeTimestamp">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.Timestamp"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ResetTimestampLocal">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.TimestampLocal"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAVtq.ShouldSerializeTimestampLocal">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.DAVtq.TimestampLocal"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.NamespaceDoc">
            <summary>
            This namespace contains internal classes that facilitate easy work with OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.DAAccessRightConverter_ConvertTo_NotADAAccessRight">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a DAAccessRight, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.DAItemDescriptorConverter_ConvertTo_NotADAItemDescriptor">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a DAItemDescriptor, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.DANodeDescriptorConverter_ConvertTo_NotADANodeDescriptor">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a DANodeDescriptor, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.DAPropertyDescriptorConverter_ConvertTo_NotADAPropertyDescriptor">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a DAPropertyDescriptor, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.DAPropertyIdConverter_ConvertTo_NotADAPropertyId">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a DAPropertyId, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.DAQualityTypeConverter_ConvertTo_NotADAQuality">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a DAQuality, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.EasyDAClientCompositor_Add_HandleRangeOverlapFormat">
            <summary>
              Looks up a localized string similar to The new OPC Data Access client handle range ({0}) overlaps with an existing client in the composite..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.Resource1.ResilientEasyDAClient_CreateOpcException_ProcedureCallException">
            <summary>
              Looks up a localized string similar to A procedure call error has occurred in the resilient client for OPC Data Access..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.FailingEasyDAClient">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.TechnologyLicensingEasyDAClient">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.TechnologyLicensingEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.TechnologyUnlicensedEasyDAClient">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.CompositeEasyDAClient">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.CompositeEasyDAClient.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient">
            <tocexclude/>
            <summary>
            Delegates all IEasyDAClient calls to the inner client.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient.DelegationRecord.ToString">
            <remarks>
            Among others, provides better result when the delegated state is output as part of XXXXEventArgs. The 
            doubling or even further nesting of "[]" is intentional in this case, to provide a minimal visual 
            distinction of the fact the a delegation is taking place.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient.#ctor">
            <overloads>
            <summary>Initializes a new instance of the class.</summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <param name="innerClient">Inner client to which the functionality is delegated.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient.DelegateArguments(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler)">
            <summary>
            Delegates operation arguments, <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient.DelegateArgumentsArray(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[],OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler)">
            <summary>
            Delegates array of operation arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient.UndelegateEventArgs(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Undelegates event arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient.Delegate(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])">
            <summary>
            Delegates array of operation arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient.Undelegate(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Undelegates event arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DelegatingEasyDAClient.InnerClientCallback(System.Object,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Undelegates the event arguments and invokes the inner callback.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.DequeuingEasyDAClient">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.DequeuingEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientStaticData.DefaultServiceProviderEndpointDescriptor">
            <summary>
            Default provider endpoint descriptor.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.EnqueuingEasyDAClient">
            <exclude/>  
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Implementation.EnqueuingEasyDAClient.DefaultPullMultipleItemChangesQueueCapacity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Implementation.EnqueuingEasyDAClient.PullItemChangedQueueCapacity"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.EnqueuingEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient">
            <tocexclude/>
            <summary>
            Forwards all IEasyDAClient calls to the inner client.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.#ctor">
            <overloads>
            <summary>Initializes a new instance of the class.</summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <param name="innerClient">Inner client to which the functionality is forwarded.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.InnerClient">
            <summary>
            Inner client to which the functionality is forwarded.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.Dispose">
            <inheridoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.HandleRanges">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.HandleRanges"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.SupportedTechnologies">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SupportedTechnologies"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.IsKnownItemSubscriptionHandle(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.IsKnownItemSubscriptionHandle(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.UnsubscribeAllItems">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeAllItems"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.ItemChanged">
            <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.EventingFailure">
            <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.EventingFailure"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.Delegate(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])">
            <summary>
            Delegates array of operation arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type serviceType, or <c>null</c> if there is no service object of type <paramref name="serviceType"/>.
            </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.InvokeEventingFailure(OpcLabs.BaseLib.FailureEventArgs)">
            <summary>
            Invokes the <see cref="E:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.EventingFailure"/> event handler.
            </summary>
            <param name="failureEventArgs">The event arguments.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.InvokeItemChanged(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Invokes the <see cref="E:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.ItemChanged"/> event handler.
            </summary>
            <param name="itemChangedEventArgs">The event arguments.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.Undelegate(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Undelegates event arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.Undelegate(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs[])">
            <summary>
            Undelegates an array of event arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ForwardingEasyDAClient.InnerClientOnItemChanged(System.Object,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Undelegates the event arguments and invokes the base <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> event.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.HandleRemappingEasyDAClient">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.HandleRemappingEasyDAClient.#ctor(OpcLabs.BaseLib.Identification.CookieManager,OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <overloads>
            <summary>Initializes a new instance of the class.</summary>
            </overloads>
            
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.LicensingEasyDAClient.LicenseInfo">
            <inheritdoc cref="P:OpcLabs.BaseLib.ILicenseInfoProvider.LicenseInfo"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <summary>Initializes a new instance of the class.</summary>
            <param name="innerClient">Inner client to which the functionality is delegated.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.PSBoxingEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.ResilientEasyDAClient">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.ResilientEasyDAClient.#ctor(OpcLabs.BaseLib.Identification.CookieManager,OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <overloads>
            <summary>Initializes a new instance of the class.</summary>
            </overloads>
            
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.TechnologyRestrictingEasyDAClient">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.TechnologyRestrictingEasyDAClient.#ctor(OpcLabs.EasyOpc.OpcTechnologies,OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.TransmittingEasyDAClient">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.TransmittingEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.TechnologyUnsupportedEasyDAClient">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientCompositor">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientCompositor.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientCompositor.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type serviceType, or <c>null</c> if there is no service object of type <paramref name="serviceType"/>.
            </returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientConsumptionCompositor">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientDequeuingCompositor">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientEnqueuingCompositor">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientResiliencyCompositor">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientSettingsCompositor">
            <exclude/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientSettingsCompositor.InstanceParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientSettings.InstanceParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientSettingsCompositor.IsolatedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientSettings.IsolatedParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Implementation.EasyDAClientSettingsCompositor.Isolated">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientSettings.Isolated"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Internal.EasyDAClientStaticDataBase">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Internal.NamespaceDoc">
            <summary>
            This namespace contains internal classes that facilitate easy work with OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Internal.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Internal.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Internal.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Internal.Resource1.SimulatedEasyDAClient_BrowseNodes_NoParentBrowsePath">
            <summary>
              Looks up a localized string similar to The simulated OPC-DA client does not support browsing nodes without a given parent browse path..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Internal.Resource1.SimulatedEasyDAClient_BrowseNodes_ParentNotABranch">
            <summary>
              Looks up a localized string similar to When browsing nodes in a simulated OPC-DA client, the parent node is not a branch..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Internal.Resource1.SimulatedEasyDAClient_GetComponent_ClsidNotFound">
            <summary>
              Looks up a localized string similar to The simulated OPC-DA client cannot find a component with given CLSID..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Internal.EasyDAClientPool">
            <exclude/>
            <summary>
            Provides <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> objects according to specified criteria.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Internal.EasyDAClientPool.Instance">
            <summary>
            A single instance of the provider.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.EasyDAClientPool.CreateObject(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,OpcLabs.BaseLib.Licensing.LicensingContext)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Abstract.ParameterizedObjectPool`3.CreateObject(`1,`2)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient">
            <exclude/>  
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient"/> object.</summary>
            <param name="client">The simulated OPC-DA client object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient.ValueEquals(OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient.ShouldSerializeHandleRanges">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Internal.SimulatedEasyDAClient.HandleRanges"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for classes that are used by the OPC Data Access engine. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.AllowAsynchronousMethod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.AllowAsynchronousMethod"/>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Synchronous.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.AllowSynchronousMethod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.AllowSynchronousMethod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.DesiredMethod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.DesiredMethod"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.HttpClientConnectionLimit">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.HttpClientConnectionLimit"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.UseAdvancedPolledRefresh">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.UseAdvancedPolledRefresh"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.SubscriptionPolledRefreshTimeoutFactor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.SubscriptionPolledRefreshTimeoutFactor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.SubscriptionPolledRefreshTimeoutIncrease">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.SubscriptionPolledRefreshTimeoutIncrease"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.Reset">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.Reset"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.ItemDetach">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.ItemDetach"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.ServerDetach">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.ServerDetach"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.TopicRead">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.TopicRead"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.TopicWrite">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.TopicWrite"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.AllowAsynchronousMethod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.AllowAsynchronousMethod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.AllowSynchronousMethod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.AllowSynchronousMethod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.DesiredMethod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.DesiredMethod"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.ClientReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ClientReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.ExecutionContext">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ExecutionContext"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.ServerFailedReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerFailedReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.ServerShutdownReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerShutdownReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.ServerStatusCheckPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerStatusCheckPeriod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.TurnOffActivationSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffActivationSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.TurnOffCallSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffCallSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.UseCustomSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.UseCustomSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.TopicProcessingIntervalTimeout">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.TopicProcessingIntervalTimeout"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.TopicProcessingTotalTimeout">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.TopicProcessingTotalTimeout"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.PercentDeadbandBucketsPerDecade">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.PercentDeadbandBucketsPerDecade"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.UpdateRateBucketsPerDecade">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.UpdateRateBucketsPerDecade"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.ElementNameCaseSensitive">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.ElementNameCaseSensitive"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.RequestQueueSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.RequestQueueSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.LinkCallbackQueueSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.LinkCallbackQueueSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.ResponseQueueSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.ResponseQueueSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.BrowseNodesChunk">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.BrowseNodesChunk"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.TopicRetrialPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.TopicRetrialPeriod"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.BrowseAccessPaths">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseAccessPaths"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.BrowseNodes">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseNodes"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.BrowseProperties">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseProperties"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.BrowseServers">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseServers"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.GetProperty">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.GetProperty"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.ReadItem">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.ReadItem"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.WriteItem">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.WriteItem"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.ReadAutomatic">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.ReadAutomatic"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.WriteAutomatic">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.WriteAutomatic"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters"/> to COM Engines.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.AutoAdjustmentPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.AutoAdjustmentPeriod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.GarbageCollectionPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.GarbageCollectionPeriod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.WorkerSleepDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.WorkerSleepDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.DefaultEventQueueSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DefaultEventQueueSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.ClientLruSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.ClientLruSize"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.MaxClientAge">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.MaxClientAge"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.MaxTopicAge">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.MaxTopicAge"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.TopicLruSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.TopicLruSize"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.HoldPeriods">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.HoldPeriods"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.Mode">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Mode"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.Timeouts">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Timeouts"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.UpdateRates">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.UpdateRates"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.Reset">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Reset"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.ClientParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ClientParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.EngineParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.EngineParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.MachineParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.MachineParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.TopicParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.TopicParameters"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.Reset">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.Reset"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.TopicRetrialDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.TopicRetrialDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.UpdateRateNegativeHysteresis">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.UpdateRateNegativeHysteresis"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.UpdateRatePositiveHysteresis">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.UpdateRatePositiveHysteresis"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.AbandonIntervalMinimum">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.AbandonIntervalMinimum"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.AbandonRateMultiplier">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.AbandonRateMultiplier"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.SpeedupWeight">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SpeedupWeight"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.SlowdownWeight">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SlowdownWeight"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.FastestAutomaticUpdateRate">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.FastestAutomaticUpdateRate"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.SlowestAutomaticUpdateRate">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SlowestAutomaticUpdateRate"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.FastestManualUpdateRate">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.FastestManualUpdateRate"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.SlowestManualUpdateRate">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SlowestManualUpdateRate"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.LowestManualPercentDeadband">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.LowestManualPercentDeadband"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.HighestManualPercentDeadband">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.HighestManualPercentDeadband"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.ExactManualGroupMatch">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.ExactManualGroupMatch"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode">
            <summary>
            Specifies allowed and desired methods of accessing the data in the OPC server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.DefaultAllowAsynchronousMethod">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.AllowAsynchronousMethod"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.DefaultAllowSynchronousMethod">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.AllowSynchronousMethod"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.DefaultDesiredMethod">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.DesiredMethod"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode)">
            <param name="clientMode">Client mode to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.Default">
            <summary>
            Default client mode.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode,OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientMode1">First object to be compared.</param>
            <param name="clientMode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode,OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientMode1">First object to be compared.</param>
            <param name="clientMode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.AllowAsynchronousMethod">
            <summary>When True, asynchronous OPC reads and writes will be allowed.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.AllowSynchronousMethod">
            <summary>When True, synchronous OPC reads and writes will be allowed.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.DesiredMethod">
            <summary>Determines whether synchronous or asynchronous OPC reads and writes will be preferred.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_DAClientMode#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._DAClientMode.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.Equals(OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode)">
            <summary>
            Infrastructure.
            </summary>
            <param name="clientMode">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.DAReadWriteMethod">
            <summary>Determines the method (synchronous or asynchronous) used for OPC reads and writes.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.DAReadWriteMethod.Synchronous">
            <summary>Use synchronous OPC read or write.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.DAReadWriteMethod.Asynchronous">
            <summary>Use asynchronous OPC read or write.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods">
            <summary>
            Contains optimization parameters that reduce the load on the OPC server by keeping the connections open should they
            be soon needed again.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.DefaultItemDetach">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.ItemDetach"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.DefaultServerDetach">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.ServerDetach"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.DefaultTopicRead">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.TopicRead"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.DefaultTopicWrite">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.TopicWrite"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods)">
            <param name="holdPeriods">Hold periods to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.Default">
            <summary>
            Default client hold periods.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientHoldPeriods1">First object to be compared.</param>
            <param name="clientHoldPeriods2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientHoldPeriods1">First object to be compared.</param>
            <param name="clientHoldPeriods2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.ItemDetach">
            <summary>After an Item object is detached (UnsubscribeItem after SubscribeItem), connection to the OPC item 
            will be maintained at least for the time period specified here.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.ServerDetach">
            <summary>After a server object is detached, connection to the OPC server 
            will be maintained at least for the time period specified here.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.TopicRead">
            <summary>After an item read call, connection to an OPC item will be maintained at least for the time period 
            specified here.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.TopicWrite">
            <summary>After an item write call, connection to an OPC item will be maintained at least for the time period 
            specified here.</summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClientHoldPeriods\TopicWrite.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClientHoldPeriods\TopicWrite.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDAClientHoldPeriods#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientHoldPeriods.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode">
            <summary>
            Specifies common parameters such as allowed and desired methods of accessing the data in the OPC server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.DAClientMode)">
            <param name="clientMode">Client mode to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode)">
            <param name="clientMode">Client mode to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.Default">
            <summary>
            Default client mode.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientMode1">First object to be compared.</param>
            <param name="clientMode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientMode1">First object to be compared.</param>
            <param name="clientMode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode"/> is equal to the current object.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDAClientMode#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientMode.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts">
            <summary>
            Specifies the maximum amount of time the various operations are allowed to take.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.DefaultBrowseAccessPaths">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseAccessPaths"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.DefaultBrowseNodes">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseNodes"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.DefaultBrowseProperties">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseProperties"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.DefaultBrowseServers">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseServers"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.DefaultGetProperty">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.GetProperty"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.DefaultReadItem">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.ReadItem"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.DefaultWriteItem">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.WriteItem"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts)">
            <param name="timeouts">Timeouts to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.Default">
            <summary>
            Default client timeouts.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientTimeouts1">First object to be compared.</param>
            <param name="clientTimeouts2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientTimeouts1">First object to be compared.</param>
            <param name="clientTimeouts2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseAccessPaths">
            <summary>
            Browse access paths timeout. Number of milliseconds. 
            For BrowseAccessPaths method of the 
            <c>EasyDAClient</c>, this value determines the maximum amount of time this method waits for the signal that 
            the operation was completed (either with success or failure).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseNodes">
            <summary>
            Browse nodes timeout. Number of milliseconds. 
            For BrowseBranches, BrowseLeaves and BrowseNodes methods of the
            <c>EasyDAClient</c> object, this value determines the maximum amount of time these methods wait for the 
            signal from the OPC server that the operation was completed (either with success or failure).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseProperties">
            <summary>
            Browse properties timeout. Number of milliseconds. 
            For BrowseProperties method of the 
            <c>EasyDAClient</c>, this value determines the maximum amount of time this method waits for the signal that 
            the operation was completed (either with success or failure).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.BrowseServers">
            <summary>
            Browse servers timeout. Number of milliseconds. 
            For BrowseServers method of the 
            <c>EasyDAClient</c>, this value determines the maximum amount of time this method waits for the signal that 
            the operation was completed (either with success or failure).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.GetProperty">
            <summary>
            Get property timeout. Number of milliseconds. 
            For GetPropertyValue and GetMultiplePropertyValues methods of the
            <c>EasyDAClient</c> object, this value determines the maximum amount of time these methods wait for the 
            signal from the OPC server that the operation was completed (either with success or failure).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.ReadItem">
            <summary>
            Read item timeout. Number of milliseconds. 
            For ReadItem, ReadItemValue, ReadMultipleItems and ReadMultipleItemValues methods of the
            <c>EasyDAClient</c> object, this value determines the maximum amount of time these methods wait for the 
            signal that the read operation was completed (either with success or failure). For ReadItemValue 
            and ReadMultipleItemValues methods, the received data must also be marked with Good OPC quality.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.WriteItem">
            <summary>
            Write item timeout. Number of milliseconds. 
            For WriteItem, WriteItemValue, WriteMultipleItems and WriteMultipleItemValues methods of the
            <c>EasyDAClient</c> object, this value determines the maximum amount of time these methods wait for the 
            signal from the OPC server that the write operation was completed (either with success or failure).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDAClientTimeouts#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientTimeouts.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates">
            <summary>
            Contains "hints" for OPC update rates used when other explicit information is missing.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.DefaultReadAutomatic">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.ReadAutomatic"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.DefaultWriteAutomatic">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.WriteAutomatic"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates)">
            <param name="updateRates">Update rates to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.Default">
            <summary>
            Default client update rates.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientUpdateRates1">First object to be compared.</param>
            <param name="clientUpdateRates2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientUpdateRates1">First object to be compared.</param>
            <param name="clientUpdateRates2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.ReadAutomatic">
            <summary>After an item read call, the initial update rate of the item is set to this value (for new items), or the 
            current update rate is lowered to this value (for existing items). In milliseconds.</summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.WriteAutomatic">
            <summary>After an item write call, the initial update rate of the item is set to this value (for new items), or the 
            current update rate is lowered to this value (for existing items). In milliseconds.</summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDAClientUpdateRates#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientUpdateRates.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.NamespaceDoc">
            <summary>
            This namespace contains classes that are used by the OPC Data Access engine. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters">
            <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.DefaultHttpClientConnectionLimit">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.HttpClientConnectionLimit"/> property. Equals to 20.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.DefaultSubscriptionPolledRefreshTimeoutFactor">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.SubscriptionPolledRefreshTimeoutFactor"/> property. Equals to 1.1.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.DefaultSubscriptionPolledRefreshTimeoutIncrease">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.SubscriptionPolledRefreshTimeoutIncrease"/> property. Equals to 10000.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.DefaultUseAdvancedPolledRefresh">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.UseAdvancedPolledRefresh"/> property. Equals to <c>true</c>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
            <param name="adaptableParameters">Isolator to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.Default">
            <summary>
            Default adaptable parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.HttpClientConnectionLimit">
            <summary>
            The maximum number of HTTP client connections allowed.
            </summary>
            <remarks>
            <para>
            Only applies to OPC XML-DA connections.</para>
            <para>
            Currently, this limit is fully functional on .NET Framework. It is only functional on .NET Core when
            authentication is not used.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.UseAdvancedPolledRefresh">
            <summary>
            Determines whether the advanced polled refresh approach will be used with OPC XML-DA.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.SubscriptionPolledRefreshTimeoutFactor">
            <summary>
            For computing the subscription polled refresh timeout (in OPC XML-DA), determines the multiplier used to increase the cycle time.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.SubscriptionPolledRefreshTimeoutIncrease">
            <summary>
            For computing the subscription polled refresh timeout (in OPC XML-DA), determines the absolute additional delay added. In milliseconds.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.Reset">
            <summary>
            Sets the object properties back to their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDAAdaptableParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAAdaptableParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters">
            <summary>
            Contains parameters that influence operations that target a specific OPC server a whole.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultBrowseNodesChunk">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.BrowseNodesChunk"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultElementNameCaseSensitive">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.ElementNameCaseSensitive"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultLinkCallbackQueueSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.LinkCallbackQueueSize"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultPercentDeadbandBucketsPerDecade">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.PercentDeadbandBucketsPerDecade"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultRequestQueueSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.RequestQueueSize"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultResponseQueueSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.ResponseQueueSize"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultTopicProcessingIntervalTimeout">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.TopicProcessingIntervalTimeout"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultTopicProcessingTotalTimeout">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.TopicProcessingTotalTimeout"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultTopicRetrialPeriod">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.TopicRetrialPeriod"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DefaultUpdateRateBucketsPerDecade">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.UpdateRateBucketsPerDecade"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.#ctor(OpcLabs.EasyOpc.Engine.EasyClientParameters)">
            <param name="clientParameters">Client parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters)">
            <param name="clientParameters">Client parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.Default">
            <summary>
            Default client parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientParameters1">First object to be compared.</param>
            <param name="clientParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientParameters1">First object to be compared.</param>
            <param name="clientParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.TopicProcessingIntervalTimeout">
            <summary>
            Topic processing interval timeout. Number of milliseconds.
            When the incoming requests related to OPC items pause for this interval, the requests collected so far are applied
            to the OPC server.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            <para>Normally, incoming requests are logically grouped by the component, and processed according to how the
            application has structured them. This interval will therefore only have some effect under heavy system load.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.TopicProcessingTotalTimeout">
            <summary>
            Topic processing total timeout. Number of milliseconds.
            When the incoming requests related to OPC items are being collected for this period, the requests collected so far 
            are applied to the OPC server.
            </summary>
            <remarks>
            <para>The value must be greater than zero.</para>
            <para>Normally, incoming requests are logically grouped by the component, and processed according to how the
            application has structured them. This interval will therefore only have some effect under heavy system load.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.PercentDeadbandBucketsPerDecade">
            <summary>
            Number of buckets per decade of percent deadband.
            </summary>
            <value>
            The percent deadband values (from 0.0 to 100.0) are divided into "buckets", using a logarithmic scale. This number
            specifies how many buckets will exist between values 10.0 - 100.0, and also 1.0 - 10.0, 0.1 - 1.0, and so forth.
            Percent deadbands requested will be adjusted so that the nearest bucket that fully satisfies the percent deadband 
            requirement is used (i.e. the system may choose a percent deadband lower than requested, but not higher).
            </value>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.UpdateRateBucketsPerDecade">
            <summary>
            Number of buckets per decade of update rate.
            </summary>
            <value>
            The update rate values are divided into "buckets", using a logarithmic scale. This number specifies how many buckets 
            will exist between values 100.0 - 1000.0, 10.0 - 100.0, 1.0 - 10.0, 0.1 - 1.0, and so forth, in both directions.
            Update rates requested will be adjusted so that the nearest bucket that fully satisfies the update rate 
            requirement is used (i.e. the system may choose an update rate that is faster than requested, but not slower).
            </value>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.ElementNameCaseSensitive">
            <summary>
            Indicates whether the element names in the OPC server are case sensitive. This value is used when the element name
            is matched with element name filter pattern for OPC-DA 1.0 and 2.0 servers that generally cannot do the element name
            filtering internally.
            </summary>
            <remarks>
            This parameter applies only during browsing, and only in somewhat special case. For browsing, there is a 
            parameter where you can specify a name filter (a string like "AB*", for examples), and the browse operation 
            would return only the items that match the filter. In newest OPC DA specification (3.0), this filter is passed 
            to the OPC server and interpreted there, giving us no choice to influence how it is interpreted. If your target 
            server happens to be OPC DA 1.0 or 2.0, then there is (generally) no name filtering guaranteed to be 
            implemented on the server side. We therefore get all the items from the server, ad then post-filter them on the 
            client side. In that case, you can influence the case-sensitivity of that filtering using this parameter. Note 
            that other aspects of browsing (such as case-sensitivity of the parent node ID passed to the browse operation) 
            are not influenced by this parameter.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.RequestQueueSize">
            <summary>
            Size of the internal queue that holds requests related to operations on OPC items.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.LinkCallbackQueueSize">
            <summary>
            Size of the internal queue that holds callback data from the OPC server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.ResponseQueueSize">
            <summary>
            Size of the internal queue that holds responses related to operations on OPC items.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.BrowseNodesChunk">
            <summary>
            Number of nodes requested in one call when browsing for OPC branches or leaves.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.TopicRetrialPeriod">
            <summary>
            Topic retrial period. Number of milliseconds.
            Determines how often will the component run the internal process to re-connect to OPC items that have failed (e.g. 
            due to incorrect Item IDs). 
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters"/> is equal to the current object.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDAClientParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAClientParameters.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDAClientParameters#ExecutionContext">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ExecutionContext"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters">
            <summary>
            Contains parameters that are perpetually shared among all instances of the OPC Data Access client object.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.DefaultMaxClientAge">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.MaxClientAge"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.DefaultMaxTopicAge">
            <summary>
            Default value of the <see cref="T:System.MTAThreadAttribute"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.DefaultClientLruSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.ClientLruSize"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.DefaultTopicLruSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.TopicLruSize"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.#ctor(OpcLabs.EasyOpc.Engine.EasyEngineParameters)">
            <param name="engineParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters)">
            <param name="engineParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.Default">
            <summary>
            Default engine parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="engineParameters1">First object to be compared.</param>
            <param name="engineParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="engineParameters1">First object to be compared.</param>
            <param name="engineParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.MaxClientAge">
            <summary>
            Maximum client age. Number of milliseconds. 
            When the engine recognizes that there is a connection to some OPC server that is unused for this period of time or 
            longer, it will disconnect from it.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.MaxTopicAge">
            <summary>
            Maximum topic age. Number of milliseconds. 
            When the engine recognizes that there is a connection to some OPC item that is unused for this period of time or 
            longer, it will disconnect from it.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.ClientLruSize">
            <summary>
            Client LRU size. Maximum number of OPC servers the engine can be connected to at a same time.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.TopicLruSize">
            <summary>
            Topic LRU size. Maximum number of OPC items the engine can be connected to at a same time.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates"/> is equal to the current object.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDAEngineParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAEngineParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters">
            <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientMode,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientUpdateRates,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientTimeouts,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientHoldPeriods)">
            <param name="clientMode">Client mode to use.</param>
            <param name="updateRates">Update rates to use.</param>
            <param name="timeouts">Timeouts to use.</param>
            <param name="holdPeriods">Hold periods to use.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters)">
            <param name="instanceParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Default">
            <summary>
            Default host parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.HoldPeriods">
            <summary>
            Specifies optimization parameters that reduce the load on the OPC server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Mode">
            <summary>
            Specifies common parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Timeouts">
            <summary>
            Specifies the maximum amount of time the various operations are allowed to take.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.UpdateRates">
            <summary>
            Specifies the "hints" for OPC update rates used when other explicit information is missing.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Reset">
            <summary>
            Sets the object properties back to their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDAInstanceParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDAInstanceParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.ResetHoldPeriods">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.HoldPeriods"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.ShouldSerializeHoldPeriods">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.HoldPeriods"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.ResetMode">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Mode"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.ShouldSerializeMode">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Mode"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.ResetTimeouts">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Timeouts"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.ShouldSerializeTimeouts">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.Timeouts"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.ResetUpdateRates">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.UpdateRates"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.ShouldSerializeUpdateRates">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters.UpdateRates"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters">
            <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAEngineParameters,OpcLabs.EasyOpc.Engine.EasyMachineParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAClientParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters)">
            <param name="engineParameters">Engine parameters to be used.</param>
            <param name="machineParameters">Machine parameters to be used.</param>
            <param name="clientParameters">Client parameters to be used.</param>
            <param name="topicParameters">Topic parameters to be used.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters)">
            <param name="sharedParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.Default">
            <summary>
            Default adaptable parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ClientParameters">
            <summary>
            Contains parameters that influence operations that target a specific OPC server as a whole.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.EngineParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the engine (global) level.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.MachineParameters">
            <summary>
            Contains parameters related to operations that target a specific computer but not a specific OPC server, such as 
            browsing for OPC servers using various methods.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.TopicParameters">
            <summary>
            Contains parameters that influence operations that target a specific OPC item.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.Reset">
            <summary>
            Sets the object properties back to their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDASharedParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDASharedParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ResetClientParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ClientParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ShouldSerializeClientParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ClientParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ResetEngineParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.EngineParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ShouldSerializeEngineParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.EngineParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ResetMachineParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.MachineParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ShouldSerializeMachineParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.MachineParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ResetTopicParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.TopicParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.ShouldSerializeTopicParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters.TopicParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters">
            <summary>
            Contains parameters that influence operations that target a specific OPC item.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultAbandonIntervalMinimum">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.AbandonIntervalMinimum"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultAbandonRateMultiplier">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.AbandonRateMultiplier"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultExactManualGroupMatch">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.ExactManualGroupMatch"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultFastestAutomaticUpdateRate">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.FastestAutomaticUpdateRate"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultFastestManualUpdateRate">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.FastestManualUpdateRate"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultHighestManualPercentDeadband">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.HighestManualPercentDeadband"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultLowestManualPercentDeadband">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.LowestManualPercentDeadband"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultSlowdownWeight">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SlowdownWeight"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultSlowestAutomaticUpdateRate">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SlowestAutomaticUpdateRate"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultSlowestManualUpdateRate">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SlowestManualUpdateRate"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultSpeedupWeight">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SpeedupWeight"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultTopicRetrialDelay">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.TopicRetrialDelay"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultUpdateRateNegativeHysteresis">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.UpdateRateNegativeHysteresis"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DefaultUpdateRatePositiveHysteresis">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.UpdateRatePositiveHysteresis"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters)">
            <param name="topicParameters">Topic parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.Default">
            <summary>
            Default topic parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="topicParameters1">First object to be compared.</param>
            <param name="topicParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="topicParameters1">First object to be compared.</param>
            <param name="topicParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.TopicRetrialDelay">
            <summary>
            Topic retrial delay. Number of milliseconds.
            If a specific OPC item is found to be not operational, further attempts to use it will not be made until the topic 
            retrial delay elapses. One of typical reasons for entering the topic retrial period is using an unknown OPC ItemID,
            which can later become correct when the OPC server configuration is updated.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.UpdateRateNegativeHysteresis">
            <summary>
            Hysteresis for negative update rate changes. In percent, between 0.0 and 100.0.
            Requests to make the update rate of OPC item faster (i.e. lower value) will be ignored if the percentual change
            in update rate value is lower than the value of this property.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.UpdateRatePositiveHysteresis">
            <summary>
            Hysteresis for positive update rate changes. In percent, between 0.0 and 100.0.
            Requests to make the update rate of OPC item slower (i.e. higher value) will be ignored if the percentual change
            in update rate value is lower than the value of this property.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.AbandonIntervalMinimum">
            <summary>
            Abandon interval minimum. Number of milliseconds.
            The OPC item is considered "abandoned" if no requests to it has been made for abandon interval. In such case its
            update rate is automatically adjusted to a slower value. The abandon interval is computed using the latest update 
            rate and <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.AbandonRateMultiplier"/>, but it is never shorter than value of this property.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.AbandonRateMultiplier">
            <summary>
            Abandon rate multiplier. Must be greater than or equal to 1.0.
            The OPC item is considered "abandoned" if no requests to it have been made for abandon interval. In such case its
            update rate is automatically adjusted to a slower value. The abandon interval is computed by multiplying the latest 
            update rate and the value of this property, but it is never shorter than <see cref="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.AbandonIntervalMinimum"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SpeedupWeight">
            <summary>
            Speed-up weight. Must be greater than or equal to 0.0.
            When the newly observed request rate for an OPC item is detected to be faster than the current update rate, the
            new update rate is computed. The value of this property is a relative weight of newly observed request rate to the
            update rate currently in use.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SlowdownWeight">
            <summary>
            Slow-down weight. Must be greater than or equal to 0.0.
            When the newly observed request rate for an OPC item is detected to be slower than the current update rate, the
            new update rate is computed. The value of this property is a relative weight of newly observed request rate to the
            update rate currently in use.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.FastestAutomaticUpdateRate">
            <summary>
            Fastest automatic update rate. Number of milliseconds.
            When the system automatically modifies the update rate of an OPC item, it never chooses a rate that is faster (has 
            lower value) than the value of this property.
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SlowestAutomaticUpdateRate">
            <summary>
            Slowest automatic update rate. Number of milliseconds.
            When the system automatically modifies the update rate of an OPC item, it never chooses a rate that is slower (has 
            higher value) than the value of this property.
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.FastestManualUpdateRate">
            <summary>
            Fastest manual update rate. Number of milliseconds.
            If your application specifies an update rate that is faster (has lower value) than the value of this property,
            the value of this property will be used instead.
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.SlowestManualUpdateRate">
            <summary>
            Slowest manual update rate. Number of milliseconds.
            If your application specifies an update rate that is slower (has higher value) than the value of this property,
            the value of this property will be used instead.
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.LowestManualPercentDeadband">
            <summary>
            If your application specifies a percent deadband that is lower than the value of this property,
            the value of this property will be used instead.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero, and less than or equal to 100.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.HighestManualPercentDeadband">
            <summary>
            If your application specifies a percent deadband that is higher than the value of this property,
            the value of this property will be used instead.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero, and less than or equal to 100.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.ExactManualGroupMatch">
            <summary>
            When this setting is on, explicit item subscriptions honor the requested update rate precisely (without attempting 
            to merge the neighboring rates into "buckets"). 
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.Equals(OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.OpcLabs#EasyOpc#DataAccess#Engine#ComTypes#_EasyDATopicParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.Engine.ComTypes._EasyDATopicParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Engine.EasyDATopicParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Formatting.DAQualityFormatter">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Formatting.DAVtqFormatter">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Formatting.NamespaceDoc">
            <summary>
            This namespace provides classes and interfaces that provide formatting capabilities for OPC Data Access objects.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1">
            <summary>Holds typed data value, timestamp and quality, abbreviated sometimes as VTQ. This is a common combination in 
            OPC, e.g. returned when an OPC item is read.</summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.#ctor(`0,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality)">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class, with the specified data value, timestamp and quality.</summary>
             <param name="value">The actual data value.</param>
             <param name="timestamp">The timestamp of the data.</param>
             <param name="quality">The quality of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.#ctor(`0,System.DateTime)">
            <summary>Initializes a new instance of the class, with the specified data value and timestamp.</summary>
            <param name="value">The actual data value.</param>
            <param name="timestamp">The timestamp of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.#ctor(`0,OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Initializes a new instance of the class, with the specified data value and quality.</summary>
            <param name="value">The actual data value.</param>
            <param name="quality">The quality of the data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.#ctor(`0)">
            <summary>Initializes a new instance of the class, with the specified data value.</summary>
            <param name="value">The actual data value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.#ctor(OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{`0})">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> object.</summary>
            <param name="vtq">The object containing the value, timestamp and quality to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.Null">
            <summary>
            A null typed value-timestamp-quality.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.FromDAVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>Creates a typed generic <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> from non-generic <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> object.
            </summary>
            <param name="vtq">A non-generic Value/Timestamp/Quality object to be converted to typed generic.</param>
            <returns>A typed <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> object made from <paramref name="vtq"/>.</returns>
            <remarks>
            When <paramref name="vtq"/> is <b>null</b>, the return value is also <b>null</b>.
            An exception is thrown when the <paramref name="vtq"/> does not contain a type assignable to <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/>.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.TypedValue">
            <summary>Gets or sets the data value.</summary>
            <remarks>The property has a different name from the base class in order to satisfy StreamInsight serialization
            limitations.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.CheckValue(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.DAVtq.CheckValue(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.ResetTypedValue">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.TypedValue"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.ShouldSerializeTypedValue">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.TypedValue"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1">
            <summary>Holds result of an operation in form of a typed <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> (value, timestamp, and quality).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <remarks>
            <para>The result is successful if the <see cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.Exception"/> is a null reference. Otherwise, this 
            property contains information about the reason of the failure.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.#ctor(OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult{`0})">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1"/> object.</summary>
            <param name="vtqResult">The OPC-DA typed VTQ result object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.#ctor(System.Object,OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{`0})">
            <summary>Initializes a new instance of the class, with given state object and <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/>.</summary>
            <param name="state">The state object specified when the operation was invoked.</param>
            <param name="vtq">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> (value, timestamp and quality) that is a successful result of the 
            operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.#ctor(System.Object,System.Exception)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.#ctor(System.Object,System.Exception,OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{`0})">
            <summary>Initializes a new instance of the class, with given state object, exception, and 
            <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/>.</summary>
            <param name="state">The state object specified when the operation was invoked.</param>
            <param name="exception">The reason of the failure of the operation.</param>
            <param name="vtq">The typed <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> (value, timestamp and quality) that is a successful result of the 
            operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.TypedVtq">
            <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> (value, timestamp and quality) that is a successful result of the 
            operation.
            </summary>
            <value>Contains a null reference, when <see cref="T:System.Exception"/> is not null. Contains a non-null object when
            <see cref="T:System.Exception"/> is null.</value>
            <remarks>The property has a different name from the base class in order to satisfy StreamInsight serialization
            limitations.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1">
            <summary>Holds an OPC server and item descriptor, and a typed data value, as arguments to some operation.</summary>
            <typeparam name="TValue">The type of item value.</typeparam>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,`0,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, data value, 
            and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,`0)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, data value, 
            and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,`0,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, with the data value, and with a user-defined state object.
            </summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="value">The value to be written.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.#ctor(System.String,System.String,System.String,`0)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, and with the data value.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.#ctor(OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments{`0})">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1"/> object.</summary>
            <param name="args">The item value arguments object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.TypedValue">
            <summary>Gets or sets the data value that is an argument to the operation.</summary>
            <remarks>The property has a different name from the base class in order to satisfy StreamInsight serialization
            limitations.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.CheckValue(System.Object)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.CheckValue(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.ResetTypedValue">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.TypedValue"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.ShouldSerializeTypedValue">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Generic.DAItemValueArguments`1.TypedValue"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1">
            <summary>Holds an OPC server and item descriptor, and a typed value/timestamp/quality (<see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/>), as 
            arguments to some operation.</summary>
            <typeparam name="T">The type of item value.</typeparam>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{`0},System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, 
            value/timestamp/quality, and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="vtq">The object containing the value, timestamp and quality to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{`0})">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, 
            and value/timestamp/quality.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="vtq">The object containing the value, timestamp and quality to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,`0,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, with the data value, timestamp and quality, and with a 
            user-defined state object.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="value">The value to be written.</param>
            <param name="timestamp">The timestamp to be written.</param>
            <param name="quality">The quality to be written.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.#ctor(System.String,System.String,System.String,`0,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId, and with the data value, timestamp and quality.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
            <param name="timestamp">The timestamp to be written.</param>
            <param name="quality">The quality to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.#ctor(OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments{`0})">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1"/> object.</summary>
            <param name="args">Item VTQ arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.DefaultTypedVtq">
            <summary>
            Default typed Vtq (typed value-timestamp-quality).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.TypedVtq">
            <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> (value, timestamp and quality) that is an argument to the operation.
            </summary>
            <remarks>The property has a different name from the base class in order to satisfy StreamInsight serialization
            limitations.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.ResetTypedVtq">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.TypedVtq"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.ShouldSerializeTypedVtq">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Generic.DAItemVtqArguments`1.TypedVtq"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1">
            <summary>Provides typed data for an event raised for every significant change in a subscribed OPC item.</summary>
            <typeparam name="TValue">The type of item value.</typeparam>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.#ctor">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Initializes a new instance of the class, with a copy of another instance.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.op_Explicit(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0})~OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult{`0}">
            <summary>
            Converts typed event arguments to a corresponding typed result object, <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1"/>. 
            </summary>
            <param name="eventArgs">The typed event arguments to be converted.</param>
            <returns>The typed result object that corresponds to the event arguments. <b>null</b> if the event arguments
            passed in were <b>null</b>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.ToDAVtqResult(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0})">
            <summary>
            Converts typed event arguments to a corresponding typed result object, <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtqResult`1"/>. 
            </summary>
            <param name="eventArgs">The typed event arguments to be converted.</param>
            <returns>The typed result object that corresponds to the event arguments. <b>null</b> if the event arguments
            passed in were <b>null</b>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.TypedVtq">
            <summary>Gets the current (new) <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> (a typed value, timestamp and quality) of the OPC item.
            Null reference when <see cref="T:System.Exception"/> is not null.
            </summary>
            <remarks>The property has a different name from the base class in order to satisfy StreamInsight serialization
            limitations.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1">
            <summary>Holds an OPC server and item descriptor, and OPC group parameters, and possibly a typed callback method,
            as arguments to subscription operation.</summary>
            <typeparam name="T">The type of item value.</typeparam>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventHandler{`0},System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, OPC group
            parameters, user-defined state object, and a typed callback method.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="callback">A typed callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
              notifications.</param>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.Object)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Single,OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventHandler{`0},System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, the OPC group parameters specified by requested update rate and 
            percent deadband, user-defined state object, and with a typed callback method.</summary>
            <param name="machineName">Name of the machine. 
              Determines the computer on which the OPC server is located. May be an empty 
              string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
              by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
              the server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update.</param>
            <param name="callback">A typed callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
              notifications.</param>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Single,System.Object)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Object)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(System.String,System.String,System.String,System.Int32,OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventHandler{`0},System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId, the OPC group parameters specified by requested update rate, 
            user-defined state object, and with a typed callback method.</summary>
            <param name="machineName">Name of the machine. 
              Determines the computer on which the OPC server is located. May be an empty 
              string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
              by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="callback">A typed callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
              notifications.</param>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(System.String,System.String,System.String,System.Int32,System.Object)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments,OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventHandler{`0})">
            <summary>Initializes a new <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/> object from 
            <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments"/>, and with specified typed callback method.</summary>
            <param name="args">The item group arguments object to be copied from.</param>
            <param name="callback">A typed callback method to be invoked for each significant item change.</param>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments{`0})">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1"/> object.</summary>
            <param name="args">The typed item subscription arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.op_Equality(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments{`0},OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments{`0})">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.op_Inequality(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments{`0},OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments{`0})">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.TypedCallback">
            <summary>A typed callback method to be invoked for each significant monitored item change.</summary>
            <value>If this is a null reference, only the <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> 
            events are generated, but no callback method is invoked.</value>
            <remarks>The property has a different name from the base class in order to satisfy StreamInsight serialization
            limitations.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.Equals(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments{`0})">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemSubscriptionArguments`1.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventHandler`1">
            <summary>
            Represents the method that will handle an event raised for every significant change in a subscribed OPC item.
            </summary>
            <typeparam name="TValue">The type of item value.</typeparam>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs`1"/> that contains the event data.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Generic.NamespaceDoc">
            <summary>
            This namespace contains classes for OPC Data Access that use generics.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Generic.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.Resource1.DAItemValueArguments_CheckValue_IncompatibleType">
            <summary>
              Looks up a localized string similar to The value is of incompatible type for this DAItemValueArguments&lt;&gt; object. The value is not null and cannot be cast to the specified type..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.Resource1.DAItemVtqArguments_CheckVtq_IncompatibleType">
            <summary>
              Looks up a localized string similar to The DAVtq value is of incompatible type for this DAItemVtqArguments&lt;&gt; object. The value is not null and cannot be cast to the specified type..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.Resource1.DAVtq_CheckValue_IncompatibleType">
            <summary>
              Looks up a localized string similar to The value is of incompatible type for this DAVtq&lt;&gt; object. The data value is not null and cannot be cast to the specified type..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.Resource1.DAVtqResult_CheckVtq_IncompatibleType">
            <summary>
              Looks up a localized string similar to The DAVtq value is of incompatible type for this DAVtqResult&lt;&gt; object. The value is not null and cannot be cast to the specified type..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Generic.Resource1.EasyDAItemChangedEventArgs_CheckVtq_IncompatibleType">
            <summary>
              Looks up a localized string similar to The DAVtq value is of incompatible type for this EasyDAItemChangedEventArgs&lt;&gt; object. The value is not null and cannot be cast to the specified type..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler">
            <summary>
            Represents the method that will handle an event raised for every significant change in a subscribed OPC item.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode">
            <summary>
            A pre-made base class for mapping OPC Data Access nodes.
            </summary>
            <remarks>
            You may (but do not have to) use this class as a base class for your objects that you map to OPC Data Access nodes.
            The class is already annotated with the <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeAttribute"/>, and contains properties that are mapped to
            useful meta-members, such as the <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.NodeDescriptor"/>.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.GroupParameters">
            <summary>
            An object containing subscription parameters, such as the requested update rate.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.ItemMappings">
            <summary>
            An enumeration of OPC-DA item mappings defined directly on the target object.
            </summary>
            <remarks>
            This property intentionally returns an enumerable of <see cref="T:OpcLabs.BaseLib.LiveMapping.AbstractMapping"/> and not 
            <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping"/>, because that's what methods on <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper"/> can accept directly.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.NodeDescriptor">
            <summary>
            The descriptor of the OPC node involved in the operation.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.PropertyMappings">
            <summary>
            An enumeration of OPC-DA property mappings defined directly on the target object.
            </summary>
            <remarks>
            This property intentionally returns an enumerable of <see cref="T:OpcLabs.BaseLib.LiveMapping.AbstractMapping"/> and not 
            <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping"/>, because that's what methods on <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper"/> can accept directly.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.ReadParameters">
            <summary>
            The read parameters (such as data source or value age).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper">
            <summary>
            An abstract mapper for OPC Data Access specification. Provides a functionality to map an object to entities in 
            OPC Data Access domain.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper"/> object.</summary>
            <param name="mapper">The OPC-DA mapper object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
            <summary>
            Initializes a new instance of the class, with given client object, mapping provider, and mapping context template.
            </summary>
            <param name="mappingProvider">The mapping provider to be used by this mapper.</param>
            <param name="mappingContextTemplate">The mapping context template.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.#ctor(System.ComponentModel.IContainer,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
            <summary>
            Initializes an instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper"/> class with Designer support. 
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
            <param name="mappingProvider">The mapping provider to be used by this mapper.</param>
            <param name="mappingContextTemplate">The mapping context template.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.DefaultMappingProvider">
            <summary>
            A default mapping provider.
            </summary>
            <remarks>
            <para>
            The default mapping provider is used when no mapping provider is specified in the constructor of the mapper.</para>
            <para>
            The initial value is equal to <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.SharedInstance"/>; all its limitations apply. </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.DefaultMappingContextTemplate">
            <summary>
            A default mapping context template. May be <c>null</c>.
            </summary>
            <remarks>
            <para>
            The default mapping context template is used when no template is specified in the constructor of the mapper.</para>
            <para>
            The initial value is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.ObtainItemVtq(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping)">
            <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> for an item source, given an item mapping of a VTQ member.
            </summary>
            <param name="vtqMapping">An item mapping of a VTQ member.</param>
            <returns>The arguments assembled from the item source and the item mapping.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.ObtainItemVtq(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping)">
            <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> for an item source, given item mappings for a value, timestamp and 
            quality members.
            </summary>
            <param name="valueMapping">An item mapping of the value member.</param>
            <param name="timestampMapping">An item mapping of the timestamp member (in UTC).</param>
            <param name="timestampLocalMapping">An item mapping of the timestamp member (in local time).</param>
            <param name="qualityMapping">An item mapping of the quality member.</param>
            <returns>The arguments assembled from the item source and the item mappings.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.DeferredMapNodeFunction">
            <summary>
            A function that returns the deferred mapping function for a given mapping context.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.FastestUpdateRate">
            <summary>
            The fastest update rate allowed by this mapper. 
            </summary>
            <remarks>
            When not equal to zero (the default), all mappings that specify faster update rate will use this value.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.LowestPercentDeadband">
            <summary>
            The lowest percent deadband allowed by this mapper.
            </summary>
            <remarks>
            When not equal to zero (the default), all mappings that specify lower percent deadband will use this value.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.MappingContextTemplate">
            <summary>
            The mapping context template to be used by the mapping provider.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.MappingProvider">
            <summary>
            The mapping provider to be used by this mapper.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateFolderMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderAttribute)">
            <summary>
            Creates a folder mapping.
            </summary>
            <param name="parent">A parent mapping.</param>
            <param name="folderAttribute">Gives information about OPC Data Access folder.</param>
            <returns>The folder mapping created.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateFolderSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
            <summary>
            Creates a folder source.
            </summary>
            <param name="mappingContext">A mapping context for OPC Data Access.</param>
            <param name="memberMappingDefinition">Member mapping definition for members involved in OPC Data Access mapping.</param>
            <returns>The folder source created.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateItemMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute)">
            <summary>
            Creates an item mapping.
            </summary>
            <param name="parent">A parent mapping.</param>
            <param name="itemAttribute">Gives information about OPC Data Access item.</param>
            <returns>The item mapping created.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateItemSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
            <summary>
            Creates an item source.
            </summary>
            <param name="mappingContext">A mapping context for OPC Data Access.</param>
            <param name="memberMappingDefinition">Member mapping definition for members involved in OPC Data Access mapping.</param>
            <returns>The item source created.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreatePropertyMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute)">
            <summary>
            Creates a property mapping.
            </summary>
            <param name="parent">A parent mapping.</param>
            <param name="propertyAttribute">Gives information about OPC Data Access property (on some OPC item).</param>
            <returns>The property mapping created.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreatePropertySource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
            <summary>
            Creates a property source.
            </summary>
            <param name="mappingContext">A mapping context for OPC Data Access.</param>
            <param name="memberMappingDefinition">Member mapping definition for members involved in OPC Data Access mapping.</param>
            <returns>The property source created.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.ValueEquals(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext">
            <summary>
            A mapping context for OPC Data Access.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.#ctor">
            <summary>
            Initializes a new instance of the class, with all defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
            <summary>
            Initializes a new instance of the class, based on a given mapping context template.
            </summary>
            <param name="template">The mapping context that is used as a template for creating a new instance.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Initializes a new instance of the class, with a given OPC server descriptor, OPC group parameters, OPC node
            descriptor, and read parameters.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Initializes a new instance of the class, given all its properties.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="itemIdTemplateString">The template string for OPC item IDs.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <param name="nodePathTemplateString">The template string for OPC node paths.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.op_Equality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.op_Inequality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.GroupParameters">
            <summary>
            An object containing subscription parameters, such as the requested update rate.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.ItemIdTemplateString">
            <summary>
            The template string for OPC item IDs.
            </summary>
            <remarks>
            <para>
            Following macros can be used in template strings:
            <ul>
                <li><c>$(ParentNodePath)    </c>The OPC node path of the parent node. Only used with OPC XML.</li>
                <li><c>$(ParentItemId)      </c>The OPC Item Id of parent node.</li>
                <li><c>$(BrowseName)        </c>The browse name of current node.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.NodeDescriptor">
            <summary>
            The descriptor of the OPC node involved in the operation.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.NodePathTemplateString">
            <summary>
            The template string for OPC node paths.
            </summary>
            <remarks>
            <para>
            Following macros can be used in template strings:
            <ul>
                <li><c>$(ParentNodePath)    </c>The OPC node path of the parent node. Only used with OPC XML.</li>
                <li><c>$(ParentItemId)      </c>The OPC Item Id of parent node.</li>
                <li><c>$(BrowseName)        </c>The browse name of current node.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.ReadParameters">
            <summary>
            The read parameters (such as data source or value age).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.ApplyMemberMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.ApplyMemberMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.ApplyTypeMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingContext.ApplyTypeMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider">
            <summary>
            A mapping provider for OPC Data Access specification. 
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.SharedInstance">
            <summary>
            A default, shared instance of the mapping provider object.
            </summary>
            <remarks>
            <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
            <para>
            The default instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="T:System.Threading.SynchronizationContext"/> may be used with each form.</para>
            <para>
            We also do not recommend using the default instance for library code, due to conflicts that may arise if your 
            library sets some instance parameters which may not be the same as what other libraries or the final application 
            expects.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.CreateMappingContext(OpcLabs.BaseLib.LiveMapping.AbstractMappingContext)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider.CreateMappingContext(OpcLabs.BaseLib.LiveMapping.AbstractMappingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.GetTypeMappingDefinition(System.Type)">
            <summary>
            Obtains a type mapping definition for a given type, either by looking up an already loaded definition,
            or loading it, if not known to the provider yet.
            </summary>
            <param name="type">The type for which the type mapping definition should be obtained.</param>
            <returns>The existing or newly loaded type mapping definition; <c>null</c> if the type is not for mapping.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.NewTypeMappingDefinition">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider.NewTypeMappingDefinition"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.CollectMemberMappings(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition,System.Type,System.Object,System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider.CollectMemberMappings(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition,System.Type,System.Object,System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.GetMetaValue(System.String,System.Object,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingProvider.GetMetaValue(System.String,System.Object,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)"/>
            <remarks>
            <para>
            <see cref="T:OpcLabs.EasyOpc.LiveMapping.CommonMappingProvider"/> supports following meta-members:
            <ul>
                <li><c>GroupParameters</c>: <see cref="T:OpcLabs.EasyOpc.DataAccess.DAGroupParameters"/>, an object containing subscription parameters, such as the requested update rate.</li>
                <li><c>NodeDescriptor</c>:  <see cref="T:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor"/>, the descriptor of the OPC node involved in the operation.</li>
                <li><c>ReadParameters</c>:  <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/>, the read parameters (such as data source or value age).</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderAttribute">
            <summary>
            Gives information about OPC Data Access folder.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute">
            <summary>
            Gives information about OPC Data Access item.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultAccessPath">
            <summary>
            Default access path. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultCanonicalDataType">
            <summary>
            Default canonical data type. Corresponds to <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultRequestedDataType">
            <summary>
            Default requested data type. Corresponds to <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultKind">
            <summary>
            Default item mapping kind. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Value"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultOperations">
            <summary>
            Default item mapping operations. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.All"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultItemType">
            <summary>
            Default type (of OPC item). Corresponds to a type of <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.AccessPath">
            <summary>
            An optional data path suggestion to the server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.CanonicalDataType">
            <summary>
            Specifies the canonical data type.
            </summary>
            <remarks>This property is only used in server mapping. It is ignored in client mapping.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.RequestedDataType">
            <summary>
            Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.
            </summary>
            <remarks>This property is only used in client mapping. It is ignored in server mapping.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.Kind">
            <summary>
            Specifies how the OPC Data Access item will be mapped.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.Operations">
            <summary>
            OPC-DA item mapping operations in which the attributed target should participate.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.ItemType">
            <summary>
            The type of OPC item.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute">
            <summary>
            Describes how to construct OPC item IDs.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class with given template string for item Id.
            </summary>
            <param name="itemIdTemplateString">The template string for item Id.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the class with given template strings for node path and item Id.
            </summary>
            <param name="nodePathTemplateString">The template string for node path.</param>
            <param name="itemIdTemplateString">The template string for item Id.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute.ItemIdTemplateString">
            <summary>
            The template string for item Id.
            </summary>
            <remarks>
            <para>
            <c>Null</c> is allowed, because it allows to disable the template use from certain level onwards.</para>
            <para>
            Following macros can be used in template strings:
            <ul>
                <li><c>$(ParentNodePath)    </c>The OPC node path of the parent node. Only used with OPC XML.</li>
                <li><c>$(ParentItemId)      </c>The OPC Item Id of parent node.</li>
                <li><c>$(BrowseName)        </c>The browse name of current node.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute.NodePathTemplateString">
            <summary>
            The template string for node path. Only used with OPC XML.
            </summary>
            <remarks>
            <para>
            <c>Null</c> is allowed, because it allows to disable the template use from certain level onwards.</para>
            <para>
            Following macros can be used in template strings:
            <ul>
                <li><c>$(ParentNodePath)    </c>The OPC node path of the parent node. Only used with OPC XML.</li>
                <li><c>$(ParentItemId)      </c>The OPC Item Id of parent node.</li>
                <li><c>$(BrowseName)        </c>The browse name of current node.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberAttribute">
            <summary>
            Denotes that the member should be involved in OPC Data Access mapping.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute">
            <summary>
            Gives information about OPC Data Access node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.BrowsePath">
            <summary>
            Specifies the browse path for the OPC node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.Deferred">
            <summary>
            Determines whether the node will be mapped in a deferred manner.
            </summary>
            <remarks>
            When <c>false, the member will be set to the mapped object itself; when </c><c>true</c>, the member will be set to 
            a function that returns the mapped object (deferred mapping). The <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.DeferredMapNodeFunction"/>
            must be set to provide the deferred mapping function for the given mapping context.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.ItemId">
            <summary>
            Contains OPC item identifier (empty string for the root, null reference if unknown).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.NodePath">
            <summary>
            Contains node path (empty string for the root, null reference if unknown). Only used with OPC XML.
            </summary>
            <remarks>
            <para>
            Not to be confused with the <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.BrowsePath"/>, or the access path (only in OPC-DA 1.0, and quite rare). </para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute">
            <summary>
            Gives information about OPC Data Access property (on some OPC item).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.DefaultKind">
            <summary>
            Default property mapping kind. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Value"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.DefaultQualifiedName">
            <summary>
            Default qualified name of the property. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyIds)">
            <summary>Initializes a new instance of the class with given enumerated OPC property Id.</summary>
            <param name="propertyIds">Enumerated Id of the OPC property.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.#ctor(System.Int64)">
            <summary>Initializes a new instance of the class with given numerical OPC property Id.</summary>
            <param name="propertyId">Numerical Id of the OPC property.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.DefaultType">
            <summary>
            Default type (of OPC property ). Corresponds to a type of <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.Kind">
            <summary>
            Specifies how the OPC Data Access property will be mapped.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.PropertyId">
            <summary>
            Numerical Id of the OPC property.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.PropertyType">
            <summary>
            The type of OPC property.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.QualifiedName">
            <summary>
            The qualified name of the OPC property.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute">
            <summary>
            Gives information about how OPC Data Access reading should be performed.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.DefaultDataSource">
            <summary>
            Default data source.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.DefaultValueAge">
            <summary>
            Default value age.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.DataSource">
            <summary>Selects the data source for OPC reads (from device, from OPC cache, or dynamically determined).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.ValueAge">
            <summary>Determines the age of value you would like to obtain (in milliseconds).</summary>
            <remarks>
            <para>This value is significant only when the <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.DataSource"/> property is set to 
            ByValueAge. </para>
            <para>The value must be greater than or equal to zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            <para>When the value is <see cref="F:System.Threading.Timeout.Infinite"/>, the value will always be provided from 
            the memory, i.e. without actually accessing the OPC server.</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute">
            <summary>
            Gives information about how the OPC Data Access subscription should be performed, such as the requested update rate.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.DefaultLocale">
            <summary>
            Default locale. Equals to zero.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.DefaultPercentDeadband">
            <summary>
            Default percent deadband. Equals to zero (0.0).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.DefaultRequestedUpdateRate">
            <summary>
            Default requested update rate. Equals to <see cref="F:System.Threading.Timeout.Infinite"/>, i.e. no implicit updates.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.Locale">
            <summary>Gets or sets the language to be used by the server when returning values.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.RequestedUpdateRate">
            <summary>Gets or sets the requested update rate</summary>
            <remarks>
            <para>How often should the updates be received (number of milliseconds).</para>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.PercentDeadband">
            <summary>Gets or sets the percent change in an item value that will cause an update.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeAttribute">
            <summary>
            Denotes that the type should be involved in OPC Data Access mapping.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind">
            <summary>
            Specifies how the OPC Data Access item will be mapped.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Result">
            <summary>
            Map the operation result, as <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/> or a derived type specific for the operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.ErrorId">
            <summary>
            Map the error ID, as <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Exception">
            <summary>
            Map the exception, as <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Exception"/> or a derived type. <c>null</c> if the operation has been successful.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.ErrorMessage">
            <summary>
            Map the error message, as <see cref="T:System.String"/>. An empty string if the operation has been successful.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.StatusInfo">
            <summary>
            Map the status information, as <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.StatusInfo"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Vtq">
            <summary>
            Map the item value/timestamp/quality combination, as <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> or a generic <c>DAVtq</c>.
            </summary>
            <remarks>
            The linking target value is not changed if the operation resulted in an exception.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Value">
            <summary>
            Map the item value, as <see cref="T:System.Object"/> or a specific type. This is the default mapping kind.
            </summary>
            <remarks>
            The linking target value is not changed if the operation resulted in an exception.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Timestamp">
            <summary>
            Map the timestamp, as <see cref="T:System.DateTime"/>. In UTC.
            </summary>
            <remarks>
            The linking target value is not changed if the operation resulted in an exception.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.TimestampLocal">
            <summary>
            Map the timestamp, as <see cref="T:System.DateTime"/>. In local time.
            </summary>
            <remarks>
            The linking target value is not changed if the operation resulted in an exception.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Quality">
            <summary>
            Map the OPC quality, as <see cref="T:OpcLabs.EasyOpc.DataAccess.DAQuality"/>.
            </summary>
            <remarks>
            The linking target value is not changed if the operation resulted in an exception.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations">
            <summary>
            Possible mapping operations on OPC Data Access items.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.None">
            <summary>
            No operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read">
            <summary>
            A Read operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write">
            <summary>
            A Write operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe">
            <summary>
            A Subscribe operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.ReadAndWrite">
            <summary>
            Read and Write operations.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.ReadAndSubscribe">
            <summary>
            Read and Subscribe operations.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.WriteAndSubscribe">
            <summary>
            Write and Subscribe operations.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.All">
            <summary>
            All operations (Read, Write, Subscribe).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind">
            <summary>
            Specifies how the OPC Data Access property will be mapped.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Result">
            <summary>
            Map the operation results, as <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/> or a derived type specific for the operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.ErrorId">
            <summary>
            Map the error ID, as <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Exception">
            <summary>
            Map the exception, as <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Exception"/> or a derived type. <c>null</c> if the operation has been successful.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.ErrorMessage">
            <summary>
            Map the error message, as <see cref="T:System.String"/>. An empty string if the operation has been successful.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.StatusInfo">
            <summary>
            Map the status information, as <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.StatusInfo"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Value">
            <summary>
            Map the property value, as <see cref="T:System.Object"/> or a specific type. This is the default mapping kind.
            </summary>
            <remarks>
            The linking target value is not changed if the operation resulted in an exception.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition">
            <summary>
            Member mapping definition for members involved in OPC Data Access mapping.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.#ctor(System.String)">
            <inheritdoc cref="T:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.FolderAttribute">
            <summary>
            Contains the <c>DAFolder</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.MemberAttribute">
            <summary>
            Contains the <c>DAMember</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.NodeAttribute">
            <summary>
            Contains the <c>DANode</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.ItemAttribute">
            <summary>
            Contains the <c>DAItem</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.SubscriptionAttribute">
            <summary>
            Contains the <c>DASubscription</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.PropertyAttribute">
            <summary>
            Contains the <c>DAProperty</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.ReadAttribute">
            <summary>
            Contains the <c>DARead</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.LoadFromMemberInfo(System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition.LoadFromMemberInfo(System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.ShouldLoadFromMemberInfo(System.Reflection.MemberInfo)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition.ShouldLoadFromMemberInfo(System.Reflection.MemberInfo)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition">
            <summary>
            Type mapping definitions for a type that is mapped to OPC Data Access.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.ItemIdTemplateAttribute">
            <summary>
            Contains the <c>DAItemIdTemplate</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.ReadAttribute">
            <summary>
            Contains the <c>DARead</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.SubscriptionAttribute">
            <summary>
            Contains the <c>DASubscription</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.LoadFromType(System.Type,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition.LoadFromType(System.Type,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.ShouldLoadFromType(System.Type)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition.ShouldLoadFromType(System.Type)"/>
            <remarks>The type must be marked with <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeAttribute"/> should it be loaded.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.NewMemberMappingDefinition(System.String)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition.NewMemberMappingDefinition(System.String)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderSource">
            <summary>
            An abstract mapping source that represents OPC Data Access folder.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Initializes a new instance of the class, with given OPC server and node descriptors.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The OPC item involved in the operation.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderSource.Mappings">
            <summary>
            The mappings associated with this mapping source.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemSource">
            <summary>
            An abstract mapping source that represents OPC Data Access item.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemSource.Mappings">
            <summary>
            The mappings associated with this mapping source.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource">
            <summary>
            A mapping source for OPC Data Access specification.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Initializes a new instance of the class, with given OPC server and node descriptors.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.op_Equality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.op_Inequality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.NodeDescriptor">
            <summary>
            The descriptor of the OPC node involved in the operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.Equals(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource">
            <summary>
            An abstract mapping source that represents OPC Data Access property (on an OPC item).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>
            Initializes a new instance of the class, with given OPC server, node and property descriptors.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The descriptor of the OPC property involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.op_Equality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.op_Inequality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.Kind">
            <summary>
            Specifies how the OPC Data Access property will be mapped.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.PropertyDescriptor">
            <summary>
            The descriptor of the OPC property involved in the operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.Mappings">
            <summary>
            The mappings associated with this mapping source.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.Equals(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderMapping">
            <summary>
            An abstract mapping for OPC Data Access folders.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping)">
            <summary>
            Initializes a new instance of the class, with given parent mapping.
            </summary>
            <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping">
            <summary>
            An abstract mapping for OPC Data Access items.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.DefaultKind">
            <summary>
            The default item mapping kind. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Value"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping,System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind)">
            <summary>
            Initializes a new instance of the class, with given parent mapping, OPC item type, and mapping kind.
            </summary>
            <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
            <param name="itemType">The type of OPC item.</param>
            <param name="kind">Specifies how the OPC Data Access item will be mapped.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.ItemType">
            <summary>
            The type of OPC item.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.Kind">
            <summary>
            Specifies how the OPC Data Access item will be mapped.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.SetResult(OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult)">
            <summary>
            Uses the given <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> object to set the value of the linking target.
            </summary>
            <param name="vtqResult">The result object that contains the data for the target.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.SetResult(OpcLabs.BaseLib.OperationModel.OperationResult)">
            <summary>
            Uses the given <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/> object to set the value of the linking target.
            </summary>
            <param name="operationResult">The result object that contains the data for the target.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.ShouldSerializeItemType">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.ItemType"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping">
            <summary>
            An abstract mapping for OPC Data Access properties.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.DefaultKind">
            <summary>
            The default property mapping kind. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Value"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping,System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind)">
            <summary>
            Initializes a new instance of the class, with given parent mapping, OPC property type, and mapping kind.
            </summary>
            <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
            <param name="propertyType">The type of OPC property.</param>
            <param name="kind">Specifies how the OPC Data Access property will be mapped.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.Kind">
            <summary>
            Specifies how the OPC Data Access property will be mapped.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.MappingSource">
            <inheritdoc cref="P:OpcLabs.BaseLib.LiveMapping.AbstractMapping.MappingSource"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.PropertyType">
            <summary>
            The type of OPC property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.SetResult(OpcLabs.BaseLib.OperationModel.ValueResult)">
            <summary>
            Uses the given <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> object to set the value of the linking target.
            </summary>
            <param name="valueResult">The result object that contains the data for the target.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.ShouldSerializePropertyType">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.PropertyType"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper">
            <summary>
            A client mapper for OPC Data Access specification. Provides a functionality to map an object to entities in 
            OPC Data Access domain.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor">
            <summary>
            Initializes a new instance of the class, with all defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper"/> object.</summary>
            <param name="clientMapper">The OPC-DA client mapper object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
            <summary>
            Initializes a new instance of the class, with given mapping context template.
            </summary>
            <param name="mappingContextTemplate">The mapping context template.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClient)">
            <summary>
            Initializes a new instance of the class, with given client object.
            </summary>
            <param name="client">The client object that this mapper will use to make OPC operations.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClient,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
            <summary>
            Initializes a new instance of the class, with given client object and mapping context template.
            </summary>
            <param name="client">The client object that this mapper will use to make OPC operations.</param>
            <param name="mappingContextTemplate">The mapping context template.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClient,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
            <summary>
            Initializes a new instance of the class, with given client object, mapping provider, and mapping context template.
            </summary>
            <param name="client">The client object that this mapper will use to make OPC operations.</param>
            <param name="mappingProvider">The mapping provider to be used by this mapper.</param>
            <param name="mappingContextTemplate">The mapping context template.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.DefaultClient">
            <summary>
            A default client object.
            </summary>
            <remarks>
            <para>
            The default client object is used when no client object is specified in the constructor of the mapper.</para>
            <para>
            The initial value is equal to <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SharedInstance"/>; all its limitations apply. </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.SharedInstance">
            <summary>
            A default, shared instance of the mapper object.
            </summary>
            <remarks>
            <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
            <para>
            The default instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="T:System.Threading.SynchronizationContext"/> may be used with each form.</para>
            <para>
            We also do not recommend using the default instance for library code, due to conflicts that may arise if your 
            library sets some instance parameters which may not be the same as what other libraries or the final application 
            expects.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ObtainItemValueArguments(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,System.Object)">
            <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments"/> for an item source, given an item mapping of a value member.
            </summary>
            <param name="itemSource">The item source for which the arguments will be assembled.</param>
            <param name="valueMapping">An item mapping of a value member.</param>
            <param name="state">An arbitrary state object for be used within the arguments.</param>
            <returns>The arguments assembled from the item source and the item mapping.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ObtainItemVtqArguments(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,System.Object)">
            <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments"/> for an item source, given an item mapping of a VTQ member.
            </summary>
            <param name="itemSource">The item source for which the arguments will be assembled.</param>
            <param name="vtqMapping">An item mapping of a VTQ member.</param>
            <param name="state">An arbitrary state object for be used within the arguments.</param>
            <returns>The arguments assembled from the item source and the item mapping.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ObtainItemVtqArguments(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,System.Object)">
            <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments"/> for an item source, given item mappings for a value, timestamp and 
            quality members.
            </summary>
            <param name="itemSource">The item source for which the arguments will be assembled.</param>
            <param name="valueMapping">An item mapping of the value member.</param>
            <param name="timestampMapping">An item mapping of the timestamp member (in UTC).</param>
            <param name="timestampLocalMapping">An item mapping of the timestamp member (in local time).</param>
            <param name="qualityMapping">An item mapping of the quality member.</param>
            <param name="state">An arbitrary state object for be used within the arguments.</param>
            <returns>The arguments assembled from the item source and the item mappings.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Client">
            <summary>
            The client object that this mapper uses to make OPC operations.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ClientMappings">
            <summary>
            The client mappings in this mapper.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.SubscribedItemCount">
            <summary>
            Number of OPC items currently subscribed to by this mapper.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Get">
            <summary>
            Executes the "Get" operation on all mappings in this mapper.
            </summary>
            <remarks>
            The "Get" operation obtains value of an OPC property and stores it into the mapping source.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping"/> are affected; other mappings are ignored.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Get(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
            <summary>
            Executes the "Get" operation on given mappings.
            </summary>
            <param name="mappings">The mappings to be operated upon.</param>
            <remarks>
            The "Get" operation obtains value of an OPC property and stores it into the mapping source.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping"/> are affected; other mappings are ignored.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Read">
            <summary>
            Executes the "Read" operation on all mappings in this mapper.
            </summary>
            <remarks>
            The "Read" operation reads a value of an OPC item and stores it into the mapping source.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping"/> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read"/>
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations"/> are affected; other mappings are ignored.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Read(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
            <summary>
            Executes the "Read" operation on given mappings.
            </summary>
            <param name="mappings">The mappings to be operated upon.</param>
            <remarks>
            The "Read" operation reads a value of an OPC item and stores it into the mapping source.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping"/> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read"/>
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations"/> are affected; other mappings are ignored.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Subscribe(System.Boolean)">
            <summary>
            Executes the "Subscribe" operation on all mappings in this mapper.
            </summary>
            <param name="active"><c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
            <remarks>
            The "Subscribe" operation subscribes to or unsubscribes from changes of an OPC item.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping"/> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe"/>
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations"/> are affected; other mappings are ignored.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Subscribe(System.Boolean,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
            <summary>
            Executes the "Subscribe" operation on given mappings.
            </summary>
            <param name="active"><c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
            <param name="mappings">The mappings to be operated upon.</param>
            <remarks>
            The "Subscribe" operation subscribes to or unsubscribes from changes of an OPC item.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping"/> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe"/>
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations"/> are affected; other mappings are ignored.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Write">
            <summary>
            Executes the "Write" operation on all mappings in this mapper.
            </summary>
            <remarks>
            The "Write" operation writes a value from the mapping source into an OPC item.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping"/> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write"/>
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations"/> are affected; other mappings are ignored.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Write(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
            <summary>
            Executes the "Write" operation on given mappings.
            </summary>
            <param name="mappings">The mappings to be operated upon.</param>
            <remarks>
            The "Write" operation writes a value from the mapping source into an OPC item.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping"/> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write"/>
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations"/> are affected; other mappings are ignored.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreateFolderMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderAttribute)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateFolderMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderAttribute)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreateFolderSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateFolderSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreateItemMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateItemMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreateItemSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateItemSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreatePropertyMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreatePropertyMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreatePropertySource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreatePropertySource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Serialize">
            <summary>
            Synchronizes access to subscription counts.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.GetLicensedClient">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext">
            <summary>
            A context for OPC-DA client operations.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper)">
            <summary>
            Initializes a new instance of the operation context for a given client mapper.
            </summary>
            <param name="clientMapper">The client mapper to which this operation context belongs.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.ClientMapper">
            <summary>
            The client mapper to which this operation context belongs.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.GetPropertyDictionary">
            <summary>
            A dictionary of OPC-DA property mappings registered to the Get operation.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.ReadItemDictionary">
            <summary>
            A dictionary of OPC-DA item mappings registered to the Read operation.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.SubscribeItemDictionary">
            <summary>
            A dictionary of OPC-DA item mappings registered to the Subscribe operation.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.UnsubscribeItemDictionary">
            <summary>
            A dictionary of OPC-DA item mappings registered to the Unsubscribe operation.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.WriteItemDictionary">
            <summary>
            A dictionary of OPC-DA item mappings registered to the Write operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterGetProperty(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping)">
            <summary>
            Registers a given OPC-DA property mapping to a Get operation.
            </summary>
            <param name="clientPropertyMapping">A client mapping for an OPC Data Access property.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterReadItem(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping)">
            <summary>
            Registers a given OPC-DA item mapping to a Read operation.
            </summary>
            <param name="clientItemMapping">A client mapping for an OPC Data Access item.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterSubscribeItem(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping)">
            <summary>
            Registers a given OPC-DA item mapping to a Subscribe operation.
            </summary>
            <param name="clientItemMapping">A client mapping for an OPC Data Access item.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterUnsubscribeItem(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping)">
            <summary>
            Registers a given OPC-DA item mapping to a Unsubscribe operation.
            </summary>
            <param name="clientItemMapping">A client mapping for an OPC Data Access item.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterWriteItem(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping)">
            <summary>
            Registers a given OPC-DA item mapping to a Write operation.
            </summary>
            <param name="clientItemMapping">A client mapping for an OPC Data Access item.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension">
            <summary>
            Extension methods on <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper"/> objects. A static class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.GetTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.String,System.Boolean)">
             <overloads>
             <summary>
             Executes the "Get" operation on members of given target object.
             </summary>
             <remarks>
             The "Get" operation obtains value of an OPC property and stores it into the mapping source.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping"/> are affected; other mappings are ignored.
             </remarks>
             </overloads>
            
             <param name="clientMapper">The client mapper object that will perform the operation.</param>
             <param name="targetObject">The object being targeted.</param>
             <param name="mappingTag">The operation will be performed only on mappings tagged with this mapping tag.</param>
             <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
             <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.GetTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Predicate{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
            <param name="clientMapper">The client mapper object that will perform the operation.</param>
            <param name="targetObject">The object being targeted.</param>
            <param name="mappingTagsPredicate">The operation will be performed only on mappings whose mapping tags satisfy this 
            predicate.</param>
            <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.GetTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Boolean)">
            <param name="clientMapper">The client mapper object that will perform the operation.</param>
            <param name="targetObject">The object being targeted.</param>
            <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.ReadTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.String,System.Boolean)">
             <overloads>
             <summary>
             Executes the "Read" operation on members of given target object.
             </summary>
             <remarks>
             The "Read" operation reads a value of an OPC item and stores it into the mapping source.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping"/> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read"/>
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations"/> are affected; other mappings are ignored.
             </remarks>
             </overloads>
            
             <param name="clientMapper">The client mapper object that will perform the operation.</param>
             <param name="targetObject">The object being targeted.</param>
             <param name="mappingTag">The operation will be performed only on mappings tagged with this mapping tag.</param>
             <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
             <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.ReadTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Predicate{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
            <param name="clientMapper">The client mapper object that will perform the operation.</param>
            <param name="targetObject">The object being targeted.</param>
            <param name="mappingTagsPredicate">The operation will be performed only on mappings whose mapping tags satisfy this 
            predicate.</param>
            <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.ReadTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Boolean)">
            <param name="clientMapper">The client mapper object that will perform the operation.</param>
            <param name="targetObject">The object being targeted.</param>
            <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.SubscribeTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Boolean,System.String,System.Object,System.Boolean)">
             <overloads>
             <summary>
             Executes the "Subscribe" operation on members of given target object.
             </summary>
             <remarks>
             The "Subscribe" operation subscribes to or unsubscribes from changes of an OPC item.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping"/> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe"/>
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations"/> are affected; other mappings are ignored.
             </remarks>
             </overloads>
            
             <param name="clientMapper">The client mapper object that will perform the operation.</param>
             <param name="active"><c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
             <param name="targetObject">The object being targeted.</param>
             <param name="mappingTag">The operation will be performed only on mappings tagged with this mapping tag.</param>
             <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
             <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.SubscribeTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Boolean,System.Predicate{System.Collections.Generic.IEnumerable{System.String}},System.Object,System.Boolean)">
            <param name="clientMapper">The client mapper object that will perform the operation.</param>
            <param name="active"><c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
            <param name="mappingTagsPredicate">The operation will be performed only on mappings whose mapping tags satisfy this 
            predicate.</param>
            <param name="targetObject">The object being targeted.</param>
            <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.SubscribeTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Boolean,System.Object,System.Boolean)">
            <param name="clientMapper">The client mapper object that will perform the operation.</param>
            <param name="active"><c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
            <param name="targetObject">The object being targeted.</param>
            <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.WriteTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.String,System.Boolean)">
             <overloads>
             <summary>
             Executes the "Write" operation on members of given target object.
             </summary>
             <remarks>
             The "Write" operation writes a value from the mapping source into an OPC item.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping"/> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write"/>
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations"/> are affected; other mappings are ignored.
             </remarks>
             </overloads>
            
             <param name="clientMapper">The client mapper object that will perform the operation.</param>
             <param name="targetObject">The object being targeted.</param>
             <param name="mappingTag">The operation will be performed only on mappings tagged with this mapping tag.</param>
             <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
             <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.WriteTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Predicate{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
            <param name="clientMapper">The client mapper object that will perform the operation.</param>
            <param name="targetObject">The object being targeted.</param>
            <param name="mappingTagsPredicate">The operation will be performed only on mappings whose mapping tags satisfy this 
            predicate.</param>
            <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.WriteTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Boolean)">
            <param name="clientMapper">The client mapper object that will perform the operation.</param>
            <param name="targetObject">The object being targeted.</param>
            <param name="recurse"><c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.NamespaceDoc">
            <summary>
            This namespace contains extension classes used for live mapping of OPC Data Access sources to targets.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.NamespaceDoc">
            <summary>
            This namespace contains classes used for live mapping of OPC Data Access sources to targets.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientItemMapping_MappingSource_CurrentlySubscribed">
            <summary>
              Looks up a localized string similar to Cannot change the mapping source of the OPC Data Access item mapping when currently subscribed..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_ItemMissingGroupParameters">
            <summary>
              Looks up a localized string similar to The data access item mapping cannot participate in Subscribe operation, because it contains no group parameters. If you are using attribute-based mapping, you might be missing DASubscriptionAttribute. If you do not want the mapping participate in Subscribe operation, you can exclude it using the Operations member of the mapping (or Operations argument of DAItemAttribute). This error should not happen unless you explicitly specify the values in mapping context, because the default mapping context contains de [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_ItemMissingNodeDescriptor">
            <summary>
              Looks up a localized string similar to The member cannot be mapped as OPC data access item, because no node descriptor has been specified in the mapping context. You might be missing the DANodeAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_ItemMissingReadParameters">
            <summary>
              Looks up a localized string similar to The data access item mapping cannot participate in Read operation, because it contains no read parameters. If you are using attribute-based mapping, you might be missing DAReadAttribute. If you do not want the mapping participate in Read operation, you can exclude it using the Operations member of the mapping (or Operations argument of DAItemAttribute). This error should not happen unless you explicitly specify the values in mapping context, because the default mapping context contains default read paramete [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_ItemMissingServerDescriptor">
            <summary>
              Looks up a localized string similar to The member cannot be mapped as OPC data access item, because no server descriptor has been specified in the mapping context. You might be missing the ServerAttribute, or forgot to specify the server descriptor in the mapping context template in the mapper..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_PropertyMissingNodeDescriptor">
            <summary>
              Looks up a localized string similar to The member cannot be mapped as OPC data access property, because no node descriptor has been specified in the mapping context. You might be missing the NodeAttribute, or forgot to specify the node descriptor in the mapping context template in the mapper..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_PropertyMissingServerDescriptor">
            <summary>
              Looks up a localized string similar to The member cannot be mapped as OPC data access property, because no server descriptor has been specified in the mapping context. You might be missing the ServerAttribute, or forgot to specify the server descriptor in the mapping context template in the mapper..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_ImproperCombinationOfMappings">
            <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered an improper combination of Vtq, Value, Timestamp and Quality mappings for a Write operation on an item source..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_MoreThanOneQualityMapping">
            <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered more than one mapping of Quality kind for a Write operation on an item source..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_MoreThanOneTimestampMapping">
            <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered more than one mapping of Timestamp or TimestampLocal kind for a Write operation on an item source..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_MoreThanOneValueMapping">
            <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered more than one mapping of Value kind for a Write operation on an item source..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_MoreThanOneVtqMapping">
            <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered more than one mapping of Vtq kind for a Write operation on an item source..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAItemMapping_SetResult_DAVtqResult_LinkingTarget_Null">
            <summary>
              Looks up a localized string similar to Internal error. Null linking target while setting VTQ result in OPC-DA item mapping..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAItemMapping_SetResult_OperationResult_LinkingTarget_Null">
            <summary>
              Looks up a localized string similar to Internal error. Null linking target while setting operation result in OPC-DA item mapping..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_DeferredMapNode_NotConfigured">
            <summary>
              Looks up a localized string similar to The current OPC-DA mapper is not configured to support deferred node mapping..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_ObtainItemVtq_QualityIsNull">
            <summary>
              Looks up a localized string similar to The Quality mapping has given a null reference. In client mapping, this error is issued during the Write operation. In server mapping, this error is issued during the Read operation..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_ObtainItemVtq_TimestampIsNull">
            <summary>
              Looks up a localized string similar to The Timestamp mapping has given a null reference. In client mapping, this error is issued during the Write operation. In server mapping, this error is issued during the Read operation..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_ObtainItemVtq_TimestampLocalIsNull">
            <summary>
              Looks up a localized string similar to The TimestampLocal mapping has given a null reference. In client mapping, this error is issued during the Write operation. In server mapping, this error is issued during the Read operation..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_ObtainVtq_VtqIsNull">
            <summary>
              Looks up a localized string similar to The Vtq mapping has given a null reference. In client mapping, this error is issued during the Write operation. In server mapping, this error is issued during the Read operation..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingContext_ExpandNodeTemplate_Errors">
            <summary>
              Looks up a localized string similar to {0} error(s) occurred while expanding an OPC-DA node path or item ID template &quot;{1}&quot;. Unexpanded macro(s): {2}..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAFolderAttribute_Precludes_DAItemAttribute">
            <summary>
              Looks up a localized string similar to DAFolderAttribute cannot be combined with DAItemAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAFolderAttribute_Precludes_DAMemberAttribute">
            <summary>
              Looks up a localized string similar to DAFolderAttribute cannot be combined with DAMemberAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAFolderAttribute_Precludes_DAPropertyAttribute">
            <summary>
              Looks up a localized string similar to DAFolderAttribute cannot be combined with DAPropertyAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAFolderAttribute_Precludes_MetaMemberAttribute">
            <summary>
              Looks up a localized string similar to DAFolderAttribute cannot be combined with MetaMemberAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAItemAttribute_Precludes_DAMemberAttribute">
            <summary>
              Looks up a localized string similar to DAItemAttribute cannot be combined with DAMemberAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAItemAttribute_Precludes_DAPropertyAttribute">
            <summary>
              Looks up a localized string similar to DAItemAttribute cannot be combined with DAPropertyAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAItemAttribute_Precludes_MetaMemberAttribute">
            <summary>
              Looks up a localized string similar to DAItemAttribute cannot be combined with MetaMemberAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAMemberAttribute_Precludes_MetaMemberAttribute">
            <summary>
              Looks up a localized string similar to DAMemberAttribute cannot be combined with MetaMemberAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DANodeAttribute_Precludes_DAMemberAttribute">
            <summary>
              Looks up a localized string similar to DANodeAttribute cannot be combined with DAMemberAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DANodeAttribute_Precludes_MetaMemberAttribute">
            <summary>
              Looks up a localized string similar to DANodeAttribute cannot be combined with MetaMemberAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAPropertyAttribute_Precludes_DAMemberAttribute">
            <summary>
              Looks up a localized string similar to DAPropertyAttribute cannot be combined with DAMemberAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAPropertyAttribute_Precludes_MetaMemberAttribute">
            <summary>
              Looks up a localized string similar to DAPropertyAttribute cannot be combined with MetaMemberAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAPropertyMapping_SetResult_ValueResult_LinkingTarget_Null">
            <summary>
              Looks up a localized string similar to Internal error. Null linking target while setting value result in OPC-DA property mapping..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource">
            <summary>
            A client mapping source that represents OPC Data Access item.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
            <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors, and subscription (OPC group)
            parameters.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors, and read parameters.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors, subscription (OPC group) and
            read parameters.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.op_Equality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.op_Inequality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.ItemDescriptor">
            <summary>
            The OPC item involved in the operation.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.GroupParameters">
            <summary>
            An object containing subscription parameters, such as the requested update rate.
            </summary>
            <remarks>Can be null as long as the source does not participate in any subscription operation.</remarks> 
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.ReadParameters">
            <summary>
            The read parameters (such as data source or value age).
            </summary>
            <remarks>Can be null as long as the source does not participate in any subscription operation.</remarks> 
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.SubscriptionCount">
            <summary>
            Gets the number of subscriptions tied to this source.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.Equals(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.Mappings">
            <summary>
            The mappings associated with this mapping source.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertySource">
            <summary>
            A client mapping source that represents OPC Data Access property (on an OPC item).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertySource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>
            Initializes a new instance of the class, with given OPC server and property descriptors.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The descriptor of the OPC property involved in the operation.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping">
            <summary>
            A client mapping for OPC Data Access items.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.DefaultOperations">
            <summary>
            The default item mapping operations. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.All"/>'
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping,System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations)">
            <summary>
            Initializes a new instance of the class, with given parent mapping, OPC item type, mapping kind, and mapping 
            operations in which this mapping should participate.
            </summary>
            <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
            <param name="itemType">The type of OPC item.</param>
            <param name="kind">Specifies how the OPC Data Access item will be mapped.</param>
            <param name="operations">The mapping operations in which this mapping will participate.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.#ctor(System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations)">
            <summary>
            Initializes a new instance of the class, with given OPC item type, mapping kind, and mapping operations
            in which this mapping should participate.
            </summary>
            <param name="itemType">The type of OPC item.</param>
            <param name="kind">Specifies how the OPC Data Access item will be mapped.</param>
            <param name="operations">The mapping operations in which this mapping will participate.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.#ctor(System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind)">
            <summary>
            Initializes a new instance of the class, with given OPC item type, and mapping kind.
            </summary>
            <param name="itemType">The type of OPC item.</param>
            <param name="kind">Specifies how the OPC Data Access item will be mapped.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the class, with given OPC item type.
            </summary>
            <param name="itemType">The type of OPC item.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.MappingSource">
            <inheritdoc cref="P:OpcLabs.BaseLib.LiveMapping.AbstractMapping.MappingSource"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations">
            <summary>
            The mapping operations in which this mapping will participate.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Subscribed">
            <summary>
            Determines whether this mapping is currently subscribed.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Get(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Get(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Read(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Read(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Subscribe(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext,System.Boolean)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Subscribe(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext,System.Boolean)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Write(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Write(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping">
            <summary>
            A client mapping for OPC Data Access properties.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping,System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind)">
            <summary>
            Initializes a new instance of the class, with given parent mapping, OPC property type, and mapping kind.
            </summary>
            <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
            <param name="propertyType">The type of OPC property.</param>
            <param name="kind">Specifies how the OPC Data Access property will be mapped.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.#ctor(System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind)">
            <summary>
            Initializes a new instance of the class, with given OPC property type, and mapping kind.
            </summary>
            <param name="propertyType">The type of OPC property.</param>
            <param name="kind">Specifies how the OPC Data Access property will be mapped.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the class, with given OPC property type.
            </summary>
            <param name="propertyType">The type of OPC property.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.Get(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Get(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.Read(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Read(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.Subscribe(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext,System.Boolean)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Subscribe(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext,System.Boolean)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.Write(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Write(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.NamespaceDoc">
            <summary>
            This namespace contains internal classes for navigation in OPC Data Access  (OPC-DA).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode.op_Equality(OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode,OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode.op_Inequality(OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode,OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode.Equals(OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNode.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Navigation.Internal.DAAddressSpaceNavigable">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DANodeKind">
            <exclude/>
            <summary>
            Provides classification of OPC Data Access (OPC-DA) nodes.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DANodeKind.None">
            <summary>
            The node kind is not set.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DANodeKind.Leaf">
            <summary>
            The node is a leaf.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DANodeKind.Branch">
            <summary>
            The node is a branch.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DANodeKind.Root">
            <summary>
            The node is a root.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.Implementation.NamespaceDoc">
            <summary>
            This namespace defines implementation classes for an object space for OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.Implementation.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.Implementation.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.Implementation.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.Implementation.Resource1.DAServerBranchConverter_ConvertTo_NotADAServerBranch">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a DAServerBranch, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.Implementation.Resource1.DAServerLeafConverter_ConvertTo_NotADAServerLeaf">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a DAServerLeaf, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.NamespaceDoc">
            <summary>
            This namespace defines an object space for OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafReadEventArgs">
            <exclude/>
            <summary>
            Provides data for OPC Data Access (OPC-DA) leaf read events.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafReadEventArgs.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafReadEventArgs.#ctor(OpcLabs.EasyOpc.DataAccess.DAVtq,System.Int32)">
            <summary>
            Initializes a new instance of the class with given value/timestamp/quality and error code.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafReadEventArgs.ErrorCode">
            <summary>
            The error code that is the result of the OPC read.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafReadEventArgs.Vtq">
            <summary>
            The value/timestamp/quality that is the result of the OPC read.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafReadEventArgs.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>
            Infrastructure.
            </summary>
            <param name="vtq">Vtq to be checked.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs">
            <exclude/>
            <summary>
            Provides data for OPC Data Access (OPC-DA) leaf write events.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.#ctor(OpcLabs.EasyOpc.DataAccess.DAVtq,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the class with given value/timestamp/quality, presence flags and error code.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.#ctor(System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the class with given value and error code.
            </summary>
            <remarks>The timestamp and quality are not present.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.ErrorCode">
            <summary>
            The error code that is the result of the OPC write.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.QualityPresent">
            <summary>
            Determines whether the quality is present in the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.Vtq"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.TimestampPresent">
            <summary>
            Determines whether the timestamp is present in the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.Vtq"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.Vtq">
            <summary>
            The value/timestamp/quality that is the input of the OPC write.
            </summary>
            <remarks>
            The timestamp is present iff the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.TimestampPresent"/> is <c>true</c>.
            The quality is present iff the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.QualityPresent"/> is <c>true</c>.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>
            Infrastructure.
            </summary>
            <param name="vtq">Vtq to be checked.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd">
            <exclude/>
            <summary>
            Represents a branch front-end in OPC Data Access (OPC-DA) address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
            <remarks>This constructor is needed for the designer.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd.#ctor(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd"/> object.</summary>
            <param name="branchFrontEnd">The OPC-DA branch front end object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class, with given branch name.
            </summary>
            <param name="name">The name of the branch.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd.Clone">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd.NodeKind">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.IDANode.NodeKind"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd.ValueEquals(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent">
            <exclude/>
            <summary>
            The OPC-DA component, i.e. the executive part of the OPC-DA server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.#ctor(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent"/> object.</summary>
            <param name="component">The OPC-DA component object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.ComponentBackEnd">
            <summary>
            The OPC-DA component back-end serving this component.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.Nodes">
            <summary>
            The OPC-DA address space nodes, starting from the root level.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.Root">
            <summary>
            The root node of the OPC-DA address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.CreateRoot">
            <summary>
            Creates the root node of the address space.
            </summary>
            <returns>Returns the root node created.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.ValueEquals(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.ShouldSerializeNodes">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAComponent.Nodes"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd">
            <exclude/>
            <summary>
            Represents a leaf front-end in OPC Data Access (OPC-DA) address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
            <remarks>This constructor is needed for the designer.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd.#ctor(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd"/> object.</summary>
            <param name="leafFrontEnd">The OPC-DA leaf front end object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class, with given leaf name.
            </summary>
            <param name="name">The name of the leaf.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd.Clone">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd.NodeKind">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.IDANode.NodeKind"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd.ValueEquals(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafFrontEnd"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch">
            <exclude/>
            <summary>
            Represents a branch in OPC Data Access (OPC-DA) address space of the OPC server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
            <remarks>This constructor is needed for the designer.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch.#ctor(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch"/> object.</summary>
            <param name="serverRoot">The OPC-DA server branch object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class, with given branch name.
            </summary>
            <param name="name">The name of the branch.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch.ValueEquals(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerBranch.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf">
            <exclude/>
            <summary>
            Represents a leaf in OPC Data Access (OPC-DA) address space of the OPC server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.#ctor">
            <summary>
            Initializes a new instance of the class with default values.
            </summary>
            <remarks>This constructor is needed for the designer.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.#ctor(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf"/> object.</summary>
            <param name="serverLeaf">The OPC-DA server leaf object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class, with given leaf name.
            </summary>
            <param name="name">The name of the leaf.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.#ctor(System.String,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>
            Initializes a new instance of the class, with given leaf name, and canonical data type.
            </summary>
            <param name="name">The name of the leaf.</param>
            <param name="canonicalDataType">The canonical data type of the leaf.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.#ctor(System.String,OpcLabs.BaseLib.ComInterop.VarType,OpcLabs.EasyOpc.DataAccess.DAAccessRight)">
            <summary>
            Initializes a new instance of the class, with given leaf name, canonical data type, and access rights.
            </summary>
            <param name="name">The name of the leaf.</param>
            <param name="canonicalDataType">The canonical data type of the leaf.</param>
            <param name="accessRights">The access rights of the leaf (e.g. readable, writable).</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.DefaultAccessRights">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.AccessRights"/> property. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.DAAccessRights.Both"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.DefaultCanonicalDataType">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.CanonicalDataType"/> property. Equals to <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.AccessRights">
            <summary>
            The access rights of this leaf (e.g. readable, writable).
            </summary>
            <remarks>
            <para>
            From OPC specification:
            "Indicates if this item is read only, write only or read/write. This is NOT related to security but rather to the 
            nature of the underlying hardware."</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.CanonicalDataType">
            <summary>
            The canonical data type of this leaf.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.IsClsCompliant">
            <summary>
            Determines whether the value type of the OPC leaf is CLS-compliant.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.LeafBackEnd">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectSpace.LeafFrontEnd.LeafBackEnd"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.ReadValue">
            <summary>
            The leaf value seen by OPC reads.
            </summary>
            <remarks>
            This property contains the initial read value, before the <see cref="E:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.Read"/> event is raised. If no event handler
            modifies the value, it becomes the final OPC read value.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.WriteValue">
            <summary>
            The leaf value modified by OPC writes.
            </summary>
            <remarks>
            The <see cref="E:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.Write"/> event is raised before this write value is set.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.Read">
            <summary>
            Raised to obtain the OPC read data.
            </summary>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.Write">
            <summary>
            Raised to provide the OPC write data.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.CheckCanonicalDataType(OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>
            Infrastructure. Checks the validity of the given canonical data type for this type of leaf.
            </summary>
            <param name="canonicalDataType">The canonical data type to be checked.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.CheckValue(System.Object)">
            <summary>
            Infrastructure. Checks the validity of the value for this type of leaf.
            </summary>
            <param name="value">The value to be checked.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.NewLeafReadEventArgs(System.Object,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality,System.Int32)">
            <summary>
            Instantiates arguments for an OPC-DA leaf read event.
            </summary>
            <param name="value">The initial read value.</param>
            <param name="timestamp">The initial read timestamp.</param>
            <param name="quality">The initial read quality.</param>
            <param name="errorCode">The initial read error code.</param>
            <returns>Returns the newly instantiated leaf read event arguments.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.NewLeafWriteEventArgs(System.Object,System.Boolean,System.DateTime,System.Boolean,OpcLabs.EasyOpc.DataAccess.DAQuality,System.Int32)">
            <summary>
            Instantiates arguments for an OPC-DA leaf write event.
            </summary>
            <param name="value">The write value.</param>
            <param name="timestampPresent">Indicates whether the timestamp is present.</param>
            <param name="timestamp">The write timestamp.</param>
            <param name="qualityPresent">Indicates whether the quality is present.</param>
            <param name="quality">The write quality.</param>
            <param name="errorCode">The initial write error code.</param>
            <returns>Returns the newly instantiated leaf write event arguments.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.OnLeafBackEndChange(OpcLabs.BaseLib.ObjectSpace.ILeafBackEnd)">
            <inheritdoc cref="M:OpcLabs.BaseLib.ObjectSpace.LeafFrontEnd.OnLeafBackEndChange(OpcLabs.BaseLib.ObjectSpace.ILeafBackEnd)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.RaiseRead(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafReadEventArgs)">
            <summary>
            Raises the <see cref="E:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.Read"/> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.RaiseWrite(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DALeafWriteEventArgs)">
            <summary>
            Raises the <see cref="E:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.Write"/> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.ValueEquals(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.ResetAccessRights">
            <summary>
            Reset the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.AccessRights"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.ShouldSerializeAccessRights">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.AccessRights"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.ResetCanonicalDataType">
            <summary>
            Reset the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.CanonicalDataType"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.ShouldSerializeCanonicalDataType">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerLeaf.CanonicalDataType"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot">
            <exclude/>
            <summary>
            Represents a root node in OPC Data Access (OPC-DA) address space of the OPC server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot.#ctor(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot"/> object.</summary>
            <param name="serverRoot">The OPC-DA server root object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot.IsRoot">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectSpace.Node.IsRoot"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot.Name">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectSpace.Node.Name"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot.NodeKind">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DABranchFrontEnd.NodeKind"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot.ValueEquals(OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.ObjectSpace.DAServerRoot.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.IDABranchBackEnd">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.IDAComponentBackEnd">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.IDALeafBackEnd">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.IDANode">
            <exclude/>
            <summary>
            An OPC-DA node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.ObjectSpace.IDANode.NodeKind">
            <summary>
            Determines whether the node is a leaf, branch, or a root.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.ObjectSpace.IDANodeBackEnd">
            <exclude/>
            <summary>
            A back-end to an OPC-DA node.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration">
            <summary>
            Allows static configuration of the EasyDAClient object.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.DefaultEnableNativeClient">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EnableNativeClient"/> static property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.DefaultEnableNetApiClient">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EnableNetApiClient"/> static property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.DefaultEnableServiceClient">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EnableServiceClient"/> static property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration)">
            <param name="clientConfiguration">Client configuration object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.AdaptableParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.AdaptableParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EnableNativeClient">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.EnableNativeClient"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EnableNetApiClient">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.EnableNetApiClient"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EnableServiceClient">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.EnableServiceClient"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ServiceProviderEndpointDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ServiceProviderEndpointDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.SharedInstance">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SharedInstance"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.SharedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SharedParameters"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.BeginInit">
            <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.BeginInit"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.EndInit">
            <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.EndInit"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.LogEntry">
            <summary>
            Raised for loggable entries originating in the OPC-DA client engine and the EasyDAClient component.
            </summary>
            <remarks>NOT YET IMPLEMENTED, I.E. IS NEVER ACTUALLY RAISED IN THIS VERSION!</remarks>  // TODO: implement
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.OpcLabs#EasyOpc#DataAccess#ComTypes#_EasyDAClientConfiguration#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientConfiguration.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ResetAdaptableParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.AdaptableParameters"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ShouldSerializeAdaptableParameters">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.AdaptableParameters"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ResetServiceProviderEndpointDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ServiceProviderEndpointDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ShouldSerializeServiceProviderEndpointDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ServiceProviderEndpointDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ResetSharedInstance">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.SharedInstance"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ShouldSerializeSharedInstance">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.SharedInstance"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ResetSharedParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.SharedParameters"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.ShouldSerializeSharedParameters">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientConfiguration.SharedParameters"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector">
            <summary>
            Describes how to select the <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector)">
            <param name="selector">Selector to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor(System.String)">
            <param name="differentiator"> An arbitrary string that differentiates the selected client from others with the 
            same parameters.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor(System.String,System.Boolean)">
            <param name="differentiator"> An arbitrary string that differentiates the selected client from others with the 
            same parameters.</param>
            <param name="isolated">Determines whether the client component selected should operate isolated from other client 
            components.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.Default">
            <summary>
            Default client selector.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.op_Equality(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.op_Inequality(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.Equals(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for classes that are used to pass arguments to OPC Data Access operations and obtain the operation results. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.Handle">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.HandleArguments.Handle"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.GroupParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.GroupParameters"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.ServerDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ServerDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.ItemDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ItemDescriptor"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.ServerDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ServerDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.ItemDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ItemDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.GroupParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.GroupParameters"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.ServerDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ServerDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.ItemDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ItemDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.Value">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.Value"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.SetValue(System.Object)">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.Value"/>
            <remarks>Intended for use from Visual Basic 6.0.</remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.ServerDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ServerDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.ItemDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ItemDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.Vtq">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.Vtq"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.NodeDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.NodeDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.ServerDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ServerDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.PropertyDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.PropertyDescriptor"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.ServerDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ServerDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.ItemDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ItemDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.ReadParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.ReadParameters"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.ToString(System.String,System.IFormatProvider)">
            <inheritdoc cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>
            <remarks><para>Due to overload conflict, the actual name of this method becomes ToString_2.</para></remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.ToString(System.String)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IFormattableExtension.ToString(System.IFormattable,System.String)"/>
            <remarks><para>Due to overload conflict, the actual name of this method becomes ToString_3.</para></remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.Diagnostics">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.Diagnostics"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.DiagnosticsCount">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.DiagnosticsCount"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.DiagnosticsSummary">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.DiagnosticsSummary"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.ErrorId">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.ErrorId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.ErrorMessage">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.ErrorMessage"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.ErrorMessageBrief">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.ErrorMessageBrief"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.Exception">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.Exception"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.NormalizedDiagnostics">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.NormalizedDiagnostics"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.NormalizedException">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.NormalizedException"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.State"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.Succeeded">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.Succeeded"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationResult.ThrowIfFailed"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.ThrowIfFailed">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.OperationResult.ThrowIfFailed"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.StatusInfo">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.StatusInfo"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.Vtq">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.Vtq"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.Diagnostics">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.Diagnostics"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.DiagnosticsCount">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.DiagnosticsCount"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.DiagnosticsSummary">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.DiagnosticsSummary"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.ErrorId">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.ErrorId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.ErrorMessage">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.ErrorMessage"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.ErrorMessageBrief">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.ErrorMessageBrief"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.Exception">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.Exception"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.NormalizedDiagnostics">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.NormalizedDiagnostics"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.NormalizedException">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.NormalizedException"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.Succeeded">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationEventArgs.Succeeded"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.MemberwiseClone">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.OperationEventArgs.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.ToLongString">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.OperationEventArgs.ToLongString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.Arguments">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Arguments"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.StatusInfo">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.StatusInfo"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.Vtq">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Vtq"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.State">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationArguments.State"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.MemberwiseClone">
            <inheritdoc cref="M:System.Object.MemberwiseClone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.SetState(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.OperationModel.ComTypes._OperationArguments.SetState(System.Object)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.ServerDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ServerDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.ItemDescriptor">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ItemDescriptor"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.GroupParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.GroupParameters"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.Formatting.DAVtqResultFormatter">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.Formatting.NamespaceDoc">
            <summary>
            This namespace provides classes and interfaces that provide formatting capabilities for OPC Data Access operation model.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.NamespaceDoc">
            <summary>
            This namespace contains classes that are used to pass arguments to OPC Data Access operations and obtain the operation results. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments">
            <summary>Holds an integer handle, and OPC group parameters, as arguments to some operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.#ctor(System.Int32,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.Object)">
            <summary>Initializes a new instance of the class, with the specified handle value, OPC group parameters, and a 
            user-defined state object.</summary>
            <param name="handle">A handle value.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.#ctor(System.Int32,OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
            <summary>Initializes a new instance of the class, with the specified handle value and OPC group parameters.</summary>
            <param name="handle">A handle value.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.#ctor(System.Int32,System.Int32,System.Single)">
            <summary>Initializes a new instance of the class, with the specified handle value, requested update rate, and percent 
            deadband.</summary>
            <param name="handle">A handle value.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the class, with the specified handle value and requested update rate.</summary>
            <param name="handle">A handle value.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments"/> object.</summary>
            <param name="args">The handle group arguments object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.DefaultGroupParameters">
            <summary>
            Default group parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="args1">First object to be compared.</param>
            <param name="args2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="args1">First object to be compared.</param>
            <param name="args2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.GroupParameters">
            <summary>Gets or sets the OPC group parameters that are an argument to the operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.Equals(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_DAHandleGroupArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAHandleGroupArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.ResetGroupParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.GroupParameters"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.ShouldSerializeGroupParameters">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments.GroupParameters"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments">
            <summary>Holds an OPC server and item descriptor, as arguments to some operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, and a 
            user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, and with a user-defined state object.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            and the OPC item specified by its ItemId and data type.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            and the OPC item specified by its ItemId.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/> object.</summary>
            <param name="args">The item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.DefaultItemDescriptor">
            <summary>
            Default item descriptor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.DefaultServerDescriptor">
            <summary>
            Default server descriptor.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="itemArguments1">First object to be compared.</param>
            <param name="itemArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="itemArguments1">First object to be compared.</param>
            <param name="itemArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ServerDescriptor">
            <summary>Gets or sets the OPC server descriptor that is an argument to the operation.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ItemDescriptor">
            <summary>Gets or sets the OPC item descriptor that is an argument to the operation.</summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ToString">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_DAItemArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.Equals(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ResetItemDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ItemDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ShouldSerializeItemDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ItemDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ResetServerDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ServerDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ShouldSerializeServerDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.ServerDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments">
            <summary>Holds an OPC server and item descriptor, and OPC group parameters, as arguments to some operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, OPC group
            parameters, and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Single,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, the OPC group parameters specified by requested update rate and 
            percent deadband, and with a user-defined state object.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, the OPC group parameters specified by requested update rate, 
            and with a user-defined state object.</summary>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.#ctor(System.String,System.String,System.String,System.Int32,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId, the OPC group parameters specified by requested update rate, 
            and with a user-defined state object.</summary>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>
            Initializes a new instance of the class, with the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/>,
            and default group parameters.
            </summary>
            <param name="args">The item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments"/> object.</summary>
            <param name="args">The item group arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.DefaultGroupParameters">
            <summary>
            Default group parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.GroupParameters">
            <summary>Gets or sets the OPC group parameters that are an argument to the operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_DAItemGroupArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemGroupArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.Equals(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.ResetGroupParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.GroupParameters"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.ShouldSerializeGroupParameters">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.GroupParameters"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments">
            <summary>Holds an OPC server and item descriptor, and OPC group parameters, as arguments to some operation.</summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.TimeMeasurements.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.TimeMeasurements.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,System.Object,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, data value, 
            and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, data value, 
            and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Object,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, with the data value, and with a user-defined state object.
            </summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="value">The value to be written.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, and with the data value.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>
            Initializes a new instance of the class, with the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/>,
            and a null value.
            </summary>
            <param name="args">The item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments"/> object.</summary>
            <param name="args">The item value arguments object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="args1">First object to be compared.</param>
            <param name="args2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="args1">First object to be compared.</param>
            <param name="args2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.Value">
            <summary>Gets or sets the data value that is an argument to the operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.SetValue(System.Object)">
            <summary>
            Sets the data value that is an argument to the operation.
            </summary>
            <remarks>
            <para>
            Intended for certain COM callers. You can simply use the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.Value"/> property setter in .NET instead.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_DAItemValueArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemValueArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.Equals(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.CheckValue(System.Object)">
            <summary>
            Infrastructure.
            </summary>
            <param name="value">Value to be checked.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments">
            <summary>Holds an OPC server and item descriptor, and a value/timestamp/quality (<see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/>), as arguments 
            to some operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAVtq,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, 
            value/timestamp/quality, and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="vtq">The object containing the value, timestamp and quality to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, 
            and value/timestamp/quality.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="vtq">The object containing the value, timestamp and quality to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Object,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, with the data value, timestamp and quality, and with a 
            user-defined state object.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="value">The value to be written.</param>
            <param name="timestamp">The timestamp to be written.</param>
            <param name="quality">The quality to be written.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.#ctor(System.String,System.String,System.String,System.Object,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId, and with the data value, timestamp and quality.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
            <param name="timestamp">The timestamp to be written.</param>
            <param name="quality">The quality to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>
            Initializes a new instance of the class, with the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/>,
            and a null value-timestamp-quality.
            </summary>
            <param name="args">The item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments"/> object.</summary>
            <param name="args">Item VTQ arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.DefaultVtq">
            <summary>
            Default Vtq (value-timestamp-quality).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="args1">First object to be compared.</param>
            <param name="args2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="args1">First object to be compared.</param>
            <param name="args2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.Vtq">
            <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp and quality) that is an argument to the operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_DAItemVtqArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAItemVtqArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>
            Infrastructure.
            </summary>
            <param name="vtq">Vtq to be checked.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.Equals(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.ResetVtq">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.Vtq"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.ShouldSerializeVtq">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments.Vtq"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments">
            <summary>Holds an OPC server, OPC node and OPC property descriptors, as arguments to some operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server, node and property descriptors, 
            and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The OPC property involved in the operation.</param>
            <param name="state">The state object (can be any value supplied by your code).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Initializes a new instance of the class, with the specified OPC server, node and property descriptors.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The OPC item and property involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.#ctor(System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId, the OPC property specified by its property Id, and with a user-defined state 
            object.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="propertyId">Contains Id of the OPC property.</param>
            <param name="state">The state object (can be any value supplied by your code).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.#ctor(System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId, and the OPC property specified by its property Id.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="propertyId">Contains Id of the OPC property.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments"/> object.</summary>
            <param name="args">The item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.DefaultNodeDescriptor">
            <summary>
            Default node descriptor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.DefaultPropertyDescriptor">
            <summary>
            Default property descriptor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.DefaultServerDescriptor">
            <summary>
            Default server descriptor.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="propertyArguments1">First object to be compared.</param>
            <param name="propertyArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="propertyArguments1">First object to be compared.</param>
            <param name="propertyArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.NodeDescriptor">
            <summary>Gets or sets the OPC node descriptor that is an argument to the operation.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ServerDescriptor">
            <summary>Gets or sets the OPC server descriptor that is an argument to the operation.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.PropertyDescriptor">
            <summary>Gets or sets the OPC property descriptor that is an argument to the operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_DAPropertyArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAPropertyArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ResetNodeDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.NodeDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ShouldSerializeNodeDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.NodeDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ResetPropertyDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.PropertyDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ShouldSerializePropertyDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.PropertyDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ResetServerDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ServerDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ShouldSerializeServerDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.ServerDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments">
            <summary>
            Holds information necessary to read an OPC item, such OPC server and item descriptor, and read parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, and 
            default read parameters.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, and read 
            parameters.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, a read 
            parameters, and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, a value age, and with a user-defined state object.</summary>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, and a value age.</summary>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId, and a value age.</summary>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>
            Initializes a new instance of the class, with the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/>,
            and default read parameters.
            </summary>
            <param name="args">The item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments"/> object.</summary>
            <param name="args">The read item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.DefaultReadParameters">
            <summary>
            Default read parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="itemArguments1">First object to be compared.</param>
            <param name="itemArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="itemArguments1">First object to be compared.</param>
            <param name="itemArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.ReadParameters">
            <summary>
            Contains parameters for OPC read operations, such as the data source or value age.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.DeviceSource.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.Equals(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_DAReadItemArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAReadItemArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.ResetReadParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.ReadParameters"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.ShouldSerializeReadParameters">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.ReadParameters"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments">
            <summary>Holds an OPC server and item descriptor, and OPC group parameters, and possibly a callback method,
            as arguments to subscription operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, OPC group
            parameters, user-defined state object, and a callback method.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
              notifications.</param>
            <remarks>If <paramref name="callback"/> is a null reference, only the notification events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.Object)">
            <summary>Initializes a new instance of the class, with the specified OPC server and item descriptors, OPC group
            parameters, and a user-defined state object.</summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Single,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, the OPC group parameters specified by requested update rate and 
            percent deadband, user-defined state object, and with a callback method.</summary>
            <param name="machineName">Name of the machine. 
              Determines the computer on which the OPC server is located. May be an empty 
              string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
              by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
              the server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update.</param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
              notifications.</param>
            <remarks>If <paramref name="callback"/> is a null reference, only the notification events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Single,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, the OPC group parameters specified by requested update rate and 
            percent deadband, and with a user-defined state object.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, the OPC group parameters specified by requested update rate, 
            user-defined state object, and with a callback method.</summary>
            <param name="machineName">Name of the machine. 
              Determines the computer on which the OPC server is located. May be an empty 
              string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
              by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
              the server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
              notifications.</param>
            <remarks>If <paramref name="callback"/> is a null reference, only the notification events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId and data type, the OPC group parameters specified by requested update rate, 
            and with a user-defined state object.</summary>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(System.String,System.String,System.String,System.Int32,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId, the OPC group parameters specified by requested update rate, 
            user-defined state object, and with a callback method.</summary>
            <param name="machineName">Name of the machine. 
              Determines the computer on which the OPC server is located. May be an empty 
              string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
              by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any value supplied by your code); available in event 
              notifications.</param>
            <remarks>If <paramref name="callback"/> is a null reference, only the notification events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(System.String,System.String,System.String,System.Int32,System.Object)">
            <summary>Initializes a new instance of the class, with the OPC server specified by machine name and server class,
            the OPC item specified by its ItemId, the OPC group parameters specified by requested update rate, 
            and with a user-defined state object.</summary>
            <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
            <summary>Initializes a new <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/> object from 
            <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments"/>, and no callback method.</summary>
            <param name="args">The item group arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler)">
            <summary>Initializes a new <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/> object from 
            <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments"/>, and with specified callback method.</summary>
            <param name="args">The item group arguments object to be copied from.</param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <remarks>If <paramref name="callback"/> is a null reference, only the notification events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/> object.</summary>
            <param name="args">The item subscription arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.Default">
            <summary>
            Default item subscription arguments for EasyOPC.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="itemSubscriptionArguments1">First object to be compared.</param>
            <param name="itemSubscriptionArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="itemSubscriptionArguments1">First object to be compared.</param>
            <param name="itemSubscriptionArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.Callback">
            <summary>A callback method to be invoked for each significant monitored item change.</summary>
            <value>If this is a null reference, only the notification events are generated, but no callback method is invoked.
            </value>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_EasyDAItemSubscriptionArguments#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemSubscriptionArguments.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.Equals(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs">
            <summary>Provides data for the EasyDAClient.ItemChanged event.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
            <remarks>
            Creates a new, empty instance.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Initializes a new instance of the class, with a copy of another instance.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments)">
            <summary>Initializes a new instance of the class with given <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="eventArgs1">First object to be compared.</param>
            <param name="eventArgs2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="eventArgs1">First object to be compared.</param>
            <param name="eventArgs2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.op_Explicit(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)~OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult">
            <summary>
            Converts event arguments to a corresponding result object, <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/>. 
            </summary>
            <param name="eventArgs">The event arguments to be converted.</param>
            <returns>The result object that corresponds to the event arguments. <b>null</b> if the event arguments
            passed in were <b>null</b>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.ToDAVtqResult(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Converts event arguments to a corresponding result object, <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/>. 
            </summary>
            <param name="eventArgs">The event arguments to be converted.</param>
            <returns>The result object that corresponds to the event arguments. <b>null</b> if the event arguments
            passed in were <b>null</b>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.DefaultArguments">
            <summary>
            Default (item subscription) arguments.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Arguments">
            <summary>
            Holds arguments that were used to subscribe to an item in an OPC-DA server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.StatusInfo">
            <summary>
            Status information corresponding to the contents of the event arguments.
            </summary>
            <value>Contains <see cref="F:OpcLabs.BaseLib.Data.StatusInfo.Unknown"/> when the event arguments represent 
            a failure (non-null <see cref="T:System.Exception"/>). When the event arguments represent a success, the status
            information is determined from the <c>Quality</c> of the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Vtq"/>.
            </value>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Vtq">
            <summary>Gets the current (new) <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp and quality) of the OPC item.
            Null reference when <see cref="T:System.Exception"/> is not null.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_EasyDAItemChangedEventArgs#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._EasyDAItemChangedEventArgs.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>
            Infrastructure.
            </summary>
            <param name="vtq">Vtq to be checked.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Equals(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.ResetArguments">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Arguments"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.ShouldSerializeArguments">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs.Arguments"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult">
            <summary>Holds result of an operation in form of a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp, and quality).</summary>
            <remarks>
            <para>The result is successful if the <see cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.Exception"/> is a null reference. Otherwise, this 
            property contains information about the reason of the failure.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.#ctor(OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult)">
            <summary>
            Initializes a new instance of the class, with a copy of another instance.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.#ctor(System.Object,OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>Initializes a new instance of the class, with given state object and <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/>.</summary>
            <param name="state">The state object specified when the operation was invoked.</param>
            <param name="vtq">The <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp and quality) that is a successful result of the 
            operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.#ctor(System.Object,System.Exception)">
            <inheritdoc cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.#ctor(System.Object,System.Exception,OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>Initializes a new instance of the class, with given state object, exception, and 
            <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/>.</summary>
            <param name="state">The state object specified when the operation was invoked.</param>
            <param name="exception">The reason of the failure of the operation.</param>
            <param name="vtq">The <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp and quality) that is a successful result of the 
            operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.op_Equality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult,OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="vtqResult1">First object to be compared.</param>
            <param name="vtqResult2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.op_Inequality(OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult,OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="vtqResult1">First object to be compared.</param>
            <param name="vtqResult2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.StatusInfo">
            <summary>
            Status information.
            </summary>
            <remarks>When the result represents a failure, the status information is 
            <see cref="F:OpcLabs.BaseLib.Data.StatusInfo.Unknown"/>. When the result represents a success, the status information
            depends on the quality of the <see cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.Vtq"/>.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.Vtq">
            <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> (value, timestamp and quality) that is a successful result of the 
            operation.
            </summary>
            <value>Contains a null reference, when <see cref="T:System.Exception"/> is not null. Contains a non-null object when
            <see cref="T:System.Exception"/> is null.</value>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.OpcLabs#EasyOpc#DataAccess#OperationModel#ComTypes#_DAVtqResult#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.OperationModel.ComTypes._DAVtqResult.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.Formatter">
            <inheritdoc cref="P:OpcLabs.BaseLib.OperationModel.OperationResult.Formatter"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.CheckVtq(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>
            Infrastructure.
            </summary>
            <param name="vtq">Vtq to be checked.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.Equals(OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable">
            <summary>
            Static class with methods to create <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1"/> in various ways.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\ReactiveDocExamples\DataAccess\_DAItemChangedObservable\Subscribe.Main1.cs" 
                lang="C#"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\ReactiveDocExamples\DataAccess\_DAReactive\Composition.Pipeline.cs" 
                lang="C#"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
            <summary>
            Creates a new item change observable for OPC item given by <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments"/> object.
            </summary>
            <param name="args">Contains an OPC server and item descriptors, and OPC group parameters.</param>
            <returns>Returns an observable for changes in the given OPC item.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector"/> selector will be used for OPC Data Access operations.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments})">
            <summary>
            Creates a new item change observable for multiple OPC items given by <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments"/> objects.
            </summary>
            <param name="arguments">For each OPC item, contains its OPC server and item descriptors, and OPC group parameters.
            </param>
            <returns>Returns an observable for changes in the given OPC item.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector"/> selector will be used for OPC Data Access operations.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.Object)">
            <summary>
            Creates a new item change observable for OPC item given by OPC server and item descriptors, and OPC group parameters
            object.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item to be subscribed to.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="state">The state object (can be any object supplied by your code); available in notifications. </param>
            <returns>Returns an observable for changes in the given OPC item.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector"/> selector will be used for OPC Data Access operations.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates a new item change observable for OPC item, specifying machine name, server class, item ID, requested update 
            rate, and percent deadband.
            </summary>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <returns>Returns an observable for changes in the given OPC item.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector"/> selector will be used for OPC Data Access operations.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(System.String,System.String,System.String,System.Int32,System.Single)">
            <summary>
            Creates a new item change observable for OPC item, specifying machine name, server class, item ID, requested update 
            rate, and percent deadband.
            </summary>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update</param>
            <returns>Returns an observable for changes in the given OPC item.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector"/> selector will be used for OPC Data Access operations.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1">
            <summary>
            Push-based notification provider (observable) for changes in OPC Data Access item(s).
            </summary>
            <typeparam name="TValue">The type of OPC values provided.</typeparam>
            <remarks>
            The notifications will contain <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1"/> for each OPC item change. All OPC items in one
            <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1"/> must be assignable to the <typeparamref name="TValue"/> type.
            Typically, you will create the observable for items of the same type. You can also choose a common denominator type;
            for example, if you use <see cref="T:System.Object"/> for <typeparamref name="TValue"/>, you can use it in a type-less manner).
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\ReactiveDocExamples\DataAccess\_DAItemChangedObservable\Subscribe.Main1.cs" 
                lang="C#"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\ReactiveDocExamples\DataAccess\_DAReactive\Composition.Pipeline.cs" 
                lang="C#"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.#ctor">
            <overloads>
            <summary>
            Create a new instance of the item change observable.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments})">
            <summary>
            Create a new instance of the item change observable, with specified client object, and an enumerable
            containing the OPC items to be observed, and their OPC group parameters.
            </summary>
            <param name="clientSelector">The selector of client object that is used for OPC Data Access operations.</param>
            <param name="arguments">For each OPC item, contains its OPC server and item descriptors, and OPC group parameters.
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.#ctor(OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0})">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="itemChangedObservable">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.op_Equality(OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0},OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0})">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.op_Inequality(OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0},OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0})">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Arguments">
            <summary>
            For each OPC item, contains its OPC server and item descriptors, and OPC group parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Equals(OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0})">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Subscribe(System.IObserver{OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0}})">
            <inheritdoc cref="M:System.IObservable`1.Subscribe(System.IObserver{`0})"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.CreateItemSubscriptionArguments(System.IObserver{OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0}},OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.ShouldSerializeArguments">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Arguments"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive">
            <summary>
            Base class for OPC Data Access push-based notification providers (observables) and receivers (observers).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector">
            <summary>
            The default client selector that will be used when new instances of <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive"/> are created, and no
            client selector is specified. 
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.op_Equality(OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive,OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.op_Inequality(OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive,OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ClientSelector">
            <summary>
            The selector of the client object that is used for OPC Data Access operations.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ReturnClient(OpcLabs.EasyOpc.DataAccess.EasyDAClient)">
            <summary>
            Returns the client object that was used by this reactive object.
            </summary>
            <param name="client">The <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> previously obtained for this reactive object.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.Equals(OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ObtainClient">
            <summary>
            Obtains a client object to be used by this reactive object.
            </summary>
            <returns>Returns the <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> according to the current client selector.</returns>
            <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">Thrown when a license was denied.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ResetClientSelector">
            <summary>
            Sets <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ClientSelector"/> back to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ShouldSerializeClientSelector">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ClientSelector"/> is not at its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver">
            <summary>
            Static class with methods to create <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1"/> in various ways.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\ReactiveDocExamples\DataAccess\_DAWriteItemValueObserver\OnNext.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\ReactiveDocExamples\DataAccess\_DAReactive\Composition.Pipeline.cs" 
                lang="C#"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver.Create``1(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>
            Creates a new observer that writes values into an OPC item given by <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/> object.
            </summary>
            <param name="itemArguments">Contains an OPC server and item descriptors.</param>
            <returns>Returns an observer that writes values into the given OPC item.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector"/> selector will be used for OPC Data Access operations.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver.Create``1(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>
            Creates a new observer that writes values into an OPC item given by OPC server and item descriptors.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item to be written into.</param>
            <returns>Returns an observer that writes values into the given OPC item.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector"/> selector will be used for OPC Data Access operations.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver.Create``1(System.String,System.String,System.String)">
            <summary>
            Creates a new observer that writes values into an OPC item, specifying machine name, server class, and item ID.
            </summary>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be written into.</param>
            <returns>Returns an observer that writes values into the given OPC item.</returns>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector"/> selector will be used for OPC Data Access operations.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1">
            <summary>
            Push-based notification receiver (observer) that writes incoming values into an OPC Data Access item.
            </summary>
            <typeparam name="TValue">The type of OPC values received.</typeparam>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\ReactiveDocExamples\DataAccess\_DAWriteItemValueObserver\OnNext.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\ReactiveDocExamples\DataAccess\_DAReactive\Composition.Pipeline.cs" 
                lang="C#"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.#ctor">
            <overloads>
            <summary>
            Create a new instance of the observer that writes values into an OPC item.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
            <summary>
            Create a new instance of the observer that writes values into an OPC item given by <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments"/> 
            object.
            </summary>
            <param name="clientSelector">The selector of the client object that is used for OPC Data Access operations.</param>
            <param name="itemArguments">Contains an OPC server and item descriptors.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.#ctor(OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0})">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="writeItemValueObserver">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.Finalize">
            <summary>
            Finalizes the observer by returning the client object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.op_Equality(OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0},OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0})">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.op_Inequality(OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0},OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0})">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.ItemArguments">
            <summary>
            Contains an OPC server and item descriptors.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.Equals(OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0})">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.OnNext(`0)">
            <inheritdoc cref="M:System.IObserver`1.OnNext(`0)"/>
            <remarks>
            Writes the incoming value into the OPC-DA item.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.OnError(System.Exception)">
            <inheritdoc cref="M:System.IObserver`1.OnError(System.Exception)"/>
            <remarks>No operation.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.OnCompleted">
            <inheritdoc cref="M:System.IObserver`1.OnCompleted"/>
            <remarks>No operation.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.NamespaceDoc">
            <summary>
            This namespace contains reactive extensions (Rx) classes for OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Utilities.DAVtqUtilities">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Utilities.DAVtqUtilities.IsValid``1(OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>
            Determines whether the non-generic <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> is valid with value type <typeparamref name="TValue"/>.
            </summary>
            <param name="vtq">The non-generic <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> to be tested for validity.</param>
            <returns>Returns <c>true</c> if valid. Returns <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.Utilities.EasyDAItemChangedEventArgsUtilities.IsValid``1(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Determines whether the non-generic <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/> is valid with value type 
            <typeparamref name="TValue"/>.
            </summary>
            <param name="eventArgs">The non-generic <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/> to be tested for validity.</param>
            <returns>Returns <c>true</c> if valid. Returns <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Utilities.NamespaceDoc">
            <summary>
            This namespace contains utility types for OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient">
            <summary>
              <para>The EasyDAClient object is the main object that allows simple access to OPC Data Access servers.</para>
              <para>
                <strong>The core members of this object come from the <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient" /> interface.</strong>
              </para>
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.PullItemChangedQueueCapacity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientEnqueuing.PullItemChangedQueueCapacity"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.GetService(System.Type)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Widgets.Widget.GetService(System.Type)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.HandleRanges">
            <excludedoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SupportedTechnologies">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SupportedTechnologies"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.IsKnownItemSubscriptionHandle(System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.IsKnownItemSubscriptionHandle(System.Int32)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.UnsubscribeAllItems">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeAllItems"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.EasyDAClient.EventingFailure">
            <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.EventingFailure"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ItemChanged">
            <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.InnerClient">
            <summary>
            Inner client to which the functionality is forwarded.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.InnerClientCallback(System.Object,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Undelegates the event arguments and invokes the inner callback.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.InnerClientOnEventingFailure(System.Object,OpcLabs.BaseLib.FailureEventArgs)">
            <summary>
            Invokes the base <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.EventingFailure"/> event.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.InnerClientOnItemChanged(System.Object,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Invokes the base <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> event.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Delegate(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])">
            <summary>
            Delegates array of operation arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Undelegate(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
            <summary>
            Undelegates event arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Undelegate(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs[])">
            <summary>
            Undelegates an array of event arguments of type <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs"/>.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.OpcLabs#EasyOpc#DataAccess#ComTypes#_EasyDAClient#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.OpcLabs#EasyOpc#DataAccess#ComTypes#_EasyDAClient#InstanceParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.InstanceParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.OpcLabs#EasyOpc#DataAccess#ComTypes#_EasyDAClient#IsolatedParameters">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.IsolatedParameters"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.OpcLabs#EasyOpc#DataAccess#ComTypes#_EasyDAClient#PullItemChangedQueueCapacity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.PullItemChangedQueueCapacity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.InstanceParameters">
            <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Isolated">
            <summary>Specifies that you wish that the <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> object instance works with an "isolated" 
            connection to the OPC server, i.e. one that is not shared with other instances.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.IsolatedParameters">
            <summary>
            Contains parameters that influence the behavior of the component when it is isolated.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Isolated"/> property equal to <c>true</c>.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ResetIsolated">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Isolated"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ShouldSerializeIsolated">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Isolated"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ResetInstanceParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.InstanceParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ShouldSerializeInstanceParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.InstanceParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ResetIsolatedParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.IsolatedParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ShouldSerializeIsolatedParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.IsolatedParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.LicenseInfo">
            <inheritdoc cref="P:OpcLabs.BaseLib.ILicenseInfoProvider.LicenseInfo"/>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.EasyDAClient.DefaultIsolated">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Isolated"/> property. Equals to <c>false</c>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.#cctor">
            <summary>
            Initializes the class statically.
            </summary>
            <remarks>The static constructor is explicitly defined in order to be properly marked security-wise.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.AdaptableParameters">
            <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
            <remarks>
            <para>
            When the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Isolated"/> property of the <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> is <c>false</c> (the default), these 
            adaptable parameters are used. When the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Isolated"/> property is <c>true</c>, each such instance has 
            its own set of adaptable parameters, taken from the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.IsolatedParameters"/> property instead.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.EnableNativeClient">
            <summary>
            Determines whether the OPC client implemented in native code is enabled.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.EnableNetApiClient">
            <summary>
            Determines whether the client implemented using OPC NET API is enabled.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.EnableServiceClient">
            <summary>
            Determines whether the OPC client implemented through service provider is enabled.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ServiceProviderEndpointDescriptor">
            <summary>
            Provider endpoint descriptor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SharedInstance">
            <summary>
            A default, shared instance of the client object.
            </summary>
            <remarks>
            <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
            <para>
            The default instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="T:System.Threading.SynchronizationContext"/> may be used with each form.</para>
            <para>
            We also do not recommend using the default instance for library code, due to conflicts that may arise if your 
            library sets some instance parameters which may not be the same as what other libraries or the final application 
            expects.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SharedParameters">
            <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Create">
            <summary>Creates a new instance of the class.</summary>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClient)">
            <param name="client">Client object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Reset">
            <summary>
            Sets the object properties back to their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ValueEquals(OpcLabs.EasyOpc.DataAccess.EasyDAClient)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClient"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.BaseLib.Widgets.NotifyingWidget"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ValueEquals(System.Object)">
            <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)" />
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.CreateInnerClient">
            <summary>
            Infrastructure
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ResetSharedInstance">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SharedInstance"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClient.ShouldSerializeSharedInstance">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClient.SharedInstance"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAAccessRight">
            <summary>Indicates if the item is read only, write only or read/write.</summary>
            <remarks>
            <para>This is NOT related to security but rather to the nature of the underlying hardware.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAAccessRight.DefaultAsString">
            <summary>
            Default value of <see cref="T:OpcLabs.EasyOpc.DataAccess.DAAccessRight"/>, i.e. corresponding to <see cref="F:OpcLabs.EasyOpc.DataAccess.DAAccessRights.Both"/>, expressed as
            string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAAccessRight.DefaultInternalValue">
            <summary>
            Default internal value. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.DAAccessRights.Both"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAAccessRight.DefaultNumericalValue">
            <summary>
            Numerical value of default <see cref="T:OpcLabs.EasyOpc.DataAccess.DAAccessRight"/>, which corresponds to <see cref="F:OpcLabs.EasyOpc.DataAccess.DAAccessRights.Both"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAAccessRight"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.#ctor(OpcLabs.EasyOpc.DataAccess.DAAccessRight)">
            <summary>
            Initializes a new instance of the class to the value indicated by another <see cref="T:OpcLabs.EasyOpc.DataAccess.DAAccessRight"/>.
            </summary>
            <param name="accessRight">Access rights object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.#ctor(OpcLabs.EasyOpc.DataAccess.DAAccessRights)">
            <summary>Initializes a new instance of the class to the value indicated by a combination of enumerated values.</summary>
            <param name="internalValue">Value of access rights bits.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.#ctor(System.Int64)">
            <summary>Initializes a new instance of the class to the value indicated by long integer value.</summary>
            <param name="numericalValue">Value of access rights bits.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.#ctor(System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the class to the value indicated by individual access rights flags.</summary>
            <param name="allowRead">The Readable indicator.</param>
            <param name="allowWrite">The Writable indicator.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.Default">
            <summary>
            Default access rights.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.op_Equality(OpcLabs.EasyOpc.DataAccess.DAAccessRight,OpcLabs.EasyOpc.DataAccess.DAAccessRight)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.op_Inequality(OpcLabs.EasyOpc.DataAccess.DAAccessRight,OpcLabs.EasyOpc.DataAccess.DAAccessRight)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAAccessRight)~System.Int64">
            <summary>Converts the access rights object to a long integer value of access rights bits.</summary>
            <param name="accessRight">The value to be converted.</param>
            <returns>Returns the value of access rights bits.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.op_Implicit(System.Int64)~OpcLabs.EasyOpc.DataAccess.DAAccessRight">
            <summary>Converts the long integer value of access rights bits to an access rights object.</summary>
            <param name="numericalValue">The value to be converted.</param>
            <returns>Returns the access rights object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAAccessRights)~OpcLabs.EasyOpc.DataAccess.DAAccessRight">
            <summary>Converts a combination of enumerated values to a DAAccessRight object.</summary>
            <param name="internalValue">Combination of enumerated values to be converted.</param>
            <returns>Returns a DAAccessRight converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAAccessRight)~OpcLabs.EasyOpc.DataAccess.DAAccessRights">
            <summary>Converts DAAccessRight object to a combination of enumerated values.</summary>
            <param name="accessRight">DAAccessRight object to be converted.</param>
            <returns>Returns a combination of enumerated values converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.FromDAAccessRights(OpcLabs.EasyOpc.DataAccess.DAAccessRights)">
            <summary>Converts a combination of enumerated values to a DAAccessRight object.</summary>
            <param name="internalValue">Combination of enumerated values to be converted.</param>
            <returns>Returns a DAAccessRight converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.FromInt64(System.Int64)">
            <summary>Converts the long integer value of access rights bits to an access rights object.</summary>
            <param name="value">The value to be converted.</param>
            <returns>Returns the access rights object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.ToDAAccessRights(OpcLabs.EasyOpc.DataAccess.DAAccessRight)">
            <summary>Converts DAAccessRight object to a combination of enumerated values.</summary>
            <param name="accessRight">DAAccessRight object to be converted.</param>
            <returns>Returns a combination of enumerated values converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.ToInt64(OpcLabs.EasyOpc.DataAccess.DAAccessRight)">
            <summary>Converts the access rights object to a long integer value of access rights bits.</summary>
            <param name="accessRights">The value to be converted.</param>
            <returns>Returns the value of access rights bits.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.AllowRead">
            <summary>Gets or sets the Readable indicator.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.AllowWrite">
            <summary>Gets or sets the Writable indicator.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.InternalValue">
            <summary>
            An internal value of the access rights - a combination of enumerated values.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.NumericalValue">
            <summary>
            The numerical (integer) value of the access rights.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.ToString">
            <summary>Returns a string describing the access rights combination.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.DAAccessRight.PropertyChanged">
            <summary>
            Handler for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.StandardName">
            <summary>
            A symbolic name of the current DAAccessRight if it has a standard name. Empty otherwise. 
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAAccessRight.OpcLabs#EasyOpc#DataAccess#ComTypes#_DAAccessRight#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAAccessRight.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAAccessRight.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAAccessRights">
            <summary>Contains pre-defined constants of <see cref="T:OpcLabs.EasyOpc.DataAccess.DAAccessRight"/> internal values.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAAccessRights.None">
            <summary>The client cannot read or change the data item's value.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAAccessRights.Readable">
            <summary>The client can read the data item's value.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAAccessRights.Writable">
            <summary>The client can change the data item's value.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAAccessRights.Both">
            <summary>The client can read and change the data item's value.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DABrowseFilter">
            <summary>An enumeration specifying which subset of browse elements to return.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DABrowseFilter.None">
            <summary>Do not return anything.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DABrowseFilter.All">
            <summary>Return branches and leaves.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DABrowseFilter.Branches">
            <summary>Return branches only.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DABrowseFilter.Leaves">
            <summary>Return leaves only.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DABrowseFilter.Flat">
            <summary>Return leaves only, flattening the address space into a non-hierarchical list.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DADataSource">
            <summary>Selects the data source for OPC reads (from device, from OPC cache, or dynamically determined).</summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.DeviceSource.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DADataSource.ByValueAge">
            <summary>The data source (memory, OPC cache or OPC device) selection will be based on the desired value age and 
            current status of data received from the server.</summary>
            <remarks>Value is 0. </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DADataSource.Cache">
            <summary>OPC reads will be fulfilled from the cache in the OPC server.</summary>
            <remarks>Value is 1. Corresponds to OPC_DS_CACHE in the OPC specification.</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DADataSource.Device">
            <summary>OPC reads will be fulfilled from the device by the OPC server.</summary>
            <remarks>Value is 2. Corresponds to OPC_DS_DEVICE in the OPC specification.</remarks>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.DeviceSource.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DALimitChoice">
            <summary>The Limit bit field of OPC quality.</summary>
            <remarks>
            <para>The Limit Field is valid regardless of the QualityChoice and Substatus. In some cases such as Sensor Failure it 
            can provide useful diagnostic information.</para>
            <para>Server which do not support Limit return 0 (LimitOk).</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DALimitChoice.LimitOk">
            <summary>
            Not Limited.
            The value is free to move up or down.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DALimitChoice.LimitLow">
            <summary>
            Low Limited.
            The value has ‘pegged’ at some lower limit.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DALimitChoice.LimitHigh">
            <summary>
            High Limited.
            The value has ‘pegged’ at some high limit.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DALimitChoice.LimitConst">
            <summary>
            Constant.
            The value is a constant and cannot move.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId">
            <summary>The identifying number assigned by the OPC server to the property.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyId.DefaultAsString">
            <summary>
            Default property Id, represented as string ("").
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyId.DefaultInternalValue">
            <summary>
            Default internal value. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Null"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyId.DefaultIsNull">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.IsNull"/> property. Equals to <c>true</c>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyId.DefaultNumericalValue">
            <summary>
            Numerical value of default <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId"/>, which corresponds to <see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Null"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.#ctor">
            <summary>Initializes a new instance of the class to the <see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Null"/> value.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <param name="propertyId">The property Id to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyIds)">
            <summary>Initializes a new instance of the class to the value indicated by an enumerated value.</summary>
            <param name="internalValue">Value of property Id.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.#ctor(System.Int64)">
            <param name="numericalValue">Numerical property Id to be converted to a new instance of this class.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.Default">
            <summary>
            Default property Id.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.op_Equality(OpcLabs.EasyOpc.DataAccess.DAPropertyId,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="propertyId1">First object to be compared.</param>
            <param name="propertyId2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.op_Inequality(OpcLabs.EasyOpc.DataAccess.DAPropertyId,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="propertyId1">First object to be compared.</param>
            <param name="propertyId2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAPropertyId)~System.Int64">
            <summary>Converts a DAPropertyId object to a numerical property Id value.</summary>
            <param name="propertyId">A DAPropertyId object to be converted.</param>
            <returns>Returns a numerical Id converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.op_Implicit(System.Int64)~OpcLabs.EasyOpc.DataAccess.DAPropertyId">
            <summary>Converts a numerical property Id value to a DAPropertyId object.</summary>
            <param name="numericalValue">Numerical property Id to be converted.</param>
            <returns>Returns a DAPropertyId converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAPropertyIds)~OpcLabs.EasyOpc.DataAccess.DAPropertyId">
            <summary>Converts an enumerated value to a DAPropertyId object.</summary>
            <param name="internalValue">Enumerated value to be converted.</param>
            <returns>Returns a DAPropertyId converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAPropertyId)~OpcLabs.EasyOpc.DataAccess.DAPropertyIds">
            <summary>Converts DAPropertyId object to an enumerated value.</summary>
            <param name="propertyId">DAPropertyId object to be converted.</param>
            <returns>Returns an enumerate values converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.FromDAPropertyIds(OpcLabs.EasyOpc.DataAccess.DAPropertyIds)">
            <summary>Converts an enumerated value to a DAPropertyId object.</summary>
            <param name="internalValue">Enumerated value to be converted.</param>
            <returns>Returns a DAPropertyId converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.FromInt64(System.Int64)">
            <summary>Converts a numerical property Id value to a DAPropertyId object.</summary>
            <param name="value">Numerical property Id to be converted.</param>
            <returns>Returns a DAPropertyId converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetPropertyType(OpcLabs.EasyOpc.DataAccess.DAPropertyIds)">
            <summary>
            Determines a type of an OPC property given by its property Id.
            </summary>
            <param name="propertyId">A numerical Id of the property whose type should be determined.</param>
            <returns>A type of the OPC property. If the property type cannot be determined, the property is assumed to be of 
            <see cref="T:System.Object"/> type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetPropertyType(OpcLabs.EasyOpc.DataAccess.DAPropertyIds,System.Guid)">
            <summary>
            Determines a type of an OPC property given by its property Id.
            </summary>
            <param name="propertyId">A numerical Id of the property whose type should be determined.</param>
            <param name="serverClsid">The CLSID of the OPC server on which the property resides.</param>
            <returns>A type of the OPC property. If the property type cannot be determined, the property is assumed to be of 
            <see cref="T:System.Object"/> type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetName(OpcLabs.EasyOpc.DataAccess.DAPropertyIds)">
            <summary>Determines the property name for an OPC property given by its numerical property Id.</summary>
            <param name="propertyId">A numerical Id of the property whose name should be determined.</param>
            <returns>Returns a string identifier of the property, for pre-defined properties. An empty string is returned if 
            the property is not known.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetName(OpcLabs.EasyOpc.DataAccess.DAPropertyIds,System.Guid)">
            <summary>Determines the property name for an OPC property given by its numerical property Id.</summary>
            <param name="propertyId">A numerical Id of the property whose name should be determined.</param>
            <param name="serverClsid">A CLSID of the OPC server for which the property name should be obtained. This is used
            for properties that are server-specific. For standard properties, the method does not use this parameter and
            it can be passed in as Guid.Empty.</param>
            <returns>Returns a string identifier of the property, for pre-defined properties. An empty string is returned if 
            the property is not known.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.ToDAPropertyIds(OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Converts DAPropertyId object to an enumerated value.</summary>
            <param name="propertyId">DAPropertyId object to be converted.</param>
            <returns>Returns an enumerated value converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.ToInt64(OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Converts a DAPropertyId object to a numerical property Id value.</summary>
            <param name="propertyId">A DAPropertyId object to be converted.</param>
            <returns>Returns a numerical Id converted from the input argument.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.InternalValue">
            <summary>
            The internal (enumerated) value of the property Id.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.IsNull">
            <summary>
            Determines whether the property Id is null.
            </summary>
            <remarks>
            An OPC "Classic" property Id is considered null when its internal value is <see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Null"/>, 
            i.e. equal to -1.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.NumericalValue">
            <summary>
            The numerical (integer) value of the property Id.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetName">
            <summary>Returns a string identifier of the property, for pre-defined properties. An empty string is returned if 
            the property is not known.</summary>
            <returns>Returns the property name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetName(System.Guid)">
            <summary>Returns a string identifier of the property, for pre-defined properties. An empty string is returned if 
            the property is not known.</summary>
            <param name="serverClsid">A CLSID of the OPC server for which the property name should be obtained. This is used
            for properties that are server-specific. For standard properties, the method does not use this parameter and
            it can be passed in as Guid.Empty.</param>
            <returns>Returns the property name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetPropertyType">
            <summary>
            Determines a type of this OPC property.
            </summary>
            <returns>A type of the OPC property. If the property type cannot be determined, the property is assumed to be of 
            <see cref="T:System.Object"/> type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetPropertyType(System.Guid)">
            <summary>
            Determines a type of this OPC property.
            </summary>
            <param name="serverClsid">The CLSID of the OPC server on which the property resides.</param>
            <returns>A type of the OPC property. If the property type cannot be determined, the property is assumed to be of 
            <see cref="T:System.Object"/> type.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.ToString">
            <summary>Returns a string identifier of the property, for pre-defined properties. An empty string is returned if 
            the property is not known.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.DAPropertyId.PropertyChanged">
            <summary>
            Handler for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.StandardName">
            <summary>
            A symbolic name of the current DAPropertyId if it has a standard name. Empty otherwise. 
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.ReadStringList(System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyId.OpcLabs#EasyOpc#DataAccess#ComTypes#_DAPropertyId#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyId.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyId.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAPropertyIds">
            <summary>Contains pre-defined constants of <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyId"/> internal values.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Null">
            <summary>
            Null property Id. Used when the property Id is not specified.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.None">
            <summary>Reserved. No property.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DataType">
            <summary>Item Canonical DataType.</summary>
            <remarks>(OPC_PROPERTY_DATATYPE)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Value">
            <summary>Item Value.</summary>
            <remarks>(OPC_PROPERTY_VALUE)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Quality">
            <summary>Item Quality.</summary>
            <remarks>(OPC_PROPERTY_QUALITY)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Timestamp">
            <summary>Item Timestamp.</summary>
            <remarks>(OPC_PROPERTY_TIMESTAMP)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.AccessRights">
            <summary>Item Access Rights.</summary>
            <remarks>(OPC_PROPERTY_ACCESS_RIGHTS)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ScanRate">
            <summary>Server Scan Rate.</summary>
            <remarks>(OPC_PROPERTY_SCAN_RATE)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.EUType">
            <summary>Item EU Type.</summary>
            <remarks>(OPC_PROPERTY_EU_TYPE)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.EUInfo">
            <summary>Item EUInfo.</summary>
            <remarks>(OPC_PROPERTY_EU_INFO)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.EUUnits">
            <summary>EU Units.</summary>
            <remarks>(OPC_PROPERTY_EU_UNITS)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Description">
            <summary>Item Description.</summary>
            <remarks>(OPC_PROPERTY_DESCRIPTION)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighEU">
            <summary>High EU.</summary>
            <remarks>(OPC_PROPERTY_HIGH_EU)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowEU">
            <summary>Low EU.</summary>
            <remarks>(OPC_PROPERTY_LOW_EU)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighIR">
            <summary>High Instrument Range.</summary>
            <remarks>(OPC_PROPERTY_HIGH_IR)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowIR">
            <summary>Low Instrument Range.</summary>
            <remarks>(OPC_PROPERTY_LOW_IR)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.CloseLabel">
            <summary>Contact Close Label.</summary>
            <remarks>(OPC_PROPERTY_CLOSE_LABEL)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.OpenLabel">
            <summary>Contact Open Label.</summary>
            <remarks>(OPC_PROPERTY_OPEN_LABEL)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.TimeZone">
            <summary>Item Timezone.</summary>
            <remarks>(OPC_PROPERTY_TIMEZONE)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.MinimumValue">
            <summary>
            Minimum Value.
            </summary>
            <remarks>
            OPC XML-DA Specification Version 1.01.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.MaximumValue">
            <summary>
            Maximum Value.
            </summary>
            <remarks>
            OPC XML-DA Specification Version 1.01.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ValuePrecision">
            <summary>
            Value Precision.
            </summary>
            <remarks>
            OPC XML-DA Specification Version 1.01.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ConditionStatus">
            <summary>Condition Status.</summary>
            <remarks>(OPC_PROPERTY_CONDITION_STATUS)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.AlarmQuickHelp">
            <summary>Alarm Quick Help.</summary>
            <remarks>(OPC_PROPERTY_ALARM_QUICK_HELP)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.AlarmAreaList">
            <summary>Alarm Area List.</summary>
            <remarks>(OPC_PROPERTY_ALARM_AREA_LIST)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.PrimaryAlarmArea">
            <summary>Primary Alarm Area.</summary>
            <remarks>(OPC_PROPERTY_PRIMARY_ALARM_AREA)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ConditionLogic">
            <summary>Condition Logic.</summary>
            <remarks>(OPC_PROPERTY_CONDITION_LOGIC)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LimitExceeded">
            <summary>Limit Exceeded.</summary>
            <remarks>(OPC_PROPERTY_LIMIT_EXCEEDED)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Deadband">
            <summary>Deadband.</summary>
            <remarks>(OPC_PROPERTY_DEADBAND)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighHighLimit">
            <summary>HiHi Limit.</summary>
            <remarks>(OPC_PROPERTY_HIHI_LIMIT)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighLimit">
            <summary>Hi Limit.</summary>
            <remarks>(OPC_PROPERTY_HI_LIMIT)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowLimit">
            <summary>Lo Limit.</summary>
            <remarks>(OPC_PROPERTY_LO_LIMIT)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowLowLimit">
            <summary>LoLo Limit.</summary>
            <remarks>(OPC_PROPERTY_LOLO_LIMIT)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ChangeRateLimit">
            <summary>Rate of Change Limit.</summary>
            <remarks>(OPC_PROPERTY_CHANGE_RATE_LIMIT)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DeviationLimit">
            <summary>Deviation Limit.</summary>
            <remarks>(OPC_PROPERTY_DEVIATION_LIMIT)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.SoundFile">
            <summary>Sound File.</summary>
            <remarks>(OPC_PROPERTY_SOUND_FILE)</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.TypeSystemId">
            <summary>(OPC_PROPERTY_TYPE_SYSTEM_ID).</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DictionaryId">
            <summary>(OPC_PROPERTY_DICTIONARY_ID).</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.TypeId">
            <summary>(OPC_PROPERTY_TYPE_ID).</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Dictionary">
            <summary>(OPC_PROPERTY_DICTIONARY).</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.TypeDescription">
            <summary>(OPC_PROPERTY_TYPE_DESCRIPTION).</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ConsistencyWindow">
            <summary>(OPC_PROPERTY_TYPE_DESCRIPTION).</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.WriteBehavior">
            <summary>(OPC_PROPERTY_WRITE_BEHAVIOR).</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.UnconvertedItemId">
            <summary>(OPC_PROPERTY_UNCONVERTED_ITEM_ID).</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.UnfilteredItemId">
            <summary>(OPC_PROPERTY_UNFILTERED_ITEM_ID).</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DataFilterValue">
            <summary>(OPC_PROPERTY_DATA_FILTER_VALUE).</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAQualities">
            <summary>Contains pre-defined constants of <see cref="T:OpcLabs.EasyOpc.DataAccess.DAQuality"/> internal values.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.BadNonspecific">
            <summary>
            Non-specific. The value is bad but no specific reason is known.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.UncertainNonspecific">
            <summary>
            Non-specific. There is no specific reason why the value is uncertain.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.GoodNonspecific">
            <summary>
            Non-specific. The value is good. There are no special conditions.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.ConfigError">
            <summary>
            Configuration Error. There is some server specific problem with the configuration. For example the item in 
            question has been deleted from the configuration.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.NotConnected">
            <summary>
            Not Connected. The input is required to be logically connected to something but is not. This quality may 
            reflect that no value is available at this time, for reasons like the value may have not been provided by the data 
            source.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.DeviceFailure">
            <summary>
            Device Failure. A device failure has been detected.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.SensorFailure">
            <summary>
            Sensor Failure. A sensor failure had been detected (the ’Limits’ field can provide additional diagnostic 
            information in some situations).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.LastKnown">
            <summary>
            Last Known Value. Communications have failed. However, the last known value is available. 
            Remark: The ‘age’ of the value may be determined from the TIMESTAMP in the OPCITEMSTATE.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.CommFailure">
            <summary>
            Comm Failure. Communications have failed. There is no last known value is available.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.OutOfService">
            <summary>
            Out of Service. The block is off scan or otherwise locked. This quality is also used when the active state 
            of the item or the group containing the item is InActive.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.WaitingForInitialData">
            <summary>
            Waiting for Initial Data. After Items are added to a group, it may take some time for the server to actually obtain 
            values for these items. In such cases the client might perform a read (from cache), or establish a ConnectionPoint 
            based subscription and/or execute a Refresh on such a subscription before the values are available. This substatus 
            is only available from OPC DA 3.0 or newer servers.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.LastUsable">
            <summary>
            Last Usable Value. Whatever was writing this value has stopped doing so. The returned value should be 
            regarded as ‘stale’. Remark: This differs from a BAD value with Substatus 5 (Last Known Value). That status is 
            associated specifically with a detectable communications error on a ‘fetched’ value. This error is associated with 
            the failure of some external source to ‘put’ something into the value within an acceptable period of time. 
            Remark: The ‘age’ of the value can be determined from the TIMESTAMP in OPCITEMSTATE.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.SensorCal">
            <summary>
            Sensor Not Accurate. Either the value has ‘pegged’ at one of the sensor limits (in which case the limit 
            field should be set to 1 or 2) or the sensor is otherwise known to be out of calibration via some form of internal 
            diagnostics (in which case the limit field should be 0).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.EguExceeded">
            <summary>
            Engineering Units Exceeded. The returned value is outside the limits defined for this parameter. Remark: In 
            this case (per the Fieldbus Specification) the ‘Limits’ field indicates which limit has been exceeded but does NOT 
            necessarily imply that the value cannot move farther out of range.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.Subnormal">
            <summary>
            Sub-Normal. The value is derived from multiple sources and has less than the required number of 
            Good sources.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualities.LocalOverride">
            <summary>
            Local Override. The value has been Overridden. Typically this is means the input has been disconnected and 
            a manually entered value has been ‘forced’.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAQualitiesUtilities">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAQuality">
            <summary>Represents the quality state for an item's data value.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQuality.DefaultInternalValue">
            <summary>
            Default (enumerated) internal value. Equals to zero.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQuality.DefaultNumericalValue">
            <summary>
            Default numerical internal value. Equals to zero.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAQuality"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.#ctor(OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Initializes a new instance of the class, from other <see cref="T:OpcLabs.EasyOpc.DataAccess.DAQuality"/>.</summary>
            <param name="quality">Quality state to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.#ctor(OpcLabs.EasyOpc.DataAccess.DAQualities)">
            <summary>Initializes a new instance of the class, with value specified as enumerated.</summary>
            <param name="internalValue">Enumerated quality value to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.#ctor(OpcLabs.EasyOpc.DataAccess.DAQualityChoice)">
            <summary>Initializes a new instance of the class, with specified quality choice.</summary>
            <param name="qualityChoice">One of the basic quality choices (Good/Uncertain/Bad).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.#ctor(OpcLabs.EasyOpc.DataAccess.DAStatusChoice,OpcLabs.EasyOpc.DataAccess.DALimitChoice)">
            <summary>Initializes a new instance of the class, with specified status choice and limit choice.</summary>
            <param name="statusChoice">A combination of a basic quality choice (Good/Uncertain/Bad), and a sub-status.</param>
            <param name="limitChoice">The Limit bit field of OPC quality.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.#ctor(OpcLabs.EasyOpc.DataAccess.DAStatusChoice)">
            <summary>Initializes a new instance of the class, with specified status choice.</summary>
            <param name="statusChoice">A combination of a basic quality choice (Good/Uncertain/Bad), and a sub-status.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.#ctor(System.Int32)">
            <summary>Initializes a new instance of the class, with value specified as bit fields in an integer.</summary>
            <param name="numericalValue">Numerical quality value to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.Default">
            <summary>
            Default quality.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.op_Equality(OpcLabs.EasyOpc.DataAccess.DAQuality,OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.op_Inequality(OpcLabs.EasyOpc.DataAccess.DAQuality,OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAQuality)~System.Int32">
            <summary>Converts the quality to an integer.</summary>
            <param name="quality">A quality to be converted."</param>
            <returns>Returns a bit-coded integer that corresponds to the quality.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.op_Implicit(System.Int32)~OpcLabs.EasyOpc.DataAccess.DAQuality">
            <summary>Converts an integer to a quality.</summary>
            <param name="quality">An integer that represent the bit-coded quality."</param>
            <returns>Returns the quality that corresponds to the integer.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAQualities)~OpcLabs.EasyOpc.DataAccess.DAQuality">
            <summary>Converts an enumerated value to a DAQuality object.</summary>
            <param name="internalValue">Enumerated value to be converted.</param>
            <returns>Returns a DAQuality converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAQuality)~OpcLabs.EasyOpc.DataAccess.DAQualities">
            <summary>Converts DAQuality object to an enumerated value.</summary>
            <param name="quality">DAQuality object to be converted.</param>
            <returns>Returns an enumerated value converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.FromDAQualities(OpcLabs.EasyOpc.DataAccess.DAQualities)">
            <summary>Converts an enumerated value to a DAQuality object.</summary>
            <param name="internalValue">Enumerated value to be converted.</param>
            <returns>Returns a DAQuality converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.FromInt32(System.Int32)">
            <summary>Converts an integer to a quality.</summary>
            <param name="value">An integer that represent the bit-coded quality."</param>
            <returns>Returns the quality that corresponds to the integer.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.ToDAQualities(OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Converts DAQuality object to an enumerated value.</summary>
            <param name="quality">DAQuality object to be converted.</param>
            <returns>Returns an enumerated value converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.ToInt32(OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Converts the quality to an integer.</summary>
            <param name="quality">A quality to be converted."</param>
            <returns>Returns a bit-coded integer that corresponds to the quality.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.CarriesValue">
            <summary>
            Determines whether a valid data value is carried with this quality.
            </summary>
            <value><c>True</c>
              if a data value is valid with this quality; <c>false</c>
              otherwise.</value>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.InternalValue">
            <summary>
            The numerical (integer) value of the quality.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.IsBad">
            <summary>Determines whether the Quality (QualityChoice) is Bad.</summary>
            <value>Returns True when the Quality (QualityChoice) is Bad.</value>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.IsGood">
            <summary>Determines whether the Quality (QualityChoice) is Good.</summary>
            <value>Returns True when the Quality (QualityChoice) is Good.</value>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.IsUncertain">
            <summary>Determines whether the Quality (QualityChoice) is Uncertain.</summary>
            <value>Returns True when the Quality (QualityChoice) is Uncertain.</value>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.LimitBitField">
            <summary>Gets the Limit bit field.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.NumericalValue">
            <summary>
            The numerical (integer) value of the quality.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.QualityChoiceBitField">
            <summary>Gets the QualityChoice bit field.</summary>
            <remarks>
            <para>You cannot set the QualityChoice using a property; use SetQualityAndSubstatus method instead. This approach is 
            needed as the semantics of the Status depends on the QualityChoice, and therefore setting just QualityChoice could 
            lead to inconsistent or undesired contents of the DAQuality.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.StatusBitField">
            <summary>Gets the Status bit field (Quality and Substatus).</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.SetQualityAndSubStatus(OpcLabs.EasyOpc.DataAccess.DAQualityChoice,System.Int16)">
            <summary>Modifies the QualityChoice and Substatus bit fields.</summary>
            <param name="qualityChoice">One of the basic quality choices (Good/Uncertain/Bad).</param>
            <param name="subStatus">Sub-status bit field of the OPC quality.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.SetQualityAndSubStatus(OpcLabs.EasyOpc.DataAccess.DAQualityChoice)">
            <summary>Modifies the QualityChoice bit field.</summary>
            <param name="qualityChoice">One of the basic quality choices (Good/Uncertain/Bad).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.ToString">
            <summary>Returns a string describing the individual fields of the quality.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.ToString(System.String)">
            <summary>
            Converts the value of the current object to its equivalent string representation using the specified format.
            </summary>
            <param name="format">A standard or custom format string (see Remarks).</param>
            <returns>A string representation of value of the current object as specified by <paramref name="format"/>.</returns>
            <remarks>
            <para>
            The <paramref name="format"/> parameter should contain either a standard format specifier or a custom format 
            pattern that defines the format of the returned string. If <paramref name="format"/> is <c>null</c> or an empty 
            string, the general format specifier, 'G', is used.</para>
            <para>
            This method uses formatting information derived from the current culture.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.ToString(System.String,System.IFormatProvider)">
            <inheritdoc cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.DAQuality.PropertyChanged">
            <summary>
            Handler for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.StandardName">
            <summary>
            A symbolic name of the current DAQuality if it has a standard name. Empty otherwise. 
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAQuality.OpcLabs#EasyOpc#DataAccess#ComTypes#_DAQuality#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAQuality.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAQuality.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAQualityChoice">
            <summary>The QualityChoice bit field, i.e. the most significant part of the OPC quality flags.</summary>
            <remarks>
            <para>The OPC specification uses the name "Quality" for this bit field, which makes it possible to confuse with the full
            OPC quality value. We have made up the name "QualityChoice" in order to reduce the chances for confusion.</para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualityChoice.Bad">
            <summary>
            Bad. 
            Value is not useful for reasons indicated by the Substatus.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualityChoice.Uncertain">
            <summary>
            Uncertain. 
            The quality of the value is uncertain for reasons indicated by the Substatus.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAQualityChoice.Good">
            <summary>
            Good. 
            The Quality of the value is Good.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAQualityChoiceUtilities">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAStatusChoice">
            <summary>Status is a combination of QualityChoice and Substatus. Which Substatus values can be used depend on 
            QualityChoice.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.BadNonspecific">
            <summary>
            Non-specific. 
            Substatus for BAD Quality: The value is bad but no specific reason is known.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.UncertainNonspecific">
            <summary>
            Non-specific. 
            Substatus for UNCERTAIN Quality: There is no specific reason why the value is uncertain.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.GoodNonspecific">
            <summary>
            Non-specific. 
            Substatus for GOOD Quality: The value is good. There are no special conditions.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.ConfigError">
            <summary>
            Configuration Error. 
            Substatus for BAD Quality: There is some server specific problem with the configuration. For example the item in 
            question has been deleted from the configuration.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.NotConnected">
            <summary>
            Not Connected. 
            Substatus for BAD Quality: The input is required to be logically connected to something but is not. This quality may 
            reflect that no value is available at this time, for reasons like the value may have not been provided by the data 
            source.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.DeviceFailure">
            <summary>
            Device Failure. 
            Substatus for BAD Quality: A device failure has been detected.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.SensorFailure">
            <summary>
            Sensor Failure. 
            Substatus for BAD Quality: A sensor failure had been detected (the ’Limits’ field can provide additional diagnostic 
            information in some situations).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.LastKnown">
            <summary>
            Last Known Value.
            Substatus for BAD Quality: Communications have failed. However, the last known value is available. 
            Remark: The ‘age’ of the value may be determined from the TIMESTAMP in the OPCITEMSTATE.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.CommFailure">
            <summary>
            Comm Failure.
            Substatus for BAD Quality: Communications have failed. There is no last known value is available.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.OutOfService">
            <summary>
            Out of Service.
            Substatus for BAD Quality: The block is off scan or otherwise locked. This quality is also used when the active 
            state of the item or the group containing the item is InActive.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.WaitingForInitialData">
            <summary>
            Waiting for Initial Data.
            Substatus for BAD Quality: After Items are added to a group, it may take some time for the server to actually obtain 
            values for these items. In such cases the client might perform a read (from cache), or establish a ConnectionPoint 
            based subscription and/or execute a Refresh on such a subscription before the values are available. This substatus 
            is only available from OPC DA 3.0 or newer servers.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.LastUsable">
            <summary>
            Last Usable Value.
            Substatus for UNCERTAIN Quality: Whatever was writing this value has stopped doing so. The returned value should be 
            regarded as ‘stale’. 
            Remark: This differs from a BAD value with Substatus 5 (Last Known Value). That status is 
            associated specifically with a detectable communications error on a ‘fetched’ value. This error is associated with 
            the failure of some external source to ‘put’ something into the value within an acceptable period of time. 
            Remark: The ‘age’ of the value can be determined from the TIMESTAMP in OPCITEMSTATE.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.SensorCal">
            <summary>
            Sensor Not Accurate.
            Substatus for UNCERTAIN Quality: Either the value has ‘pegged’ at one of the sensor limits (in which case the limit 
            field should be set to 1 or 2) or the sensor is otherwise known to be out of calibration via some form of internal 
            diagnostics (in which case the limit field should be 0).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.EguExceeded">
            <summary>
            Engineering Units Exceeded.
            Substatus for UNCERTAIN Quality: The returned value is outside the limits defined for this parameter. 
            Remark: In this case (per the Fieldbus Specification) the ‘Limits’ field indicates which limit has been exceeded but 
            does NOT necessarily imply that the value cannot move farther out of range.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.Subnormal">
            <summary>
            Sub-Normal.
            Substatus for UNCERTAIN Quality: The value is derived from multiple sources and has less than the required number of 
            Good sources.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAStatusChoice.LocalOverride">
            <summary>
            Local Override.
            Substatus for GOOD Quality: The value has been Overridden. Typically this is means the input has been disconnected 
            and a manually entered value has been ‘forced’.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAStatusChoiceUtilities">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor">
            <summary>Contains information necessary to identify an OPC item, such as its Item Id.</summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <remarks>
            It is possible to construct this object from <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> returned by the browsing methods.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.DefaultAccessPath">
            <summary>
            Default access path. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.DefaultRequestedDataType">
            <summary>
            Default requested data type. Equals to <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(System.String,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class, with specified item identifier, data type and access path.
             </summary>
             <param name="itemId">Contains OPC item identifier.</param>
             <param name="requestedDataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
             the server's canonical data type should be used.</param>
             <param name="accessPath">An optional data path suggestion to the server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(System.String,OpcLabs.BaseLib.Navigation.BrowsePath,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class, with specified item identifier (may be null), browse path (may be 
            empty), data type and access path.
            </summary>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="browsePath">Contains the browse path for the OPC item.</param>
            <param name="requestedDataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="accessPath">An optional data path suggestion to the server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(System.String,System.String,OpcLabs.BaseLib.Navigation.BrowsePath,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class, with specified node path (may be null), item identifier (may be null), 
            browse path (may be empty), data type and access path.
            </summary>
            <param name="nodePath">Contains node path (empty string for the root, null reference if unknown). Only used with OPC XML.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="browsePath">Contains the browse path for the OPC item.</param>
            <param name="requestedDataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="accessPath">An optional data path suggestion to the server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(System.String,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Initializes a new instance of the class, with specified item identifier and data type.</summary>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="requestedDataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(System.String,OpcLabs.BaseLib.Navigation.BrowsePath,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Initializes a new instance of the class, with specified item identifier (may be null), browse path (may be 
            empty), and data type.
            </summary>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="browsePath">Contains the browse path for the OPC item.</param>
            <param name="requestedDataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(System.String)">
            <summary>Initializes a new instance of the class, with specified item identifier.</summary>
            <param name="itemId">Contains OPC item identifier.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(System.String,OpcLabs.BaseLib.Navigation.BrowsePath)">
            <summary>Initializes a new instance of the class, with specified item identifier (may be null) and browse path (may 
            be empty).
            </summary>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="browsePath">Contains the browse path for the OPC item.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class, from specified node element, data type and access path.</summary>
            <param name="nodeElement">The node element object - contains information gathered about a node in OPC server's 
            address space.</param>
            <param name="requestedDataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="accessPath">An optional data path suggestion to the server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Initializes a new instance of the class, from specified node element, and data type.</summary>
            <param name="requestedDataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="nodeElement">The node element object - contains information gathered about a node in OPC server's 
            address space.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)">
            <summary>Initializes a new instance of the class, from specified node element.</summary>
            <param name="nodeElement">The node element object - contains information gathered about a node in OPC server's 
            address space.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor"/> object.</summary>
            <param name="itemDescriptor">An item descriptor object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>Initializes a new instance of the class, from specified node descriptor.</summary>
            <param name="nodeDescriptor">An node descriptor object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Initializes a new instance of the class, from specified node descriptor and data type.</summary>
            <param name="nodeDescriptor">An node descriptor object to be copied from.</param>
            <param name="requestedDataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.BaseLib.ComInterop.VarType,System.String)">
            <summary>Initializes a new instance of the class, from specified node descriptor, data type and access path.
            </summary>
            <param name="nodeDescriptor">An node descriptor object to be copied from.</param>
            <param name="requestedDataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that 
            the server's canonical data type should be used.</param>
            <param name="accessPath">An optional data path suggestion to the server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.Null">
            <summary>
            A null item descriptor (contains a null node ID and a null browse path).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.op_Equality(OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.op_Inequality(OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.op_Implicit(System.String)~OpcLabs.EasyOpc.DataAccess.DAItemDescriptor">
            <summary>Converts a string containing an item Id to a DAItemDescriptor object.</summary>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a DAItemDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.op_Implicit(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)~OpcLabs.EasyOpc.DataAccess.DAItemDescriptor">
            <summary>Converts a <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> to a DANodeDescriptor object.</summary>
            <param name="nodeElement">Contains a node element.</param>
            <returns>Returns a DANodeDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.FromDANodeDescriptor(OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>Converts a node descriptor a DAItemDescriptor object.</summary>
            <param name="nodeDescriptor">Contains node descriptor.</param>
            <returns>Returns a DAItemDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.FromDANodeElement(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)">
            <summary>Converts a <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> to a DAItemDescriptor object.</summary>
            <param name="nodeElement">Contains a node element.</param>
            <returns>Returns a DAItemDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.FromString(System.String)">
            <summary>Converts a string containing an item Id to a DAItemDescriptor object.</summary>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>Returns a DAItemDescriptor converted from the input argument.</returns>
            
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.AccessPath">
            <summary>
            Specifies the access path for the OPC item. The default is "" (an empty string). 
            </summary>
            <remarks>Access paths are rarely used by OPC servers.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.RequestedDataType">
            <summary>Specifies the data type requested. Setting this property to <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that the 
            server's canonical data type should be used.</summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.Equals(OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor"/> is equal to the current object.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.MakeArgumentString(System.Boolean)">
            <inheritdoc cref="M:OpcLabs.EasyOpc.NodeDescriptor.MakeArgumentString(System.Boolean)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.OpcLabs#EasyOpc#DataAccess#ComTypes#_DAItemDescriptor#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAItemDescriptor.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.ResetRequestedDataType">
            <summary>
            Resets the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.RequestedDataType"/> to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.ShouldSerializeRequestedDataType">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor.RequestedDataType"/> differs from its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor">
            <summary>Contains information necessary to identify an OPC Data Access node, such as its Item Id.</summary>
            <remarks>
            It is possible to construct this object from <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> returned by the browsing methods.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.DefaultItemId">
            <summary>
            Default Item Id (none, i.e. <b>null</b>).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.RootItemId">
            <summary>
            An Item Id that represents a root of the address space. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.RootNodePath">
            <summary>
            A node path that represents a root of the address space. Equals to <c>null</c>. Only used with OPC XML.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>Initializes a new instance of the class, from specified node descriptor.</summary>
            <param name="nodeDescriptor">The node descriptor object.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)">
            <summary>Initializes a new instance of the class, from specified node element.</summary>
            <param name="nodeElement">The node element object - contains information gathered about a node in OPC server's 
            address space.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.#ctor(System.String)">
            <summary>Initializes a new instance of the class, with specified item identifier.</summary>
            <param name="itemId">Contains OPC item identifier.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.#ctor(System.String,OpcLabs.BaseLib.Navigation.BrowsePath)">
            <summary>Initializes a new instance of the class, with specified item identifier, and browse path.</summary>
            <param name="itemId">Contains OPC item identifier (empty string for the root or if unknown).</param>
            <param name="browsePath">Contains the browse path for the OPC item.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.#ctor(System.String,System.String,OpcLabs.BaseLib.Navigation.BrowsePath)">
            <summary>Initializes a new instance of the class, with specified node path, item identifier, and browse path.</summary>
            <param name="nodePath">Contains node path (empty string for the root, null reference if unknown). Only used with OPC XML.</param>
            <param name="itemId">Contains OPC item identifier (empty string for the root or if unknown).</param>
            <param name="browsePath">Contains the browse path for the OPC item.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.Null">
            <summary>
            A null node descriptor (contains a null node ID and a null browse path).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.Root">
            <summary>
            The node descriptor for the root of the address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.op_Equality(OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.op_Inequality(OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.op_Implicit(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)~OpcLabs.EasyOpc.DataAccess.DANodeDescriptor">
            <summary>Converts a <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> to a DANodeDescriptor object.</summary>
            <param name="nodeElement">Contains a node element.</param>
            <returns>Returns a DANodeDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.op_Implicit(System.String)~OpcLabs.EasyOpc.DataAccess.DANodeDescriptor">
            <summary>Converts a string containing an item Id to a DANodeDescriptor object.</summary>
            <param name="itemId">Contains OPC item identifier (empty string for the root or if unknown).</param>
            <returns>Returns a DANodeDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.FromDANodeElement(OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement)">
            <summary>Converts a <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> to a DANodeDescriptor object.</summary>
            <param name="nodeElement">Contains a node element.</param>
            <returns>Returns a DANodeDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.FromString(System.String)">
            <summary>Converts a string containing an item Id to a DANodeDescriptor object.</summary>
            <param name="itemId">Contains OPC item identifier (empty string for the root or if unknown).</param>
            <returns>Returns a DANodeDescriptor converted from the input argument.</returns>
            
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.ItemId">
            <summary>
            Contains OPC item identifier (empty string for the root, null reference if unknown).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.OpcLabs#EasyOpc#DataAccess#ComTypes#_DANodeDescriptor#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DANodeDescriptor.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.Equals(OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.GetNodeIdArgumentName">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor">
            <summary>Contains information necessary to identify an OPC property, such as its Property Id.</summary>
            <remarks>
            It is possible to construct this object from <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement"/> returned by the browsing methods.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DefaultAsString">
            <summary>
            Default <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor"/>, expressed as string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DefaultNamespace">
            <summary>
            Default namespace, used when the qualified name is given as a string but does not specify a namespace.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DefaultPropertyId">
            <summary>
            Default property Id. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Null"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DefaultQualifiedNameString">
            <summary>
            Default string form of the qualified name. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Initializes a new instance of the class, with specified OPC property Id.</summary>
            <param name="propertyId">Contains Id of the OPC property.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId,System.String)">
            <summary>Initializes a new instance of the class, with specified OPC property Id and qualified name.</summary>
            <param name="propertyId">Contains Id of the OPC property.</param>
            <param name="qualifiedNameString">The qualified name for this property (used with OPC XML-DA).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyId,OpcLabs.BaseLib.Xml.XmlQualifiedName2)">
            <summary>Initializes a new instance of the class, with specified OPC property Id and qualified name.</summary>
            <param name="propertyId">Contains Id of the OPC property.</param>
            <param name="qualifiedName">The qualified name for this property (used with OPC XML-DA).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor"/> object.</summary>
            <param name="propertyDescriptor">A property descriptor object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.#ctor(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement)">
            <summary>Initializes a new instance of the class, from specified property element.</summary>
            <param name="propertyElement">The property element object - contains information gathered about an OPC property.
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.#ctor(System.String)">
            <summary>Initializes a new instance of the class, with specified qualified name or property Id as a string.</summary>
            <param name="propertyString">The qualified name for this property (used with OPC XML-DA), or property Id as a string.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.#ctor(OpcLabs.BaseLib.Xml.XmlQualifiedName2)">
            <summary>Initializes a new instance of the class, with specified qualified name.</summary>
            <param name="qualifiedName">The qualified name for this property (used with OPC XML-DA).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DefaultQualifiedName">
            <summary>
            Default qualified name (used with OPC XML-DA). Empty.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Null">
            <summary>
            A null property descriptor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DataType">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DataType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Value">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Value"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Quality">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Quality"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Timestamp">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Timestamp"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.AccessRights">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.AccessRights"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ScanRate">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ScanRate"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.EUType">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.EUType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.EUInfo">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.EUInfo"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.EUUnits">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.EUUnits"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Description">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Description"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.HighEU">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighEU"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.LowEU">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowEU"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.HighIR">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighIR"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.LowIR">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowIR"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.CloseLabel">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.CloseLabel"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.OpenLabel">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.OpenLabel"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.TimeZone">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.TimeZone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.MinimumValue">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.MinimumValue"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.MaximumValue">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.MaximumValue"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ValuePrecision">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ValuePrecision"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ConditionStatus">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ConditionStatus"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.AlarmQuickHelp">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.AlarmQuickHelp"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.AlarmAreaList">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.AlarmAreaList"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.PrimaryAlarmArea">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.PrimaryAlarmArea"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ConditionLogic">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ConditionLogic"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.LimitExceeded">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LimitExceeded"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Deadband">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Deadband"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.HighHighLimit">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighHighLimit"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.HighLimit">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.HighLimit"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.LowLimit">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowLimit"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.LowLowLimit">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.LowLowLimit"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ChangeRateLimit">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ChangeRateLimit"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DeviationLimit">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DeviationLimit"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.SoundFile">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.SoundFile"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.TypeSystemId">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.TypeSystemId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DictionaryId">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DictionaryId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.TypeId">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.TypeId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Dictionary">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.Dictionary"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.TypeDescription">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.TypeDescription"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ConsistencyWindow">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.ConsistencyWindow"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.WriteBehavior">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.WriteBehavior"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.UnconvertedItemId">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.UnconvertedItemId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.UnfilteredItemId">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.UnfilteredItemId"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DataFilterValue">
            <inheritdoc cref="F:OpcLabs.EasyOpc.DataAccess.DAPropertyIds.DataFilterValue"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.op_Equality(OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="id1">First object to be compared.</param>
            <param name="id2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.op_Inequality(OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="id1">First object to be compared.</param>
            <param name="id2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.op_Implicit(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement)~OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor">
            <summary>Converts a property element to a DAPropertyDescriptor object.</summary>
            <param name="propertyElement">Contains OPC property element.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAPropertyId)~OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor">
            <summary>Converts a property Id to a DAPropertyDescriptor object.</summary>
            <param name="propertyId">Contains OPC property identifier.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.op_Implicit(OpcLabs.EasyOpc.DataAccess.DAPropertyIds)~OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor">
            <summary>Converts an enumerated property Id to a DAPropertyDescriptor object.</summary>
            <param name="propertyIds">Contains an enumerated OPC property identifier.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.op_Implicit(System.Int64)~OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor">
            <summary>Converts a numerical property Id value to a DAPropertyDescriptor object.</summary>
            <param name="value">Numerical property Id to be converted.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.op_Implicit(System.String)~OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor">
            <summary>Converts a qualified name or property Id as a string to a DAPropertyDescriptor object.</summary>
            <param name="propertyString">Contains the qualified name or property Id as a string of the OPC property.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.op_Implicit(System.Xml.XmlQualifiedName)~OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor">
            <summary>Converts a qualified name to a DAPropertyDescriptor object.</summary>
            <param name="qualifiedName">Contains the qualified name of the OPC property.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.FromDAPropertyElement(OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement)">
            <summary>Converts a property element to a DAPropertyDescriptor object.</summary>
            <param name="propertyElement">Contains OPC property element.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.FromDAPropertyId(OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Converts a property Id to a DAPropertyDescriptor object.</summary>
            <param name="propertyId">Contains OPC property identifier.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.FromDAPropertyIds(OpcLabs.EasyOpc.DataAccess.DAPropertyIds)">
            <summary>Converts an enumerated property Id to a DAPropertyDescriptor object.</summary>
            <param name="propertyIds">Contains an enumerated OPC property identifier.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.FromInt64(System.Int64)">
            <summary>Converts a numerical property Id value to a DAPropertyDescriptor object.</summary>
            <param name="value">Numerical property Id to be converted.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.FromString(System.String)">
            <summary>Converts a qualified name or a property Id as a string to a DAPropertyDescriptor object.</summary>
            <param name="propertyString">Contains the qualified name or the property Id as a string of the OPC property.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
            <summary>Converts a qualified name to a DAPropertyDescriptor object.</summary>
            <param name="qualifiedName">Contains the qualified name of the OPC property.</param>
            <returns>Returns a DAPropertyDescriptor converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ParseQualifiedName(System.String)">
            <summary>
            Parses a string representing a XML qualified name of OPC-DA property (used with OPC XML).
            </summary>
            <param name="s">The qualified name string for an OPC-DA property, with or without a namespace.</param>
            <returns>The XML qualified name parsed from the string.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.IsNull">
            <summary>
            Determines whether the property descriptor is null, i.e. specifies neither property ID.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.PropertyId">
            <summary>
            The Property ID of the OPC property.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.QualifiedName">
            <summary>The qualified name for this property (used with OPC XML-DA).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.QualifiedNameString">
            <summary>The string form of the qualified name for this property (used with OPC XML-DA).</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Equals(OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor"/> is equal to the current object.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.MakeArgumentString(System.Boolean)">
            <summary>
            Infrastructure.
            </summary>
            <param name="informativeOnly">Indicates whether an incomplete argument string with just the most important 
            information may be returned.</param>
            <returns>An argument string that represents the property descriptor.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ToString">
            <summary>Returns a string describing the contents of the property descriptor.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.PropertyChanged">
            <summary>
            This event is raised when a property is changed on a component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ReadStringList(System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.OpcLabs#EasyOpc#DataAccess#ComTypes#_DAPropertyDescriptor#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAPropertyDescriptor.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ResetQualifiedName">
            <summary>
            Reset the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.QualifiedName"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.ShouldSerializeQualifiedName">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor.QualifiedName"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension">
            <summary>
            Contains extension methods to the <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient"/> interface.
            </summary>
            <remarks>
            <para>
            NOTE: This class is intentionally *not* placed in the <c>Extensions</c> namespace, but rather alongside the 
            extendee. The extension methods in this class are commonly used, and from the point of view of the developer,
            can be considered as part of the interface. In addition, this placement allows less namespaces references in typical
            projects, and better consistency with the COM interfaces (as only methods from this extension class may appear
            in the COM interfaces).</para>
            <para>
            Other extension classes may exist as well.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments)">
              <overloads>
              <summary>
              Reads a named item from an OPC server. Value, quality and timestamp are returned. 
              </summary>
              <remarks>
              <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
              specific data type can be requested.</para>
              <para>The ReadItem method only waits for the first update from the server (or until the timeout elapses); it does 
              not wait until the quality becomes "uncertain" or "good". </para>
              </remarks>
              <example>
              <code 
                  source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main1.cs" 
                  lang="C#"
                  region="Example"/>
              <code 
                  source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main1.vb" 
                  lang="VB.NET" title="Visual Basic (VB.NET)"
                  region="Example"/>
              </example>
              <example>
              <code 
                  source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.DataTypes.cs" 
                  lang="C#"
                  region="Example"/>
              <code 
                  source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.DataTypes.vb" 
                  lang="VB.NET" title="Visual Basic (VB.NET)"
                  region="Example"/>
              </example>
              </overloads>
            
             <summary>
             Reads a named item using an object that holds all necessary arguments.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="readItemArguments">Arguments specifying what to read from an OPC-DA server.</param>
             <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> object. The object contains the value, timestamp 
             and quality of the OPC item requested.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
            <summary>Reads a named item using descriptor objects for the OPC server and OPC-DA item.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="itemDescriptor">The OPC item involved in the operation.</param>
             <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> object. The object contains the value, timestamp 
             and quality of the OPC item requested.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>Reads a named item using descriptor objects for the OPC server and OPC-DA item, and specifying read
            parameters such as the data source or value age.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="readParameters">Read parameters, such as the data source or value age.</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> object. The object contains the value, timestamp 
            and quality of the OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Reads a named item using individual parameters specifying its location, and a specific data type.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> will cause the value 
            be returned in server's canonical data type.</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> object. The object contains the value, timestamp 
            and quality of the OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.BrowsePath.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.BrowsePath.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32)">
            <summary>Reads a named item using individual parameters specifying its location, a specific data type,
            and value age.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> will cause the value 
            be returned in server's canonical data type.</param>
            <param name="valueAge">The age of value you would like to obtain (in milliseconds).</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> object. The object contains the value, timestamp 
            and quality of the OPC item requested.</returns>
            <remarks>
            <para>
            The data source (a device, OPC server's cache, or a value from OPC client component memory cache) is dynamically 
            determined based on the valueAge argument.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a named item using individual parameters specifying its location, and using server's canonical data type. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> object. The object contains the value, timestamp 
            and quality of the OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.GetTypeCode.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.GetTypeCode.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
             <overloads>
             <summary>
             Reads a named item from an OPC server. Only the item value is returned (quality and timestamp are not returned).
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             <para>Use this method if you are only interested in the actual value of the OPC item. Use ReadItem
             method if you also need the quality or timestamp. The ReadItemValue method makes it very easy 
             to obtain the actual data value with just one function call. </para> 
             <para>The ReadItemValue method waits until the quality becomes "good", or the timeout elapses. </para>
             </remarks>
              <example>
              <code 
                  source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.cs" 
                  lang="C#"
                  region="Example"/>
              <code 
                  source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.vb" 
                  lang="VB.NET" title="Visual Basic (VB.NET)"
                  region="Example"/>
              </example>
             </overloads>
            
             <summary>
             Reads a value of named item using descriptor objects for the OPC server and OPC-DA item. 
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="itemDescriptor">The OPC item involved in the operation.</param>
             <returns>If successful, the function returns the actual value of OPC item requested.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
              <example>
              <code 
                  source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.cs" 
                  lang="C#"
                  region="Example"/>
              <code 
                  source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.vb" 
                  lang="VB.NET" title="Visual Basic (VB.NET)"
                  region="Example"/>
              </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads a value of named item using descriptor objects for the OPC server and OPC-DA item, and specifying read
            parameters such as the data source or value age.. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="readParameters">Read parameters, such as the data source or value age.</param>
            <returns>If successful, the function returns the actual value of OPC item requested.</returns>
            <remarks>
            <para>
            The data source (a device, OPC server's cache, or a value from OPC client component memory cache) is determined 
            based on the <paramref name="readParameters"/> argument.</para>
            </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>
            Reads a value of named item using individual parameters specifying its location, and a specific data type. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> will cause the value 
            be returned in server's canonical data type.</param>
            <returns>If successful, the function returns the actual value of OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32)">
            <summary>
            Reads a value of named item using individual parameters specifying its location, a specific data type, and value 
            age. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> will cause the value 
            be returned in server's canonical data type.</param>
            <param name="valueAge">The age of value you would like to obtain (in milliseconds).</param>
            <returns>If successful, the function returns the actual value of OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <remarks>
            <para>
            The data source (a device, OPC server's cache, or a value from OPC client component memory cache) is dynamically 
            determined based on the <paramref name="valueAge"/> argument.</para>
            </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>
            Reads a value of named item using individual parameters specifying its location, using server's canonical data type. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <returns>If successful, the function returns the actual value of OPC item requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor[])">
             <overloads>
             Reads named items from an OPC server or OPC servers. Values, qualities and timestamps are returned. 
             </overloads>
             <remarks>
             <para>The servers can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or
             a specific data type can be requested.</para>
             <para>The ReadMultipleItems method only waits for the first update from the server (or until the timeout elapses)
             for each item; it does not wait until the quality becomes "uncertain" or "good". The function performs all 
             individual operations in parallel, but only returns after all individual operations are completed (or their timeouts 
             elapse).
             </para>
             <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
             related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> element.
             </para>
             </remarks>
            
             <summary>
             Reads multiple named items from a single OPC server, using descriptor objects for the OPC server and OPC-DA items. 
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="itemDescriptorArray">Array of OPC items involved in the operation.</param>
             <returns>The function returns an array of <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> objects. The indices of elements
             in the output array are the same as those in the input array, <paramref name="itemDescriptorArray"/>.</returns>
             <remarks>
             The size of the input array will become the size of the output array. The element positions (indices) in the output 
             array are the same as in the input array. 
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.TimeMeasurements.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.TimeMeasurements.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor[],OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads multiple named items from a single OPC server, using descriptor objects for the OPC server and OPC-DA items,
            and specifying read operation parameters. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptorArray">Array of OPC items involved in the operation.</param>
            <param name="readParameters">Contains parameters for OPC read operations, such as the data source or value age.
            </param>
            <returns>The function returns an array of <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> objects. The indices of elements
            in the output array are the same as those in the input array, <paramref name="itemDescriptorArray"/>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor[])">
             <overloads>
             <summary>
             Reads named items from an OPC server or OPC servers. Only the item values are returned (qualities and timestamps are 
             not returned).
             </summary>
             <remarks>
             <para>The servers can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or 
             a specific data type can be requested.</para>
             <para>The ReadMultipleItemValues method waits until the quality becomes "good", or the timeout elapses, for each 
             item. The function performs all individual operations in parallel, but only returns after all individual operations 
             are completed (or their timeouts elapse).  
             </para>
             <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
             related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> element.
             </para>
             </remarks>
             </overloads>	
            
             <summary>
             Reads multiple named item values from a single OPC server, using descriptor objects for the OPC server and OPC-DA 
             items. 
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="itemDescriptorArray">Array of OPC items involved in the operation.</param>
             <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects. The indices of elements
             in the output array are the same as those in the input array, <paramref name="itemDescriptorArray"/>.</returns>
             <remarks>
             The size of the input array will become the size of the output array. The element positions (indices) in the output 
             array are the same as in the input array. 
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor[],OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Reads multiple named item values from a single OPC server, using descriptor objects for the OPC server and OPC-DA 
            items, and specifying read operation parameters. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptorArray">Array of OPC items involved in the operation.</param>
            <param name="readParameters">Contains parameters for OPC read operations, such as the data source or value age.
            </param>
            <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects. The indices of elements
            in the output array are the same as those in the input array, <paramref name="itemDescriptorArray"/>.</returns>
            <remarks>
            The size of the input array will become the size of the output array. The element positions (indices) in the output 
            array are the same as in the input array. 
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments)">
              <overloads>
              <summary>
              Gets a value of OPC property of a specified OPC item. 
              </summary>
              <example>
              <code 
                  source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main1.cs" 
                  lang="C#"
                  region="Example"/>
              <code 
                  source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main1.vb" 
                  lang="VB.NET" title="Visual Basic (VB.NET)"
                  region="Example"/>
              </example>
              <example>
              <code 
                  source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.DataType.cs" 
                  lang="C#"
                  region="Example"/>
              <code 
                  source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.DataType.vb" 
                  lang="VB.NET" title="Visual Basic (VB.NET)"
                  region="Example"/>
              </example>
              </overloads>
            
              <summary>Gets a value of OPC property using an object that holds all necessary arguments. </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="propertyArguments">Arguments specifying the property to get from the OPC DA server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
             <summary>Gets a value of OPC property, using descriptor object for the OPC server, and a node descriptor. </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyDescriptor">The descriptor of the OPC property involved in the operation.</param>
            <returns>If successful, the function returns the actual value of the OPC property requested.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.DataType.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.DataType.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetPropertyValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId)">
            <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyId">The Property ID of the OPC property being obtained</param>
            <returns>If successful, the function returns the actual value of the OPC property requested.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.DataType.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.DataType.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor[])">
             <overloads>
             <summary>
             Gets values of multiple OPC properties of a specified OPC item. 
             </summary>
             <remarks>
             <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
             related to each property is returned in Exception property of each returned <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> element.
             </para>
             </remarks>
             </overloads>
            
             <summary>
             Gets values of multiple OPC properties, using descriptor objects for the OPC server and node, and specifying 
             an array of property descriptors. 
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
             <param name="propertyDescriptorArray">Array of OPC properties involved in the operation.</param>
             <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects. The indices of elements
             in the output array are the same as those in the input array.</returns>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.DataType.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.DataType.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\GetMultiplePropertyValues.DataTypeXml.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\GetMultiplePropertyValues.DataTypeXml.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor[],OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
            <summary>
            Gets values of multiple OPC properties, using descriptor objects for the OPC server and property, and specifying 
            an array of node descriptors. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptorArray">Array of the OPC nodes involved in the operation.</param>
            <param name="propertyDescriptor">The OPC property involved in the operation.</param>
            <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects. The indices of elements
            in the output array are the same as those in the input array.</returns>
            <remarks>
            Gets the same property from all the nodes.
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.DataType.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.DataType.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\GetMultiplePropertyValues.DataTypeXml.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\GetMultiplePropertyValues.DataTypeXml.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyId[])">
            <summary>
            Gets values of multiple OPC properties, using descriptor object for the OPC server, and a node descriptor. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
            <param name="propertyIdArray">Array of Property IDs being obtained</param>
            <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects. The indices of elements
            in the output array are the same as those in the input array.</returns>
            <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAPropertyId[])">
            <summary>
            Gets values of multiple OPC properties, using individual parameters specifying the OPC server, and OPC Item ID. 
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
            <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
            <param name="propertyIdArray">Array of Property IDs being obtained</param>
            <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects. The indices of elements
            in the output array are the same as those in the input array.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.WriteItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAVtq)">
             <overloads>
             <summary>
             Writes into a named item in an OPC server. Value, quality and timestamp are written. 
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             </remarks>
             </overloads>
            
             <summary>Writes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> into a named item using descriptor objects for the OPC server and OPC-DA item.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="itemDescriptor">The OPC item involved in the operation.</param>
             <param name="vtq">The object containing the value, timestamp and quality to be written.</param>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.WriteItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAVtq,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Writes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> into a named item using individual parameters specifying its location, and 
            a specific data type.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="vtq">The object containing the value, timestamp and quality to be written.</param>
            <param name="dataType">Specifies the data type. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> will cause the value 
            be written using server's canonical data type.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.WriteItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAVtq)">
            <summary>Writes <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq"/> into a named item using individual parameters specifying its location, and using
            server's canonical data type.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="vtq">The object containing the value, timestamp and quality to be written.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.WriteItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Object,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Writes separately given value, timestamp and quality into a named item using individual parameters 
            specifying its location, and a specific data type.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
            <param name="timestamp">The timestamp to be written.</param>
            <param name="quality">The quality to be written.</param>
            <param name="dataType">Specifies the data type. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> will cause the value 
            be written using server's canonical data type.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.WriteItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Object,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQuality)">
            <summary>Writes separately given value, timestamp and quality into a named item using individual parameters 
            specifying its location, and using server's canonical data type.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
            <param name="timestamp">The timestamp to be written.</param>
            <param name="quality">The quality to be written.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.WriteItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments)">
             <overloads>
             <summary>
             Writes a value into a named item in an OPC server. Only the item value is written (quality and timestamp are not 
             written).
             </summary>
             <remarks>
             <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
             specific data type can be requested.</para>
             </remarks>
             </overloads>
            
             <summary>Writes a value into a named item using an object that holds all necessary arguments.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="itemValueArguments">Arguments specifying what and how to write.</param>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.WriteItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,System.Object)">
            <summary>Writes a value into a named item using descriptor objects for the OPC server and OPC-DA item.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item involved in the operation.</param>
            <param name="value">The value to be written.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.WriteItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Object,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Writes a value into a named item using individual parameters specifying its location, and 
            a specific data type.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
            <param name="dataType">Specifies the data type. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> will cause the value 
            be written using server's canonical data type.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.RequestedDataType.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.RequestedDataType.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.WriteItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Object)">
            <summary>Writes a value into a named item using individual parameters specifying its location, and using
            server's canonical data type.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
            <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
            <param name="itemId">Contains OPC item identifier.</param>
            <param name="value">The value to be written.</param>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Array.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Array.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\WriteItemValue.Main1Xml.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\WriteItemValue.Main1Xml.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseServers(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
            <summary>
            Browses the local computer and returns information about OPC (Data Access) servers found.  
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.ServerElement"/> values, each containing information 
            about a particular OPC server found on the specified machine. The keys of the keyed collection are the server's 
            CLSIDs.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseServers(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String)">
            <summary>
            Browses the specified computer and returns information about OPC (Data Access) servers found.  
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="location">Name of the machine. Determines the computer to browse for OPC servers. May be an empty 
            string, in which case the the local computer will be browsed.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.ServerElement"/> values, each containing information 
            about a particular OPC server found on the specified machine. The keys of the keyed collection are the server's 
            CLSIDs.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseBranches(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.String,System.String)">
             <overloads>
             <summary>
             Browses the specified branch (or root) in OPC server's address space, and returns information about child branches 
             found.
             </summary>
             </overloads>
            
             <summary>Browse for child branches. Specify server descriptor, element name filter and vendor filter.</summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="parentNodeDescriptor">Descriptor for the parent branch to be browsed (can be the root).</param>
             <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
             filtering)</param>
             <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
             about a particular branch found. The keys of the keyed collection are the names of the branches.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseBranches(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.String)">
            <summary>Browse for child branches. Specify server descriptor, and element name filter.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="parentNodeDescriptor">Descriptor for the parent branch to be browsed (can be the root).</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular branch found. The keys of the keyed collection are the names of the branches.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseBranches(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>Browse for child branches. Specify server descriptor.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="parentNodeDescriptor">Descriptor for the parent branch to be browsed (can be the root).</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular branch found. The keys of the keyed collection are the names of the branches.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseBranches(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>Browse for child branches at the root. Specify server descriptor.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular branch found. The keys of the keyed collection are the names of the branches.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseBranches(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.String,System.String)">
            <summary>Browse for child branches. Specify machine name, server class, element name filter and vendor filter.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
            <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
            <returns>The method returns a dictionary of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information about
            a particular branch found. The keys of the dictionary are the names of the branches.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseBranches(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.String)">
            <summary>Browse for child branches. Specify machine name, server class, and element name filter.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular branch found. The keys of the keyed collection are the names of the branches.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseBranches(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>Browse for child branches. Specify machine name, and server class.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular branch found. The keys of the keyed collection are the names of the branches.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseBranches(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String)">
            <summary>Browse for child branches at the root. Specify machine name, and server class.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular branch found. The keys of the keyed collection are the names of the branches.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseLeaves(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.String,System.String)">
             <overloads>
             <summary>
             Browses the specified branch (or root) in OPC server's address space, and returns information about child leaves 
             found.  
             </summary>
             </overloads>
            
             <summary>Browse for child leaves. Specify server descriptor, element name filter and vendor filter.</summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="parentNodeDescriptor">Descriptor for the parent branch to be browsed (can be the root).</param>
             <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
             filtering)</param>
             <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
             about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseLeaves(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,System.String)">
            <summary>Browse for child leaves. Specify server descriptor, and element name filter.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="parentNodeDescriptor">Descriptor for the parent branch to be browsed (can be the root).</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseLeaves(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
            <summary>Browse for child leaves. Specify server descriptor.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="parentNodeDescriptor">Descriptor for the parent branch to be browsed (can be the root).</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseLeaves(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>Browse for child leaves at the root. Specify server descriptor.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseLeaves(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.String,System.String)">
            <summary>Browse for child leaves. Specify machine name, server class, element name filter and vendor filter.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
            <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseLeaves(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.String)">
            <summary>Browse for child leaves. Specify machine name, server class, and element name filter.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseLeaves(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
            <summary>Browse for child leaves. Specify machine name, and server class.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseLeaves(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String)">
            <summary>Browse for child leaves at the root. Specify machine name, and server class.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
            about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseNodes(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
             <overloads>
             <summary>
             Browses the specified branch (or root) in OPC server's address space, and returns information about child nodes 
             (both branches and leaves) found.  
             </summary>
             </overloads>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.DataTypes.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.DataTypes.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Recursive.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Recursive.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.RecursiveWithRead.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.RecursiveWithRead.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.RecursiveWithRead.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\BrowseNodes.RecursiveXml.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\BrowseNodes.RecursiveXml.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
            
             <summary>Browse for child nodes. Specify machine name, server class, parent item ID, and node filter.</summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="machineName">Name of the machine (empty string for local computer).</param>
             <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
             <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
             <param name="browseParameters">Contains filtering conditions.</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
             about a particular node found. The keys of the keyed collection are the names of the nodes.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseAccessPaths(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
             <overloads>
             <summary>
             Browses the possible access paths of a specified OPC item.  
             </summary>
             <remarks>Most OPC servers do not use access paths.</remarks>
             </overloads>
            
             <summary>Browse for access paths. Specify machine name, server class, and item ID.</summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="machineName">Name of the machine (empty string for local computer).</param>
             <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
             <param name="itemId">ID of the item for which the access paths will be browsed.</param>
             <returns>The method returns an array of possible access paths to the item. You can use the returned access path e.g.
             as the AccessPath property of <see cref="T:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor"/> object.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.BrowseProperties(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String)">
             <overloads>
             <summary>
             Browses the available properties of a specified OPC item.  
             </summary>
             </overloads>
            
             <summary>Browse for available item properties. Specify machine name, server class, and item ID.</summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="machineName">Name of the machine (empty string for local computer).</param>
             <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
             <param name="itemId">ID of the item for which the properties will be browsed.</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement"/> values, each containing 
             information about a particular property found. The keys of the keyed collection are the IDs of the properties.
             </returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments)">
             <overloads>
             <summary>
             Subscribe to changes of a particular OPC item. The <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> event is generated 
             for each significant item change.
             </summary>
             <remarks>
             <para>It is more efficient to subscribe to multiple items using the <c>SubscribeMultipleItems</c> method.</para>
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main1.cs" 
                 lang="C#"
                 region="Example"/>
              <code 
                  source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main1.vb" 
                  lang="VB.NET" title="Visual Basic (VB.NET)"
                  region="Example"/>
             </example>
             </overloads>
            
             <summary>Subscribe to OPC item using an object that holds all necessary arguments, including an optional
             callback.</summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="easyItemSubscriptionArguments">Arguments specifying how to subscribe to an OPC DA item.</param>
             <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
            <summary>Subscribe to OPC item using an object that holds all necessary arguments.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="itemGroupArguments">Arguments specifying how to subscribe to an OPC DA item.</param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler)">
            <summary>Subscribe to OPC item using an object that holds all necessary arguments, and an optional
            callback.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="itemGroupArguments">Arguments specifying how to subscribe to an OPC DA item.</param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler,System.Object)">
            <summary>Subscribe to OPC item. Specify server and item descriptors, group parameters object,
            callback method, and a user-defined state object.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item to be subscribed to.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="state">The state object (can be any object supplied by your code); available in event notifications.
            </param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.Object)">
            <summary>Subscribe to OPC item. Specify server and item descriptors, and group parameters object.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
            <param name="itemDescriptor">The OPC item to be subscribed to.</param>
            <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
            <param name="state">The state object (can be any object supplied by your code); available in event notifications.
            </param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Single,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler,System.Object)">
            <summary>Subscribe to OPC item. Specify machine name, server class, item ID, data type, requested update rate,
            percent deadband, callback method, and a user-defined state object.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that the 
            server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update</param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any object supplied by your code); available in event notifications.
            </param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Single,System.Object)">
            <summary>Subscribe to OPC item. Specify machine name, server class, item ID, data type, requested update rate,
            and percent deadband.</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that the 
            server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update</param>
            <param name="state">The state object (can be any object supplied by your code); available in event notifications.
            </param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler,System.Object)">
            <summary>Subscribe to OPC item. Specify machine name, server class, item ID, data type, requested update rate,
            callback method, and a user-supplied state object.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that the 
            server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any object supplied by your code); available in event notifications.
            </param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,System.Int32,System.Object)">
            <summary>Subscribe to OPC item. Specify machine name, server class, item ID, data type, and requested update rate.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="dataType">Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> means that the 
            server's canonical data type should be used.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <param name="state">The state object (can be any object supplied by your code); available in event notifications.
            </param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler,System.Object)">
            <summary>Subscribe to OPC item. Specify machine name, server class, item ID, requested update rate, callback
            method, and and a state object.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <param name="state">The state object (can be any object supplied by your code); available in event notifications.
            </param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32,OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler)">
            <summary>Subscribe to OPC item. Specify machine name, server class, item ID, requested update rate, and a callback
            method.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.CallbackLambda.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.CallbackLambda.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\SubscribeItem.CallbackLambdaXml.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\SubscribeItem.CallbackLambdaXml.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32,System.Object)">
            <summary>Subscribe to OPC item. Specify machine name, server class, item ID, requested update rate, and a state
            object.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <param name="state">The state object (can be any object supplied by your code); available in event notifications.
            </param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,System.String,System.Int32)">
            <summary>Subscribe to OPC item. Specify machine name, server class, item ID, and requested update rate.
            No state object is specified (this overload is suitable for simple scenarios only).</summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="machineName">Name of the machine (empty string for local computer).</param>
            <param name="serverClass">Contains ProgID of the OPC server.</param>
            <param name="itemId">ID of the item that will be subscribed to.</param>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
            <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments[])">
             <overloads>
             <summary>Subscribe to changes of multiple OPC items. </summary>
             </overloads>
            
             <summary>
             Subscribe to changes of multiple OPC items. The <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> event will be generated 
             for each significant item change. No callback methods will be invoked.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="itemGroupArgumentsArray">Array of arguments, one element per each OPC item involved in the operation.
             </param>
             <returns>The function returns an array of integer handles. Each such uniquely identifies the item subscription. 
             The indices of elements in the output array are the same as those in the input array, 
             <paramref name="itemGroupArgumentsArray"/>.</returns>
             <remarks>
             The size of the input array will become the size of the output array. The element positions (indices) in the output 
             array are the same as in the input array. 
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.DataTypes.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.DataTypes.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.ManyItems.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.ManyItems.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\UnsubscribeItem.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\UnsubscribeItem.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments[],OpcLabs.EasyOpc.DataAccess.EasyDAItemChangedEventHandler)">
            <summary>
            Subscribe to changes of multiple OPC items with a callback method. The <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> 
            event will be generated for each significant item change, and a specified callback method will be invoked.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="itemGroupArgumentsArray">Array of arguments, one element per each OPC item involved in the operation.
            </param>
            <param name="callback">A callback method to be invoked for each significant item change.</param>
            <returns>The function returns an array of integer handles. Each such uniquely identifies the item subscription. The 
            indices of elements in the output array are the same as those in the input array, 
            <paramref name="itemGroupArgumentsArray"/>.</returns>
            <remarks>
            <para>
            The size of the input array will become the size of the output array. The element positions (indices) in the output 
            array are the same as in the input array. </para>
            <para>
            If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> events are generated, 
            but no callback method is invoked.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ChangeItemSubscription(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.Int32,OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
             <overloads>
             Changes parameters of a subscription to a particular OPC item.
             <remarks>
             <para>It is more efficient to change multiple subscriptions using 
             <see cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])"/> method.</para>
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ChangeItemSubscription.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ChangeItemSubscription.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\ChangeItemSubscription.Main1Xml.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\ChangeItemSubscription.Main1Xml.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             </overloads>
            
             <summary>Changes parameters of a subscription. Specify handle and group parameters.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="handle">Item subscription handle as returned by the SubscribeItem method</param>
             <param name="groupParameters">An object containing new parameters of the subscription</param>
             <remarks>
             <para>It is more efficient to change multiple subscriptions using 
             <see cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])"/> method.</para>
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ChangeItemSubscription.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ChangeItemSubscription.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ChangeItemSubscription.PercentDeadband.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ChangeItemSubscription.PercentDeadband.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\ChangeItemSubscription.Main1Xml.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\ChangeItemSubscription.Main1Xml.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.UnsubscribeItem(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.Int32)">
             <overloads>
             Unsubscribe from changes of a particular OPC item.  
             </overloads>
             <remarks>
             <para>It is more efficient to unsubscribe from multiple items using UnsubscribeMultipleItems method.
             </para>
             <para>The item subscription handle becomes invalid after this method is called.</para>
             </remarks>
            
             <summary>Unsubscribe from OPC item, specifying its handle.
             </summary>
             <param name="client">The client object that will perform the operation.</param>
             <param name="handle">Item subscription handle as returned by the SubscribeItem method</param>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\UnsubscribeItem.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\UnsubscribeItem.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.PullItemChanged(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.Int32)">
            <summary>
            Attempts to pull an OPC item change subscribed to by the <see cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])"/> or
            SubscribeItem method.
            </summary>
            <param name="client">The client object that will perform the operation.</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite"/> (-1) to wait indefinitely.</param>
            <returns>The event arguments, or <c>null</c> if no event is available within the specified time.</returns>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\PullItemChanged.Main1Xml.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\PullItemChanged.Main1Xml.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient">
            <summary>
            Allows simple access to OPC Data Access servers.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.HandleRanges">
            <summary>
            Infrastructure. Gets the handle ranges allocated by this client.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SupportedTechnologies">
            <summary>
            Gets the OPC technologies supported.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.IsKnownItemSubscriptionHandle(System.Int32)">
            <summary>
            Determines whether the given item subscription handle is known to this client.
            </summary>
            <param name="handle">The item subscription handle to be tested.</param>
            <returns>Returns <c>true</c> if the given handle is known to the client (i.e. represents a currently subscribed item).
            Otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
             <overloads>
             Reads named items from an OPC server or OPC servers. Values, qualities and timestamps are returned. 
             </overloads>
             <remarks>
             <para>The servers can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or
             a specific data type can be requested.</para>
             <para>The ReadMultipleItems method only waits for the first update from the server (or until the timeout elapses)
             for each item; it does not wait until the quality becomes "uncertain" or "good". The function performs all 
             individual operations in parallel, but only returns after all individual operations are completed (or their timeouts 
             elapse).
             </para>
             <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
             related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> element.
             </para>
             </remarks>
            
             <summary>
             Reads multiple named items, using array of argument objects as an input. 
             </summary>
             <param name="argumentsArray">Array of arguments, one element per each OPC item involved in the operation.</param>
             <returns>The function returns an array of <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> objects. The indices of elements
             in the output array are the same as those in the input array, <paramref name="argumentsArray"/>.</returns>
             <remarks>
             The size of the input array will become the size of the output array. The element positions (indices) in the output 
             array are the same as in the input array. 
             </remarks>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Main1.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Main.php" 
                 lang="PHP" title="PHP"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Main1.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\ReadMultipleItems.Main1Xml.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\ReadMultipleItems.Main1Xml.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
             <overloads>
             <summary>
             Reads named items from an OPC server or OPC servers. Only the item values are returned (qualities and timestamps are 
             not returned).
             </summary>
             <remarks>
             <para>The servers can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or 
             a specific data type can be requested.</para>
             <para>The ReadMultipleItemValues method waits until the quality becomes "good", or the timeout elapses, for each 
             item. The function performs all individual operations in parallel, but only returns after all individual operations 
             are completed (or their timeouts elapse).  
             </para>
             <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
             related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult"/> element.
             </para>
             </remarks>
             </overloads>	
            
             <summary>
             Reads multiple named item values from a single OPC server, using array of argument objects as an input. 
             </summary>
             <param name="argumentsArray">Array of arguments, one element per each OPC item involved in the operation.</param>
             <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects. The indices of elements
             in the output array are the same as those in the input array, <paramref name="argumentsArray"/>.</returns>
             <remarks>
             The size of the input array will become the size of the output array. The element positions (indices) in the output 
             array are the same as in the input array. 
             </remarks>
             
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])">
            <summary>
            Gets values of multiple OPC properties, specifying an array of property arguments objects. 
            </summary>
            <param name="argumentsArray">Array of arguments, one element per each OPC property involved in the operation.
            </param>
            <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult"/> objects. The indices of elements
            in the output array are the same as those in the input array.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])">
            <summary>
            Writes named items into an OPC server or OPC servers. Values, qualities and timestamps are written. 
            </summary>
            <param name="argumentsArray">Array of argument objects for the operation.</param>
            <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/> objects. The indices of elements
            in the output array are the same as those in the input arrays.</returns>
            <remarks>
            <para>The size of the input array will become the size of the output array. The element positions (indices) in the 
            output array are the same as in the input array. </para>
            <para>The servers can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or 
            a specific data type can be requested.</para>
            <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
            related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/> element.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])">
            <summary>
            Writes values into named items in an OPC server or OPC servers. Only the item values are written (qualities and 
            timestamp are not written).
            </summary>
            <param name="argumentsArray">Array of argument objects for the operation.</param>
            <returns>The function returns an array of <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/> objects. The indices of elements
            in the output array are the same as those in the input arrays.</returns>
            <remarks>
            <para>The size of the input array will become the size of the output array. The element positions (indices) in the 
            output array are the same as in the input array. </para>
            <para>The server can be local or can be remotely accessed via DCOM. Optionally, an access path can be specified or a 
            specific data type can be requested.</para>
            <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
            related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult"/> element.
            </para>
            </remarks>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main.php" 
                lang="PHP" title="PHP"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.RequestedDataType.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.TimeMeasurements.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.TimeMeasurements.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
            <summary>
            Browses the specified computer and returns information about OPC (Data Access) servers found.
            </summary>
            <param name="location">Name of the machine. Determines the computer to browse for OPC servers. May be an empty 
            string, in which case the the local computer will be browsed.</param>
            <param name="technologies">The OPC technologies to be used for server browsing.</param>
            <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.ServerElement"/> values, each containing information 
            about a particular OPC server found on the specified machine. The keys of the keyed collection are the server's 
            <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
            CLSIDs.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
             <overloads>
             <summary>
             Browses the specified branch (or root) in OPC server's address space, and returns information about child nodes 
             (both branches and leaves) found.  
             </summary>
             </overloads>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.DataTypes.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.DataTypes.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Recursive.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Recursive.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.RecursiveWithRead.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.RecursiveWithRead.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.RecursiveWithRead.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
             <example>
             <code 
                 source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\BrowseNodes.RecursiveXml.cs" 
                 lang="C#"
                 region="Example"/>
             <code 
                 source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\BrowseNodes.RecursiveXml.vb" 
                 lang="VB.NET" title="Visual Basic (VB.NET)"
                 region="Example"/>
             </example>
            
             <summary>Browse for child nodes. Specify server descriptor, parent item ID, and node filter.</summary>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="parentNodeDescriptor">Descriptor for the parent branch to be browsed (can be the root).</param>
             <param name="browseParameters">Contains filtering conditions.</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement"/> values, each containing information 
             about a particular node found. The keys of the keyed collection are the names of the nodes.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
             <overloads>
             <summary>
             Browses the possible access paths of a specified OPC item.  
             </summary>
             <remarks>Most OPC servers do not use access paths.</remarks>
             </overloads>
            
             <summary>Browse for access paths. Specify server descriptor, and node descriptor.</summary>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="nodeDescriptor">Descriptor of the node for which the access paths will be browsed.</param>
             <returns>The method returns an array of possible access paths to the item. You can use the returned access path e.g.
             as the AccessPath property of <see cref="T:OpcLabs.EasyOpc.DataAccess.DAItemDescriptor"/> object.</returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
             <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
             <overloads>
             <summary>
             Browses the available properties of a specified OPC item.  
             </summary>
             </overloads>
            
             <summary>Browse for available item properties. Specify server descriptor, and node descriptor.</summary>
             <param name="serverDescriptor">The OPC server involved in the operation.</param>
             <param name="nodeDescriptor">Descriptor of the node for which the properties will be browsed.</param>
             <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DAPropertyElement"/> values, each containing 
             information about a particular property found. The keys of the keyed collection are the IDs of the properties.
             </returns>
             <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">Thrown when the OPC operation fails.</exception>
             <remarks>Using implicit conversions, you can pass an item ID in place of node descriptor.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])">
            <summary>
            Subscribe to changes of multiple OPC items. The <see cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged"/> event will be generated for each 
            significant item change. Callback methods will be invoked if they are specified in the argument objects.
            </summary>
            <param name="itemSubscriptionArgumentsArray">Array of arguments, one element per each OPC item involved in the 
            operation.</param>
            <returns>The function returns an array of integer handles. Each such handle uniquely identifies the item 
            subscription. The indices of elements in the output array are the same as those in the input array, 
            <paramref name="itemSubscriptionArgumentsArray"/>.
            </returns>
            <remarks>
            The size of the input array will become the size of the output array. The element positions (indices) in the output 
            array are the same as in the input array. 
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])">
            <summary>
            Changes parameters of subscriptions to multiple OPC items.
            </summary>
            <param name="argumentsArray">Array of arguments, one element per each OPC item involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})">
            <overloads>
            Unsubscribe from changes of multiple OPC items.  
            </overloads>
            <remarks>
            <para>The item subscription handles becomes invalid after this method is called.</para>
            </remarks>
            
            <summary>Unsubscribe from changes of multiple OPC items, specifying an enumerable of integer handles.
            </summary>
            <param name="handlesToUnsubscribe">Subscription handles. Can be an array.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeAllItems">
            <summary>
            Unsubscribe from changes of all OPC items.
            </summary>
            <remarks>
            All item subscriptions on this <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient"/> object are unsubscribed. Their corresponding handles
            become invalid after this method is called.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)">
            <summary>
            Attempts to pull multiple OPC item changes subscribed to by the <see cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])"/> or SubscribeItem method.
            </summary>
            <param name="maximumCount">Maximum number of event notifications returned.</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite"/> (-1) to wait indefinitely.</param>
            <returns>The event arguments, or <c>null</c> if no event is available within the specified time.</returns>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.EventingFailure">
            <summary>
            Raised when a failure in the eventing infrastructure occurs.
            </summary>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged">
            <summary>
            Raised for every significant change in an OPC item subscribed to by the SubscribeItem method.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClientConsumption">
            <exclude/>
            <summary>
            Provides access to consumption for <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient"/> objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientConsumption.ClientBinding">
            <summary>
            The client binding used for communication with the provider.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientConsumption.ConnectionRetrialPeriod">
            <summary>
            Connection retrial period (in milliseconds).
            </summary>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClientConsumption.ConnectionFaulted">
            <summary>
            Raised when the connection has faulted.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClientDequeuing">
            <summary>
            Provides access to dequeuing for <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient"/> objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientDequeuing.ItemChangedQueueCapacityRequest">
            <summary>
            Requested capacity of the queue for item changes.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientDequeuing.ItemChangedQueuePollingTimeout">
            <summary>
            How long the dequeuer will wait for a new item change. In milliseconds.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClientEnqueuing">
            <summary>
            Provides access to enqueuing for <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient"/> objects.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\PullItemChanged.Main1Xml.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\PullItemChanged.Main1Xml.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientEnqueuing.PullItemChangedQueueCapacity">
            <summary>
            Capacity of the event pull queue for item changes.
            </summary>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main1.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main1.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Net\Examples\CSharp\VS2017\Console\DocExamples\DataAccess\Xml\PullItemChanged.Main1Xml.cs" 
                lang="C#"
                region="Example"/>
            <code 
                source="..\..\Net\Examples\VBNET\VS2017\Console\DocExamples\DataAccess\Xml\PullItemChanged.Main1Xml.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/>
            </example>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClientResiliency">
            <exclude/>
            <summary>
            Provides access to resiliency for <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient"/> objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientResiliency.PullErrorSpinDelay">
            <summary>
            Pull error spin delay (in milliseconds).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientResiliency.TargetStateLost">
            <summary>
            Indicates that the target client has lost its state.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClientSettings">
            <summary>
            Provides access to settings for <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient"/> objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientSettings.InstanceParameters">
            <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientSettings.IsolatedParameters">
            <summary>
            Contains parameters that influence the behavior of the component when it is isolated.
            </summary>
            <remarks>Parameters in this property only apply to instances that have their <see cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientSettings.Isolated"/> property 
            equal to <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClientSettings.Isolated">
            <summary>Specifies that you wish that the object instance works with an "isolated" 
            connection to the OPC server, i.e. one that is not shared with other instances.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DABrowseParameters">
            <summary>Contains filtering conditions for OPC Data Access node browsing.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.DefaultBrowseFilter">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.BrowseFilter"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.DefaultElementNameFilter">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.ElementNameFilter"/>. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.DefaultVendorFilter">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.VendorFilter"/>. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DABrowseParameters"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DABrowseFilter,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType,OpcLabs.EasyOpc.DataAccess.DAAccessRight)">
            <summary>Initializes a new instance of the class, with specified browse filter, element name filter, vendor filter,
            data type filter, and access rights filter.</summary>
            <param name="browseFilter">Specifies which subset of browse elements to return.</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
            <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
            <param name="dataTypeFilter">Specifies the data type filter. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> will cause 
            nodes of all data types be returned.</param>
            <param name="accessRightsFilter">Specifies the access rights filter.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DABrowseFilter,System.String,System.String,OpcLabs.BaseLib.ComInterop.VarType)">
            <summary>Initializes a new instance of the class, with specified browse filter, element name filter, vendor filter,
            and data type filter.</summary>
            <param name="browseFilter">Specifies which subset of browse elements to return.</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
            <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
            <param name="dataTypeFilter">Specifies the data type filter. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty"/> will cause 
            nodes of all data types be returned.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DABrowseFilter,System.String,System.String)">
            <summary>Initializes a new instance of the class, with specified browse filter, element name filter, 
            and vendor filter.</summary>
            <param name="browseFilter">Specifies which subset of browse elements to return.</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
            <param name="vendorFilter">A server specific filter string (empty string for no filtering)</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DABrowseFilter,System.String)">
            <summary>Initializes a new instance of the class, with specified browse filter and element name filter.</summary>
            <param name="browseFilter">Specifies which subset of browse elements to return.</param>
            <param name="elementNameFilter">A wildcard string to filter the returned element names (empty string for no 
            filtering)</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DABrowseFilter)">
            <summary>Initializes a new instance of the class, with specified browse filter.</summary>
            <param name="browseFilter">Specifies which subset of browse elements to return.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DABrowseParameters"/> object.</summary>
            <param name="browseParameters">Contains filtering conditions to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.DefaultAccessRightsFilter">
            <summary>
            Default access rights filter.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.DefaultDataTypeFilter">
            <summary>
            Default data type filter.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.Empty">
            <summary>
            An empty node filter.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.DABrowseParameters,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="nodeFilter1">First object to be compared.</param>
            <param name="nodeFilter2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.DABrowseParameters,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="nodeFilter1">First object to be compared.</param>
            <param name="nodeFilter2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.BrowseFilter">
            <summary>Specifies which subset of browse elements to return (branches, leaves, or both).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.ElementNameFilter">
            <summary>A wildcard string to filter the returned element names (empty string for no filtering).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.VendorFilter">
            <summary>A server specific filter string (empty string for no filtering).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.DataTypeFilter">
            <summary>Specifies to only return nodes of certain data type. Use Empty for no filtering.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.AccessRightsFilter">
            <summary>Specifies to only return nodes with certain access rights. Use None for no filtering.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.OpcLabs#EasyOpc#DataAccess#ComTypes#_DABrowseParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DABrowseParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.ResetAccessRightsFilter">
            <summary>
            Resets the <see cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.AccessRightsFilter"/> to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.ShouldSerializeAccessRightsFilter">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.AccessRightsFilter"/> differs from its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.ResetDataTypeFilter">
            <summary>
            Resets the <see cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.DataTypeFilter"/> to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.ShouldSerializeDataTypeFilter">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.DABrowseParameters.DataTypeFilter"/> differs from its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAGroupParameters">
            <summary>Contains subscription parameters, such as the requested update rate.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.DefaultLocale">
            <summary>
            Default locale. Equals to zero.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.DefaultPercentDeadband">
            <summary>
            Default percent deadband. Equals to zero (0.0).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.DefaultRequestedUpdateRate">
            <summary>
            Default requested update rate. Equals to <see cref="F:System.Threading.Timeout.Infinite"/>, i.e. no implicit updates.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAGroupParameters"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
            <summary>Initializes a new instance of the class with data from other group parameters object.</summary>
            <param name="groupParameters">The group parameters to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.#ctor(System.Int32,System.Single,System.Int64)">
            <summary>Initializes a new instance of the class, with specified update rate, percent deadband, and locale.
            </summary>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update.</param>
            <param name="locale">The language to be used by the server when returning values.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.#ctor(System.Int32,System.Single)">
            <summary>Initializes a new instance of the class, with specified update rate and percent deadband.</summary>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
            <param name="percentDeadband">The percent change in an item value that will cause an update.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.#ctor(System.Int32)">
            <summary>Initializes a new instance of the class, with specified update rate.</summary>
            <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Default">
            <summary>
            Default group parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Fast">
            <summary>
            Fast group parameters.
            </summary>
            <remarks>
            The requested update rate is 200 milliseconds.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Normal">
            <summary>
            Group parameters with normal rate.
            </summary>
            <remarks>
            The requested update rate is 1 second.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Slow">
            <summary>
            Slow group parameters.
            </summary>
            <remarks>
            The requested update rate is 5 seconds.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.VeryFast">
            <summary>
            Very fast group parameters.
            </summary>
            <remarks>
            The requested update rate is 50 milliseconds.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.VerySlow">
            <summary>
            Very slow group parameters.
            </summary>
            <remarks>
            The requested update rate is 20 seconds.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.DAGroupParameters,OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.DAGroupParameters,OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.op_Implicit(System.Int32)~OpcLabs.EasyOpc.DataAccess.DAGroupParameters">
            <summary>
            Converts an integer value denoting the requested update rate (in milliseconds) to the group parameters object.
            </summary>
            <param name="requestedUpdateRate">The requested update rate - how often should the updates be received (number of 
            milliseconds).</param>
            <returns>The group parameters with the requested update rate.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.FromInt32(System.Int32)">
            <summary>
            Converts an integer value denoting the requested update rate (in milliseconds) to the group parameters object.
            </summary>
            <param name="requestedUpdateRate">The requested update rate - how often should the updates be received (number of 
            milliseconds).</param>
            <returns>The group parameters with the requested update rate.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Locale">
            <summary>Gets or sets the language to be used by the server when returning values.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.RequestedUpdateRate">
            <summary>Gets or sets the requested update rate.</summary>
            <remarks>
            <para>How often should the updates be received (number of milliseconds).</para>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.PercentDeadband">
            <summary>Gets or sets the percent change in an item value that will cause an update.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Equals(OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.DAGroupParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.DAGroupParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.PropertyChanged">
            <summary>
            Raised when a property is changed on a component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.ReadStringList(System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.OpcLabs#EasyOpc#DataAccess#ComTypes#_DAGroupParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAGroupParameters.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.OpcLabs#EasyOpc#DataAccess#ComTypes#_DAGroupParameters#Locale">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.Locale"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.GetRequestedUpdateRateDefault">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters">
            <summary>
            Contains parameters for OPC read operations, such as the data source or value age.
            </summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.DeviceSource.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAReadParameters.DefaultDataSource">
            <summary>
            The default data source. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.DADataSource.ByValueAge"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.DataAccess.DAReadParameters.DefaultValueAge">
            <summary>
            The default value age (in milliseconds). Equals to 1000, i.e. 1 second.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/> object.</summary>
            <param name="readParameters">The read parameters (such as data source or value age).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DADataSource,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/> object from a given DADataSource
            and a value age.</summary>
            <param name="dataSource">Selects the data source for OPC reads (from device, from OPC cache, or dynamically determined).</param>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DADataSource)">
            <summary>Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/> object from a given DADataSource.</summary>
            <param name="dataSource">Selects the data source for OPC reads (from device, from OPC cache, or dynamically determined).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/> object from a given value age.</summary>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAReadParameters.CacheSource">
            <summary>
            Read parameters that specify the cache data source.
            </summary>
            <remarks>
            OPC reads will be fulfilled from the cache in the OPC server.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAReadParameters.Default">
            <summary>
            Default read parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAReadParameters.DeviceSource">
            <summary>
            Read parameters that specify the device data source.
            </summary>
            <remarks>
            OPC reads will be fulfilled from the device by the OPC server.
            </remarks>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.DeviceSource.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.DAReadParameters,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.DAReadParameters,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.op_Implicit(OpcLabs.EasyOpc.DataAccess.DADataSource)~OpcLabs.EasyOpc.DataAccess.DAReadParameters">
            <summary>Converts a DADataSource to a DAReadParameters object.</summary>
            <param name="dataSource">Selects the data source for OPC reads (from device, from OPC cache, or dynamically determined).</param>
            <returns>Returns a DAReadParameters object converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.op_Implicit(System.Int32)~OpcLabs.EasyOpc.DataAccess.DAReadParameters">
            <summary>Converts a value age (integer, in milliseconds) to a DAReadParameters object.</summary>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a DAReadParameters object converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.FromDADataSource(OpcLabs.EasyOpc.DataAccess.DADataSource)">
            <summary>Converts a DADataSource to a DAReadParameters object.</summary>
            <param name="dataSource">Selects the data source for OPC reads (from device, from OPC cache, or dynamically determined).</param>
            <returns>Returns a DAReadParameters object converted from the input argument.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.FromInt32(System.Int32)">
            <summary>Converts a value age (integer, in milliseconds) to a DAReadParameters object.</summary>
            <param name="valueAge">Determines the age of value you would like to obtain (in milliseconds).</param>
            <returns>Returns a DAReadParameters object converted from the input argument.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAReadParameters.DataSource">
            <summary>Selects the data source for OPC reads (from device, from OPC cache, or dynamically determined).</summary>
            <example>
            <code 
                source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.DeviceSource.vbs" 
                lang="VBScript" title="VBScript"
                region="Example"/>
            </example>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAReadParameters.ValueAge">
            <summary>Determines the age of value you would like to obtain (in milliseconds).</summary>
            <remarks>
            <para>This value is significant only when the <see cref="P:OpcLabs.EasyOpc.DataAccess.DAReadParameters.DataSource"/> property is set to 
            ByValueAge. </para>
            <para>The value must be greater than or equal to zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            <para>When the value is <see cref="F:System.Threading.Timeout.Infinite"/>, the value will always be provided from 
            the memory, i.e. without actually accessing the OPC server.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.Equals(OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.DataAccess.DAReadParameters.PropertyChanged">
            <summary>
            Handler for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.DAReadParameters.OpcLabs#EasyOpc#DataAccess#ComTypes#_DAReadParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._DAReadParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.DAReadParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.InformationModel.NamespaceDoc">
            <summary>
            This namespace contains classes used for modeling of OPC Data Access (OPC-DA) information.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.Null">
            <summary>
            Represents the null model node.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.op_Equality(OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor,OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.op_Inequality(OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor,OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="first">First object to be compared.</param>
            <param name="second">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.Equals(OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ResetNodeDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.NodeDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ShouldSerializeNodeDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.NodeDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ResetPropertyDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.PropertyDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ShouldSerializePropertyDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.PropertyDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ResetServerDescriptor">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ServerDescriptor"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ShouldSerializeServerDescriptor">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.InformationModel.DAModelNodeDescriptor.ServerDescriptor"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.DataAccess.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.DataAccess.NamespaceDoc">
            <summary>
            This namespace contains classes that facilitate easy work with OPC Data Access.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.Resource1.ResultException_CreateMessage_ResultIsUnsuccessful_TextFormat">
            <summary>
              Looks up a localized string similar to OPC NET API failure result &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.Resource1.ToOperationResult_ExceptionOccurred_Text">
            <summary>
              Looks up a localized string similar to An exception occurred during processing in a NET API OPC Data Access client. The inner exception contains details about the problem..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for classes that are used by the engine for OPC "Classic" specifications (COM/DCOM, and XML based). 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.Engine.EasyClientParameters"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.ClientReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ClientReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.ExecutionContext">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ExecutionContext"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.ServerFailedReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerFailedReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.ServerShutdownReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerShutdownReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.ServerStatusCheckPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerStatusCheckPeriod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.TurnOffActivationSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffActivationSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.TurnOffCallSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffCallSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.UseCustomSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.UseCustomSecurity"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.Engine.EasyEngineParameters"/> to COM Engines.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.AutoAdjustmentPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.AutoAdjustmentPeriod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.GarbageCollectionPeriod">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.GarbageCollectionPeriod"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.WorkerSleepDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.WorkerSleepDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.DefaultEventQueueSize">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DefaultEventQueueSize"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.Engine.EasyMachineParameters"/> to COM Machines.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.StandardName">
            <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.ExecutionContext">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.ExecutionContext"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.MachineReconnectDelay">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.MachineReconnectDelay"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.TurnOffActivationSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.TurnOffActivationSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.UseCustomSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.UseCustomSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.TurnOffCallSecurity">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.TurnOffCallSecurity"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.BrowseViaCategories">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.BrowseViaCategories"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.BrowseFromRegistry">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.BrowseFromRegistry"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.EasyClientParameters">
            <summary>
            Contains parameters that influence operations that target a specific OPC server a whole.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyClientParameters.DefaultClientReconnectDelay">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ClientReconnectDelay"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyClientParameters.DefaultExecutionContext">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ExecutionContext"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyClientParameters.DefaultServerFailedReconnectDelay">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerFailedReconnectDelay"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyClientParameters.DefaultServerShutdownReconnectDelay">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerShutdownReconnectDelay"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyClientParameters.DefaultServerStatusCheckPeriod">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerStatusCheckPeriod"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyClientParameters.DefaultTurnOffActivationSecurity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffActivationSecurity"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyClientParameters.DefaultTurnOffCallSecurity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffCallSecurity"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyClientParameters.DefaultUseCustomSecurity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.UseCustomSecurity"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.#ctor(OpcLabs.EasyOpc.Engine.EasyClientParameters)">
            <param name="clientParameters">Client parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.op_Equality(OpcLabs.EasyOpc.Engine.EasyClientParameters,OpcLabs.EasyOpc.Engine.EasyClientParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="clientParameters1">First object to be compared.</param>
            <param name="clientParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.op_Inequality(OpcLabs.EasyOpc.Engine.EasyClientParameters,OpcLabs.EasyOpc.Engine.EasyClientParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="clientParameters1">First object to be compared.</param>
            <param name="clientParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ClientReconnectDelay">
            <summary>
            Client reconnect delay. Number of milliseconds. 
            If operations on specific OPC server are found to be failing, the server is disconnected, and further connection is
            retried only after the client reconnect delay elapses.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ExecutionContext">
            <summary>
            Indicates execution contexts in which the OPC server object is to be run.
            </summary>
            <value>
            Corresponds to COM <a href="http://msdn.microsoft.com/en-us/library/ms693716(VS.85).aspx">CLSCTX</a>.
            </value>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerFailedReconnectDelay">
            <summary>
            Server failed reconnect delay. Number of milliseconds. 
            If the OPC server indicates that vendor specific fatal error has occurred within the server, the server is 
            disconnected, and further connection is retried only after this delay elapses.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerShutdownReconnectDelay">
            <summary>
            Server shutdown reconnect delay. Number of milliseconds. 
            If the OPC server indicates that it needs to shutdown, the server is disconnected, and further connection is retried
            only after this delay elapses.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ServerStatusCheckPeriod">
            <summary>
            Server status check period. Number of milliseconds. 
            Determines how often the system periodically checks the status of the OPC server (by calling IOPCServer::GetStatus
            method).
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            <para>
            This parameters has effect in both OPC Classic and OPC XML-DA.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffActivationSecurity">
            <summary>
            Indicates that activation security should be turned off when the OPC server object is created.
            </summary>
            <remarks>
            For more information, see 
            <a href="http://msdn.microsoft.com/en-us/library/ms680560(VS.85).aspx">Turning Off Activation Security</a>
            in MSDN.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.TurnOffCallSecurity">
            <summary>
            Sets the authentication level for COM object access to None.
            </summary>
            <remarks>This settings has effect only when <see cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.UseCustomSecurity"/> is <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.UseCustomSecurity">
            <summary>
            Indicates that custom security settings should be used for COM object access.
            </summary>
            <remarks>
            When <c>true</c>, the COM security settings of the application are controlled by the application itself, and are 
            not influenced by the settings specified in DCOM Configuration. Unless specified otherwise, access is allowed to 
            everyone, authentication level is set to Connect and the impersonation level is set to Impersonate.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.Engine.EasyClientParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.OpcLabs#EasyOpc#Engine#ComTypes#_EasyClientParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyClientParameters.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.OpcLabs#EasyOpc#Engine#ComTypes#_EasyClientParameters#ExecutionContext">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyClientParameters.ExecutionContext"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.Equals(OpcLabs.EasyOpc.Engine.EasyClientParameters)">
            <summary>
            Infrastructure.
            </summary>
            <param name="clientParameters">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyClientParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.EasyEngineParameters">
            <summary>
            Contains parameters that are perpetually shared among all instances of engine objects.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DefaultDefaultEventQueueSize">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DefaultEventQueueSize"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DefaultAutoAdjustmentPeriod">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.AutoAdjustmentPeriod"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DefaultGarbageCollectionPeriod">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.GarbageCollectionPeriod"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DefaultWorkerSleepDelay">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.WorkerSleepDelay"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.#ctor(OpcLabs.EasyOpc.Engine.EasyEngineParameters)">
            <param name="engineParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.op_Equality(OpcLabs.EasyOpc.Engine.EasyEngineParameters,OpcLabs.EasyOpc.Engine.EasyEngineParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="engineParameters1">First object to be compared.</param>
            <param name="engineParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.op_Inequality(OpcLabs.EasyOpc.Engine.EasyEngineParameters,OpcLabs.EasyOpc.Engine.EasyEngineParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="engineParameters1">First object to be compared.</param>
            <param name="engineParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.AutoAdjustmentPeriod">
            <summary>
            Auto adjustment period. Number of milliseconds. Specifies how often the engine automatically adjusts the parameters 
            (such as update rate) of OPC items to match the observed usage pattern (e.g. the frequency of reading the item).
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.GarbageCollectionPeriod">
            <summary>
            Garbage collection period. Number of milliseconds. Specifies how often the engine reviews the connected OPC servers 
            and items and disconnects from those that are no longer needed.
            </summary>
            <remarks>
            <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite"/>.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.WorkerSleepDelay">
            <summary>
            Worker sleep delay. Number of milliseconds. Specifies how often the engine checks the need to perform tasks such 
            garbage collection, rate adjustment, and final cleanup.
            </summary>
            <remarks>
            <para>The value must be greater than zero.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DefaultEventQueueSize">
            <summary>
            Default event queue size.
            The maximum size of the queue each client object uses to temporarily hold generated events before 
            they are consumed by the application. Events that do not fit into the queue will be lost. You should set the size to 
            a number that is sufficient to cope with the difference between the rate events are generated and the rate your 
            application is able to consume them.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.Engine.EasyEngineParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyEngineParameters.OpcLabs#EasyOpc#Engine#ComTypes#_EasyEngineParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyEngineParameters.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.Equals(OpcLabs.EasyOpc.Engine.EasyEngineParameters)">
            <summary>
            Infrastructure.
            </summary>
            <param name="engineParameters">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyEngineParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.EasyMachineParameters">
            <summary>
            Contains parameters related to operations that target a specific computer but not a specific OPC server, such as 
            browsing for OPC servers using various methods.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyMachineParameters.DefaultBrowseFromRegistry">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.BrowseFromRegistry"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyMachineParameters.DefaultBrowseViaCategories">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.BrowseViaCategories"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyMachineParameters.DefaultExecutionContext">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.ExecutionContext"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyMachineParameters.DefaultMachineReconnectDelay">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.MachineReconnectDelay"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyMachineParameters.DefaultTurnOffActivationSecurity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.TurnOffActivationSecurity"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyMachineParameters.DefaultTurnOffCallSecurity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.TurnOffCallSecurity"/> property.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Engine.EasyMachineParameters.DefaultUseCustomSecurity">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.UseCustomSecurity"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.#ctor(OpcLabs.EasyOpc.Engine.EasyMachineParameters)">
            <param name="machineParameters">Machine parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.Default">
            <summary>
            Default machine parameters.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.op_Equality(OpcLabs.EasyOpc.Engine.EasyMachineParameters,OpcLabs.EasyOpc.Engine.EasyMachineParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="machineParameters1">First object to be compared.</param>
            <param name="machineParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.op_Inequality(OpcLabs.EasyOpc.Engine.EasyMachineParameters,OpcLabs.EasyOpc.Engine.EasyMachineParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="machineParameters1">First object to be compared.</param>
            <param name="machineParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.ExecutionContext">
            <summary>
            Indicates execution contexts in which the OPCEnum object is to be run.
            </summary>
            <value>
            Corresponds to COM <a href="http://msdn.microsoft.com/en-us/library/ms693716(VS.85).aspx">CLSCTX</a>.
            </value>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.MachineReconnectDelay">
            <summary>
            Machine reconnect delay. Number of milliseconds. 
            If operations on specific computer are found to be failing, they will not be re-tried until the machine reconnect 
            delay elapses.
            </summary>
            <remarks>
            <para>The value must be greater than or equal to zero.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.TurnOffActivationSecurity">
            <summary>
            Indicates that activation security should be turned off when the OPCEnum object is created.
            </summary>
            <remarks>
            For more information, see 
            <a href="http://msdn.microsoft.com/en-us/library/ms680560(VS.85).aspx">Turning Off Activation Security</a>
            in MSDN.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.UseCustomSecurity">
            <summary>
            Indicates that custom security settings should be used for COM object access.
            </summary>
            <remarks>
            When <c>true</c>, the COM security settings of the application are controlled by the application itself, and are 
            not influenced by the settings specified in DCOM Configuration. Unless specified otherwise, access is allowed to 
            everyone, authentication level is set to Connect and the impersonation level is set to Impersonate.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.TurnOffCallSecurity">
            <summary>
            Sets the authentication level for COM object access to None.
            </summary>
            <remarks>This settings has effect only when <see cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.UseCustomSecurity"/> is <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.BrowseViaCategories">
            <summary>
            Allows use of OPCEnum object (local or remote) when browsing for OPC servers.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.BrowseFromRegistry">
            <summary>
            Allows direct registry access (local or remote) when browsing for OPC servers.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.OpcLabs#EasyOpc#Engine#ComTypes#_EasyMachineParameters#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.ComTypes._EasyMachineParameters.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.OpcLabs#EasyOpc#Engine#ComTypes#_EasyMachineParameters#ExecutionContext">
            <inheritdoc cref="P:OpcLabs.EasyOpc.Engine.EasyMachineParameters.ExecutionContext"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="E:OpcLabs.EasyOpc.Engine.EasyMachineParameters.PropertyChanged">
            <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.Equals(OpcLabs.EasyOpc.Engine.EasyMachineParameters)">
            <summary>
            Infrastructure.
            </summary>
            <param name="machineParameters">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.WriteXmlElement(System.Xml.XmlWriter)">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.EasyMachineParameters.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.NamespaceDoc">
            <summary>
            This namespace contains classes that are used by the engine for OPC "Classic" specifications (COM/DCOM, and XML based). 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.NetApiException">
            IMPROVE: better summary
            <summary>
            Indicates that Net Api return invalid response or any exception occured during processing the request.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.NetApiException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class with a specified message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.NetApiException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception 
            that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.NetApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:System.Exception"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Engine.NetApiResultException">
            IMPROVE: better summary
            <summary>
            Indicates that Net API return failed result.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.NetApiResultException.#ctor(Opc.IResult)">
            <summary>
            Initializes a new instance of the class with a specified result.
            </summary>
            <param name="result"> </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.NetApiResultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:System.Exception"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.NetApiResultException.Code">
            <summary>
            Get a value that specifies a result code.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.NetApiResultException.QualifiedName">
            <summary>
            Identifies result code by a qualified name.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Engine.NetApiResultException.DiagnosticInfo">
            <summary>
            Represents vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Engine.NetApiResultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NamespaceDoc">
            <summary>
            This namespace contains classes that implement OPC "Classic".
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NamespaceDoc">
            <summary>
            This namespace contains classes that implement OPC Data Access using OPC NET API code.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiCacheEventArgs">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaItemSubscriptionArguments">
            <exclude/> 
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaItemSubscriptionArguments.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaItemSubscriptionArguments.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyDAClient">
            <exclude/> 
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyDAClient.AdaptableParameters">
            <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyDAClient.SharedParameters">
            <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyDAClient.CheckException(System.Exception,System.Boolean)">
            <summary>
            Throw exception if contains Coding Error. Else if method is other IEasyDAClient method throw OpcException. Else return exception.
            </summary>
            <param name="exception"> </param>
            <param name="isOtherMethod">Other method is method which no returning OperationResult nor raising event.</param>
            <returns> </returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApi">
            <exclude/> 
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApi.ToDAVtqResult(System.Object,Opc.Da.ItemValueResult,System.Int32,OpcLabs.EasyOpc.OpcTechnologies)">
            <summary>
            Converts Opc.Da.ItemValueResult to DAVtqResult.
            DAVtqResult value is CLS-compliant.
            </summary>
            <param name="state"> </param>
            <param name="itemValueResult"> </param>
            <param name="operationErrorCode"> </param>
            <param name="technology"> </param>
            <returns> </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApi.ToDAVtqResult(System.Object,Opc.Da.ItemValue,OpcLabs.BaseLib.OperationModel.OperationResult,System.Int32,OpcLabs.EasyOpc.OpcTechnologies)">
            <summary>
            Converts Opc.Da.ItemValue and OperationResult to DAVtqResult.
            DAVtqResult value is CLS-compliant.
            </summary>
            <param name="state"> </param>
            <param name="itemValue"> </param>
            <param name="operationResult"> </param>
            <param name="operationErrorCode"> </param>
            <param name="technology"> </param>
            <returns> </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApi.ToValueResult(System.Object,Opc.Da.ItemValue,OpcLabs.BaseLib.OperationModel.OperationResult,System.Int32,System.Boolean)">
            <summary>
            Converts Opc.Da.ItemValue and OperationResult to ValueResult.
            ValueResult value is CLS-compliant.
            </summary>
            <param name="state"> </param>
            <param name="itemValue"> </param>
            <param name="operationResult"> </param>
            <param name="operationErrorCode"> </param>
            <param name="isDataType">Indicates whether null converts to VarTypes.Empty.</param>
            <returns> </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApi.ToDAVtq(Opc.Da.ItemValue,OpcLabs.EasyOpc.OpcTechnologies)">
            <summary>
            Converts Opc.Da.ItemValue to DAVtq.
            Exceptions: InvalidCastException
            </summary>
            <param name="itemValue"> </param>
            <param name="technology"> </param>
            <returns> </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApi.SetItemParameters(Opc.Da.Item,OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
            <summary>
            
            </summary>
            <param name="item"> </param>
            <param name="groupParameters"> </param>
            <returns>Returns mask that indicates which items was modified.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApi.SetGroupParameters(OpcLabs.EasyOpc.DataAccess.DAGroupParameters,Opc.Da.Item)">
            <summary>
            
            </summary>
            <param name="groupParameters"> </param>
            <param name="item"> </param>
            <returns>Returns value indicating whether any groupParameter is changed.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.OpcNetApiHelper">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiItemArguments">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiItemSubscriptionState">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey">
            <exclude/> 
            <summary>
            Represents key of nodes with same properties on one server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey.MakeMultipleKeyList(System.Collections.Generic.IList{OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments})">
            <summary>
            Makes consolidated list of multiple properties key. One key represents nodes with same properties on one server.
            </summary>
            <param name="argumentsArray"> </param>
            <returns> </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey.GetMultipleKey(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments,System.Collections.Generic.List{OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey})">
            <summary>
            Makes single key of propertyArguments and return related multiple key from multipleKeys.
            </summary>
            <param name="propertyArguments"> </param>
            <param name="multipleKeys"> </param>
            <returns> </returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer">
            <exclude/> 
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.#ctor(System.Net.WebProxy,OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerKey,System.Action{OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer},OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
            <summary>
            
            </summary>
            <param name="proxy"> </param>
            <param name="serverKey"> </param>
            <param name="destroyOpcServer">This action is called when NetApiOpcDaServer has no server link for detach time interval. Action would be dispose NetApiOpcDaServer. Action is method of object, which controls NetApiOpcDaServer.</param>
            <param name="adaptableParameters"></param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.ServerLinkDisposed(OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerLink,System.Int32)">
            <summary>
            
            </summary>
            <param name="link"> </param>
            <param name="serverDetach">After a server object is detached, connection to the OPC server will be maintained at least for the time period specified here.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer._server">
            <summary>
            Represent a Opc.Da.Server. During operation must be locked by _serverLock.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer._proxy">
            <summary>
            The default web proxy for the application - uses IE settings if null.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer._holdTick">
            <summary>
            When was last HoldFor called. Must be used lock(_links).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer._holdPeriod">
            <summary>
            How much ticks after _holdTick will be held connection to server. Must be used lock (_links).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.CreateServerForURL(Opc.URL,OpcLabs.EasyOpc.OpcTechnologies@)">
            <summary>
            Creates a server object for the specified URL.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.ConnectToServer(System.Net.WebProxy,Opc.Server,System.Net.NetworkCredential,System.String,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
            <summary>
            Called to connect to a server. Before call must be locked _serverLock.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.HoldFor(System.Int32)">
            <summary>
            Sets new hold period. 
            Remark: Must be used lock(_links).
            </summary>
            <param name="period"> </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.IsHeldAt(System.Int64)">
            <summary>
            Indicates whether hold period has not expired yet.
            Remark: Must be used lock(_links).
            </summary>
            <param name="tickCount"> </param>
            <returns> </returns>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.LOCALE_SYSTEM_DEFAULT">
            <summary>
            The constant used to selected the default locale.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.ToLocale(System.Int32,System.Exception@)">
            <summary>
            Converts a LCID to a Locale string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.GetLocale(System.String)">
            <summary>
            Converts a Locale string to a LCID.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.GetServer(System.Exception@)">
            <summary>
            Remark: Must be used lock(server_lock) in caller.
            </summary>
            <param name="exception"> </param>
            <returns> </returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerLink">
            <exclude/> 
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerLink.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerLink.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState">
            <exclude/> 
            <summary>
            The set of possible server states.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.Unknown">
            <summary>
            The server state is not known.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.Running">
            <summary>
            The server is running normally.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.Failed">
            <summary>
            The server is not functioning due to a fatal error.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.NoConfig">
            <summary>
            The server cannot load its configuration information.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.Suspended">
            <summary>
            The server has halted all communication with the underlying hardware.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.Test">
            <summary>
            The server is disconnected from the underlying hardware.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.CommFault">
            <summary>
            The server cannot communicate with the underlying hardware.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.Unrecognized">
            <summary>
            Server state is unrecognized.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.Shutdown">
            <summary>
            The server is shutdown.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.UnexpectedValue">
            <summary>
            Server state returned unexpected value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerState.Exception">
            <summary>
            Server state returned exception.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerStatus">
            <exclude/> 
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerStatus.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerStatus.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerStatus.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServerStatusEventArgs">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription">
            <exclude/> 
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription.Equals(OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerCache">
            <exclude/> 
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerCache._servers">
            <summary>
            Remarks: Must be locked before using.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerCache._proxy">
            <summary>
            The default web proxy for the application - uses IE settings if null.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerKey">
            <exclude/> 
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerKey.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerKey.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerKey.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerKey.Equals(OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcServerKey)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiPropertyArguments">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiSubscription">
            <exclude/> 
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiSubscription.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiSubscription.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiSubscriptionGlobalParameters">
            <exclude/> 
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiSubscriptionGlobalParameters.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiSubscriptionGlobalParameters.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiSubscriptionGlobalParameters.Equals(OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiSubscriptionGlobalParameters)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiSubscriptionHandleManager">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.OpcDaItemEqualityComparer">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.SortedListWithSameKey`2">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.TickCountWithPeriod">
            <exclude/> 
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.CheckServerDescriptor_NotExpectedServerDescriptor_TextFormat">
            <summary>
              Looks up a localized string similar to Server descriptor in the NET API OPC Data Access client does not belong to the server &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_BrowseServers_OPCCOMNotImplemented_TextFormat">
            <summary>
              Looks up a localized string similar to Cannot browse for OPC COM servers on &quot;{0}&quot;. Discovering OPC COM servers is not currently implemented in the NET API OPC Data Access client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_BrowseServers_OPCXMLDANotSupported_TextFormat">
            <summary>
              Looks up a localized string similar to Cannot browse for OPC XML servers on &quot;{0}&quot;. Discovering OPC XML-DA servers is not supported. The OPC XML-DA specification does not define a mechanism to detect OPC XML-DA servers on a specific location..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_ChangeMultipleItemSubscriptions_UnknownHandle_TextFormat">
            <summary>
              Looks up a localized string similar to Attempt to change an item subscription using an unknown handle {0} at index {1} in NET API OPC Data Access client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_CheckAllowedMode_NotSupportedAsynchronousMethod_Text">
            <summary>
              Looks up a localized string similar to Asynchronous OPC operations are not supported by the NET API OPC Data Access client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_CheckException_OPCEceptionMessage_TextFormat">
            <summary>
              Looks up a localized string similar to An OPC operation failure occurred in the NET API OPC Data Access client. The inner exception contains details about the problem..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_CheckNodeDescriptor_IsNull_Text">
            <summary>
              Looks up a localized string similar to Node descriptor passed to a NET API OPC Data Access client operation is a null descriptor..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_CheckPropertyDescriptor_IsNull_Text">
            <summary>
              Looks up a localized string similar to Property descriptor passed to a NET API OPC Data Access client operation is a null descriptor..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_CheckServerDescriptor_IsNull_Text">
            <summary>
              Looks up a localized string similar to Server descriptor passed to a NET API OPC Data Access client operation is a null descriptor..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_CheckServerDescriptor_NotSupportedTechnology_TextFormat">
            <summary>
              Looks up a localized string similar to Technology &quot;{0}&quot; is not supported by the NET API OPC Data Access client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_UnsubscribeMultipleItems_UnknownHandle_TextFormat">
            <summary>
              Looks up a localized string similar to Attempt to unsubscribe an item subscription using an unknown handle {0} at index {1} in NET API OPC Data Access client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiItemArgument_NotReturnedGoodQuality_Text">
            <summary>
              Looks up a localized string similar to Read in OPC NET API (DataAccess) has not returned data with good quality..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServer_CreateServerForUrl_UnsupportedScheme_TextFormat">
            <summary>
              Looks up a localized string similar to Scheme &quot;{0}&quot; used in URL &quot;{1}&quot; is not supported in NET API OPC Data Access client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServer_CreateSubscriptionReturnedNull_Text">
            <summary>
              Looks up a localized string similar to CreateSubscription in OPC NET API (DataAccess) has returned null..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServer_ISubscription_GetStateReturnedNull_Text">
            <summary>
              Looks up a localized string similar to GetState in OPC NET API (DataAccess) has returned null..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServer_ISubscription_ModifyStateReturnedNull_Text">
            <summary>
              Looks up a localized string similar to ModifyState in OPC NET API (DataAccess) has returned null..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServer_ToLocale_InvalidLCID_TextFormat">
            <summary>
              Looks up a localized string similar to LCID {0} is invalid in NET API OPC Data Access client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServerStatus_CannotDetermineStatus_Text">
            <summary>
              Looks up a localized string similar to Cannot determine server status in OPC NET API Data Access client. The inner exception contains details about the problem..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServerStatus_StatusIsBad_TextFormat">
            <summary>
              Looks up a localized string similar to OPC server has returned status: &apos;{0}&apos;. Problem details (status info): {1}.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_GetProperties_ReturnsBadCountOfItems_Text">
            <summary>
              Looks up a localized string similar to GetProperties in OPC NET API (DataAccess) has returned an incorrect item count..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_ReadMultipleItemsFromOneServer_NoResultsReturns_Text">
            <summary>
              Looks up a localized string similar to Read in OPC NET API (DataAccess) has returned no results..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_ReadMultipleItemsFromOneServer_ReturnsBadCountOfItems_Text">
            <summary>
              Looks up a localized string similar to Read in OPC NET API (DataAccess) has returned an incorrect item count..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_WriteMultipleItemsFromOneServer_NoResultsReturns_Text">
            <summary>
              Looks up a localized string similar to Write in OPC NET API (DataAccess) has returned no results..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_WriteMultipleItemsFromOneServer_ReturnsBadCountOfItems_Text">
            <summary>
              Looks up a localized string similar to Write in OPC NET API (DataAccess) has returned an incorrect item count..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToDaBrowseFilters_DABrowseFilterFlatIsNotSupported_Text">
            <summary>
              Looks up a localized string similar to Address space flattening in the browse filter is not supported by the NET OPC Data Access client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToDAVtq_QualityIsNotSpecified_Text">
            <summary>
              Looks up a localized string similar to The item value from OPC NET API (Data Access) does not specify a quality..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToOpcItemSubscriptionItemArguments_NotExpectedArgument_Text">
            <summary>
              Looks up a localized string similar to Some arguments (server descriptor, locale, or update rate) do not belong to this NET API OPC Data Access client subscription..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToOperationResult_RequestedItemIsNotReturned_Text">
            <summary>
              Looks up a localized string similar to The OPC NET API (Data Access) has not returned an item value..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToOperationResult_ResultIsNotSet_Text">
            <summary>
              Looks up a localized string similar to The OPC NET API (Data Access) has not returned a result..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NamespaceDoc">
            <summary>
            This namespace contains classes that implement OPC "Classic" using NET API.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.Service.AlarmsAndEvents.NamespaceDoc">
            <summary>
            This namespace contains classes that implement OPC Alarms&amp;Events using WCF consumer.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.Service.DataAccess.NamespaceDoc">
            <summary>
            This namespace contains classes that implement OPC Data Access using WCF consumer.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.Service.DataAccess.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Service.DataAccess.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Service.DataAccess.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Service.DataAccess.Resource1.WcfEasyDAClient_CreateProcedureCallException_CommunicationException">
            <summary>
              Looks up a localized string similar to A communication error has occurred in the service client for OPC Data Access..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Service.DataAccess.Resource1.WcfEasyDAClient_CreateProcedureCallException_Exception">
            <summary>
              Looks up a localized string similar to The service client for OPC Data Access has encountered an error..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Service.DataAccess.Resource1.WcfEasyDAClient_CreateProcedureCallException_ResultException">
            <summary>
              Looks up a localized string similar to An invalid result has been received by the service client for OPC Data Access..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Service.DataAccess.Resource1.WcfEasyDAClient_CreateProcedureCallException_TimeoutException">
            <summary>
              Looks up a localized string similar to A timeout has occurred in the service client for OPC Data Access..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.Native.AlarmsAndEvents.NamespaceDoc">
            <summary>
            This namespace contains classes that implement OPC Alarms&amp;Events using native code.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.Native.AlarmsAndEvents.NativeEasyAEClient">
            <exclude/>  
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Native.AlarmsAndEvents.NativeEasyAEClient.AdaptableParameters">
            <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Native.AlarmsAndEvents.NativeEasyAEClient.SharedParameters">
            <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Native.Assemblies.EasyOpcClassicRaw">
            <exclude/>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Native.Assemblies.EasyOpcClassicRaw_amd64">
            <exclude/>
            <remarks>
            THIS METHOD'S IL GETS REWRITTEN IN THE POST-BUILD STEP!
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Native.Assemblies.EasyOpcClassicRaw_x86">
            <exclude/>
            <remarks>
            THIS METHOD'S IL GETS REWRITTEN IN THE POST-BUILD STEP!
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.Native.DataAccess.NamespaceDoc">
            <summary>
            This namespace contains classes that implement OPC Data Access using native code.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.Native.DataAccess.NativeEasyDAClient">
            <exclude/>  
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Native.DataAccess.NativeEasyDAClient.AdaptableParameters">
            <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Implementation.Native.DataAccess.NativeEasyDAClient.SharedParameters">
            <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Implementation.Native.NamespaceDoc">
            <summary>
            This namespace contains classes that implement OPC "Classic" using native code.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Internal.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Internal.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Internal.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Internal.Resource1.ServerDescriptorConverter_ConvertTo_NotAServerDescriptor">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a ServerDescriptor, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Internal.Resource1.SimulatedCommonClient_CheckException_Message">
            <summary>
              Looks up a localized string similar to An OPC operation failure occurred in a simulated OPC &quot;Classic&quot; client. The inner exception contains details about the problem..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Internal.Resource1.SimulatedCommonClient_GetClsid_CannotFindServer">
            <summary>
              Looks up a localized string similar to The simulated OPC &quot;Classic&quot; client did not find a server with given ProgId or VersionIndependentProgId..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Internal.Resource1.SimulatedCommonClient_GetClsid_CannotParseGuid">
            <summary>
              Looks up a localized string similar to The simulated OPC &quot;Classic&quot; client cannot parse a server class given as a GUID..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Internal.Resource1.SimulatedCommonClient_GetComputer_LocationNotFound">
            <summary>
              Looks up a localized string similar to The simulated OPC &quot;Classic&quot; client cannot find a computer with a given location &quot;{0}&quot; (machine name or host)..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Internal.Resource1.SimulatedCommonClient_GetNode_CannotProceedDeeper">
            <summary>
              Looks up a localized string similar to The simulated OPC &quot;Classic&quot; client cannot proceed further deep when looking up a node..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Internal.Resource1.SimulatedCommonClient_GetNode_NameNotFound">
            <summary>
              Looks up a localized string similar to The simulated OPC &quot;Classic&quot; client cannot find a node with a given name..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Internal.NamespaceDoc">
            <summary>
            This namespace contains internal classes that facilitate easy work with OPC Classic.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Internal.SimulatedCommonClient">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Internal.SimulatedCommonClient.#ctor(OpcLabs.EasyOpc.Internal.SimulatedCommonClient)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.Internal.SimulatedCommonClient"/> object.</summary>
            <param name="client">The simulated common client object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.Internal.SimulatedCommonClient.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Internal.SimulatedCommonClient.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.Internal.SimulatedCommonClient.ValueEquals(OpcLabs.EasyOpc.Internal.SimulatedCommonClient)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Internal.SimulatedCommonClient.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.Internal.SimulatedCommonClient.ResetComputerDictionary">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.Internal.SimulatedCommonClient.ComputerDictionary"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.Internal.SimulatedCommonClient.ShouldSerializeComputerDictionary">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.Internal.SimulatedCommonClient.ComputerDictionary"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.Internal.ServerDescriptorConverter">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Generic.NamespaceDoc">
            <summary>
            This namespace contains OPC-related classes that use generics.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.Generic.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Generic.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Generic.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.LiveMapping.CommonMappedNode">
            <summary>
            A utility base class objects mapped to OPC "Classic". Contains commonly used meta-members.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.CommonMappedNode.ServerDescriptor">
            <summary>
            The OPC server involved in the operation.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.LiveMapping.CommonMapper">
            <summary>
            A mapper for OPC "Classic" specifications. Provides a functionality to map an object to entities in OPC "Classic" 
            domain.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMapper.#ctor(OpcLabs.EasyOpc.LiveMapping.CommonMapper)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.LiveMapping.CommonMapper"/> object.</summary>
            <param name="mapper">The common mapper object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMapper.#ctor(OpcLabs.EasyOpc.LiveMapping.CommonMappingProvider,OpcLabs.EasyOpc.LiveMapping.CommonMappingContext)">
            <summary>
            Initializes a new instance of the class, with given mapping provider, and mapping context template.
            </summary>
            <param name="mappingProvider">The mapping provider to be used by this mapper.</param>
            <param name="mappingContextTemplate">The mapping context template.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMapper.#ctor(System.ComponentModel.IContainer,OpcLabs.EasyOpc.LiveMapping.CommonMappingProvider,OpcLabs.EasyOpc.LiveMapping.CommonMappingContext)">
            <summary>
            Initializes an instance of the <see cref="T:OpcLabs.EasyOpc.LiveMapping.CommonMapper"/> class with Designer support. 
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
            <param name="mappingProvider">The mapping provider to be used by this mapper.</param>
            <param name="mappingContextTemplate">The mapping context template.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.CommonMapper.MappingContextTemplate">
            <summary>
            The mapping context template to be used by the mapping provider.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.CommonMapper.MappingProvider">
            <summary>
            The mapping provider to be used by this mapper.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMapper.ValueEquals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMapper.ValueEquals(OpcLabs.EasyOpc.LiveMapping.CommonMapper)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.BaseLib.LiveMapping.AbstractMapper"/> is value equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.BaseLib.LiveMapping.AbstractMapper"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext">
            <summary>
            A mapping context for OPC "Classic" specifications.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.#ctor">
            <inheritdoc cref="T:OpcLabs.BaseLib.LiveMapping.AbstractMappingContext"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.#ctor(OpcLabs.EasyOpc.LiveMapping.CommonMappingContext)">
            <summary>
            Initializes a new instance of the class, based on a given mapping context template.
            </summary>
            <param name="template">The mapping context that is used as a template for creating a new instance.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.#ctor(OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>
            Initializes a new instance of the class, with a given OPC server descriptor.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.op_Equality(OpcLabs.EasyOpc.LiveMapping.CommonMappingContext,OpcLabs.EasyOpc.LiveMapping.CommonMappingContext)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.op_Inequality(OpcLabs.EasyOpc.LiveMapping.CommonMappingContext,OpcLabs.EasyOpc.LiveMapping.CommonMappingContext)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.ServerDescriptor">
            <summary>
            The OPC server involved in the operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.ApplyMemberMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingContext.ApplyMemberMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.Equals(OpcLabs.EasyOpc.LiveMapping.CommonMappingContext)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.LiveMapping.CommonMappingProvider">
            <summary>
            A mapping provider for OPC "Classic" specifications. 
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingProvider.GetMetaValue(System.String,System.Object,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider.GetMetaValue(System.String,System.Object,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)"/>
            <remarks>
            <para>
            <see cref="T:OpcLabs.EasyOpc.LiveMapping.CommonMappingProvider"/> supports following meta-members:
            <ul>
                <li><c>ServerDescriptor</c>:    <see cref="T:OpcLabs.EasyOpc.ServerDescriptor"/>, an OPC server involved in the operation.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.LiveMapping.CommonMappingSource">
            <summary>
            A mapping source for OPC "Classic" specifications.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>
            Initializes a new instance of the class, with given OPC server descriptor.
            </summary>
            <param name="serverDescriptor">The OPC server involved in the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingSource.op_Equality(OpcLabs.EasyOpc.LiveMapping.CommonMappingSource,OpcLabs.EasyOpc.LiveMapping.CommonMappingSource)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingSource.op_Inequality(OpcLabs.EasyOpc.LiveMapping.CommonMappingSource,OpcLabs.EasyOpc.LiveMapping.CommonMappingSource)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.CommonMappingSource.ServerDescriptor">
            <summary>
            The OPC server involved in the operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingSource.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingSource.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingSource.Equals(OpcLabs.EasyOpc.LiveMapping.CommonMappingSource)">
            <summary>
            Determines whether the current object is the same as other object.
            </summary>
            <param name="other">Object to be compared.</param>
            <returns>True if the objects are the same, otherwise false.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition">
            <summary>
            Member mapping definition for members involved in mapping for OPC "Classic" specifications.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition.#ctor(System.String)">
            <inheritdoc cref="T:OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition.ServerAttribute">
            <summary>
            Contains the <c>Server</c> attribute, if present for this member.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition.LoadFromMemberInfo(System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition.LoadFromMemberInfo(System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition.ShouldLoadFromMemberInfo(System.Reflection.MemberInfo)">
            <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition.ShouldLoadFromMemberInfo(System.Reflection.MemberInfo)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.LiveMapping.NamespaceDoc">
            <summary>
            This namespace contains classes used for live mapping of OPC "Classic" sources to targets.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.LiveMapping.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.Resource1.CommonMappingContext_ApplyMemberMappingDefinition_CannotCombineMachineNameOrServerClassWithUrlStringInServerAttribute">
            <summary>
              Looks up a localized string similar to Cannot combine MachineName or ServerClass with a UrlString in a ServerAttribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.Resource1.MappingContext_ApplyMemberMappingDefinition_ServerAttributeMissingServerClass">
            <summary>
              Looks up a localized string similar to ServerClass not specified in ServerAttribute..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.LiveMapping.ServerAttribute">
            <summary>Gives information about an OPC server, such as the server's ProgID.</summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.LiveMapping.ServerAttribute.DefaultMachineName">
            <summary>
            Default machine name. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.LiveMapping.ServerAttribute.DefaultServerClass">
            <summary>
            Default server class. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.LiveMapping.ServerAttribute.DefaultUrlString">
            <summary>
            Default URL string of the resource. Equals to "opcda:".
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.LiveMapping.ServerAttribute.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.ServerAttribute.MachineName">
            <summary>
            Name of the machine. Determines the computer on which the OPC server is located. May be an empty string, in which 
            case the OPC server is assumed to exist on the local computer or at the computer specified for it by DCOM 
            configuration.
            </summary>
            <remarks>
            Machine resources are named using the naming scheme of the network transport. By default, all UNC ("\\server" or 
            "server") and DNS names ("domain.com", "example.microsoft.com", or "135.5.33.19") names are allowed. 
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.ServerAttribute.ServerClass">
            <summary>
            Contains ProgID or {CLSID} of the OPC server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.LiveMapping.ServerAttribute.UrlString">
            <summary>
            A URL string of the resource.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.ObjectSpace.NamespaceDoc">
            <summary>
            This namespace defines an object space for OPC Classic (COM-based) specifications.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.ObjectSpace.Computer">
            <exclude/>  
        </member>
        <member name="M:OpcLabs.EasyOpc.ObjectSpace.Computer.#ctor(OpcLabs.EasyOpc.ObjectSpace.Computer)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.ObjectSpace.Computer"/> object.</summary>
            <param name="computer">The computer object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ObjectSpace.Computer.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ObjectSpace.Computer.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ObjectSpace.Computer.ResetServerElements">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.ObjectSpace.Computer.ServerElements"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ObjectSpace.Computer.ShouldSerializeServerElements">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.ObjectSpace.Computer.ServerElements"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ObjectSpace.Computer.ResetAEComponentDictionary">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.ObjectSpace.Computer.AEComponentDictionary"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ObjectSpace.Computer.ShouldSerializeAEComponentDictionary">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.ObjectSpace.Computer.AEComponentDictionary"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ObjectSpace.Computer.ResetDAComponentDictionary">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.ObjectSpace.Computer.DAComponentDictionary"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ObjectSpace.Computer.ShouldSerializeDAComponentDictionary">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.ObjectSpace.Computer.DAComponentDictionary"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.OperationModel.ComTypes.NamespaceDoc">
            <summary>
            This namespace contains COM types for classes that are used to pass arguments to OPC "Classic" (COM/DCOM and XML based) operations and obtain the operation results. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException">
            <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.OperationModel.OpcException"/> to COM clients.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.GetType">
            <inheritdoc cref="M:System.Object.GetType"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.DisplayString">
            <summary>
            The display string for the current object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.Message">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.Message"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.StackTrace">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.StackTrace"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.HelpLink">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.HelpLink"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.Source">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.Source"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.InnerException">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.InnerException"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.TargetSite">
            <inheritdoc cref="P:System.Runtime.InteropServices._Exception.TargetSite"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.GetBaseException">
            <inheritdoc cref="M:System.Runtime.InteropServices._Exception.GetBaseException"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.Data">
            <inheritdoc cref="P:System.Exception.Data"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.HResult">
            <inheritdoc cref="P:System.Exception.HResult"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.OperationModel.NamespaceDoc">
            <summary>
            This namespace contains classes that are used to pass arguments to OPC "Classic" (COM/DCOM and XML based) operations and obtain the operation results. 
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.OperationModel.OpcException">
            <summary>Exceptions arising from OPC operations.</summary>
            <remarks>
            In general, you cannot safely prevent these exceptions from happening. Various conditions external to your code
            can cause OPC failures, e.g. network problems, improper OPC server configuration, etc. For this reason, you should 
            always expect that an OPC operation can fail.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.OperationModel.OpcException.Create(System.Exception)">
            <exclude/>  // IMPROVE: document
        </member>
        <member name="M:OpcLabs.EasyOpc.OperationModel.OpcException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.OperationModel.OpcException"/> class with a specified error message, 
            and a reference to the inner exception that is the cause this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference 
            (<b>Nothing</b> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.OperationModel.OpcException.OpcLabs#EasyOpc#OperationModel#ComTypes#_OpcException#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.OperationModel.ComTypes._OpcException.DisplayString"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Resource1.Utilities_ConvertTo_CannotConvert">
            <summary>
              Looks up a localized string similar to The OPC &quot;Classic&quot; server has returned a &apos;{0}&apos; result, but this operation requires a &apos;{1}&apos; value, and the conversion is not possible..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.Resource1.Utilities_ConvertToNonNull_NullResult">
            <summary>
              Looks up a localized string similar to The OPC &quot;Classic&quot; server has returned a null result, but this operation requires a non-null value..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.EasyDAClientServiceReference.OpcTechnologies">
            <remarks/>
        </member>
        <member name="F:OpcLabs.EasyOpc.EasyDAClientServiceReference.OpcTechnologies.None">
            <remarks/>
        </member>
        <member name="F:OpcLabs.EasyOpc.EasyDAClientServiceReference.OpcTechnologies.Unknown">
            <remarks/>
        </member>
        <member name="F:OpcLabs.EasyOpc.EasyDAClientServiceReference.OpcTechnologies.Com">
            <remarks/>
        </member>
        <member name="F:OpcLabs.EasyOpc.EasyDAClientServiceReference.OpcTechnologies.Xml">
            <remarks/>
        </member>
        <member name="F:OpcLabs.EasyOpc.EasyDAClientServiceReference.OpcTechnologies.All">
            <remarks/>
        </member>
        <member name="T:OpcLabs.EasyOpc.OpcTechnologies">
            <summary>
            Types of technologies used by OPC specifications.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.OpcTechnologies.None">
            <summary>
            No technology.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.OpcTechnologies.Unknown">
            <summary>
            Unknown technology.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.OpcTechnologies.Com">
            <summary>
            OPC specifications based on COM/DCOM.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.OpcTechnologies.Xml">
            <summary>
            OPC specifications based on XML (Web Services/SOAP).
            </summary>
            <remarks>
            Only used by the OPC XML-DA specification. Does not cover OPC Unified Architecture (OPC-UA).
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.OpcTechnologies.All">
            <summary>
            All technologies.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.OpcTechnologiesExtension">
            <summary>
            Contains extension methods to the <see cref="T:OpcLabs.EasyOpc.OpcTechnologies"/> enumeration.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.OpcTechnologiesExtension.GetDisplayText(OpcLabs.EasyOpc.OpcTechnologies)">
            <summary>
            Obtains the display text for a given OPC technology or technologies.
            </summary>
            <param name="technologies">The technology or technologies for which the display text will be determined.</param>
            <returns>The display text for the given technology or technologies.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.ServerCategories">
            <summary>Contains information about which specifications the OPC server claims to support.</summary>
            <remarks>
            There are individual flags (properties) indicating the supported specifications.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.#ctor(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.ServerCategories"/> class with a specified set of category 
            Guids.</summary>
            <param name="categories">Collection of Guids to copy the categories from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.#ctor(OpcLabs.EasyOpc.ServerCategories)">
            <summary>Initializes a new instance of the class, copying values from a given object.</summary>
            <param name="serverCategories">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerCategories.Empty">
            <summary>
            Empty server categories.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.op_Equality(OpcLabs.EasyOpc.ServerCategories,OpcLabs.EasyOpc.ServerCategories)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.op_Inequality(OpcLabs.EasyOpc.ServerCategories,OpcLabs.EasyOpc.ServerCategories)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerCategories.Families">
            <summary>
            The server families that correspond to server categories represented by this object.
            </summary>
            <remarks>A server family is a functionality area, usually represented as set of interfaces supported by the server.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerCategories.OpcAlarmsAndEvents10">
            <summary>Gets or sets information about OPC server's support of OPC Alarms and Events 1.0 specification.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerCategories.OpcDataAccess10">
            <summary>Gets information about OPC server's support of OPC Data Access 1.0 specification.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerCategories.OpcDataAccess20">
            <summary>Gets information about OPC server's support of OPC Data Access 2.0 specification.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerCategories.OpcDataAccess30">
            <summary>Gets information about OPC server's support of OPC Data Access 2.0 specification.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerCategories.OpcXmlDataAccess10">
            <summary>Gets information about OPC server's support of OPC XML Data Access 1.0 specification.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.ToString">
            <summary>Returns a string containing identifiers of the categories supported.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerCategories.OpcLabs#EasyOpc#ComTypes#_ServerCategories#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ComTypes._ServerCategories.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerCategories.Equals(OpcLabs.EasyOpc.ServerCategories)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.ServerCategories"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.ServerCategories"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.ServerFamilies">
            <summary>
            The server family or families. A server family is a functionality area, usually represented as set of interfaces 
            supported by the server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerFamilies.None">
            <summary>
            No servers.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerFamilies.OpcDataAccess">
            <summary>
            OPC Data Access (OPC-DA) servers. Also covers OPC XML-DA servers.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerFamilies.OpcAlarmsAndEvents">
            <summary>
            OPC Alarms&amp;Events (OPC-A&amp;E) servers.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerFamilies.All">
            <summary>
            OPC Data Access (OPC-DA) and OPC Alarms&amp;Events (OPC-A&amp;E) servers.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.NodeDescriptor">
            <summary>Contains information necessary to identify a node in OPC address space.</summary>
            <remarks>A node can be identified using its qualified ID, or using a browse path.</remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeDescriptor.DefaultAsString">
            <summary>
            Default <see cref="T:OpcLabs.EasyOpc.NodeDescriptor"/>, expressed as string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeDescriptor.DefaultBrowsePath">
            <summary>
            Default browse path (<b>null</b>, i.e. none).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeDescriptor.DefaultNodePath">
            <summary>
            Default node path. Equals to <b>null</b>, meaning that no node path is specified.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.NodeDescriptor"/> class.
             </summary>
             </overloads>
            
             <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.#ctor(OpcLabs.EasyOpc.NodeDescriptor)">
            <summary>Initializes a new instance of the class, from specified node descriptor.</summary>
            <param name="nodeDescriptor">The node descriptor object.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.#ctor(System.String)">
            <summary>Initializes a new instance of the class, with specified node identifier.</summary>
            <param name="nodeId">Contains OPC node identifier.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.#ctor(System.String,OpcLabs.BaseLib.Navigation.BrowsePath)">
            <summary>Initializes a new instance of the class, with specified item identifier, and browse path.</summary>
            <param name="nodeId">Contains OPC item identifier (empty string for the root or if unknown).</param>
            <param name="browsePath">Contains the browse path for the OPC item.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.#ctor(System.String,System.String,OpcLabs.BaseLib.Navigation.BrowsePath)">
            <summary>Initializes a new instance of the class, with specified node path, item identifier, and browse path.</summary>
            <param name="nodePath">Contains node path (empty string for the root, null reference if unknown). Only used with OPC XML.</param>
            <param name="nodeId">Contains OPC item identifier (empty string for the root or if unknown).</param>
            <param name="browsePath">Contains the browse path for the OPC item.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.op_Equality(OpcLabs.EasyOpc.NodeDescriptor,OpcLabs.EasyOpc.NodeDescriptor)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.op_Inequality(OpcLabs.EasyOpc.NodeDescriptor,OpcLabs.EasyOpc.NodeDescriptor)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeDescriptor.ArgumentString">
            <summary>
            The node descriptor in form of an argument string, i.e. a <i>key</i>=<i>value</i> pairs separated by semicolons.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeDescriptor.BrowsePath">
            <summary>
            Specifies the browse path for the OPC node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeDescriptor.IsNull">
            <summary>
            Determines whether the node descriptor is null, i.e. specifies neither node ID nor a browse path.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeDescriptor.IsRoot">
            <summary>
            Determines whether this object describes a root of the address space.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeDescriptor.NodeId">
            <summary>
            Contains node identifier (empty string for the root, null reference if unknown).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeDescriptor.NodePath">
            <summary>
            Contains node path (empty string for the root, null reference if unknown). Only used with OPC XML.
            </summary>
            <remarks>
            <para>
            Not to be confused with the <see cref="P:OpcLabs.EasyOpc.NodeDescriptor.BrowsePath"/>, or the access path (only in OPC-DA 1.0, and quite rare). </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.MakeArgumentString(System.Boolean)">
            <summary>
            Infrastructure.
            </summary>
            <param name="informativeOnly">Indicates whether an incomplete argument string with just the most important 
            information may be returned.</param>
            <returns>An argument string that represents the node descriptor.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.Match(OpcLabs.EasyOpc.NodeDescriptor)">
            <summary>
            Determines whether the node descriptor matches another node descriptor.
            </summary>
            <param name="other">The node descriptor to match against.</param>
            <returns>Returns <b>true</b> if two node descriptors match; otherwise, returns <b>false</b>.</returns>
            <remarks>
            Two node descriptors match if any information that is present in both node descriptors is equal. For example, if 
            a node Id in one of the node descriptors is not present (<b>null</b>), a node Id in the other node descriptor
            can be anything, or also not present. But if a node Id is present in both node descriptors, it must be the same
            node Id. Same rules apply to the browse path portion of the node descriptor.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.ToString">
            <summary>Returns a string describing the contents of the node descriptor.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="E:OpcLabs.EasyOpc.NodeDescriptor.PropertyChanged">
            <summary>
            This event is raised when a property is changed on a component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.ReadStringList(System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeDescriptor.OpcLabs#EasyOpc#ComTypes#_NodeDescriptor#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ComTypes._NodeDescriptor.DisplayString"/>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeDescriptor.DefaultNodeId">
            <summary>
            Default node id (none, i.e. <b>null</b>).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeDescriptor.RootNodeId">
            <summary>
            A node Id that represents a root of the address space. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.GetNodeIdArgumentName">
            <summary>
            Infrastructure.
            </summary>
            <returns>The name to be used for NodeId in argument strings.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.Equals(OpcLabs.EasyOpc.NodeDescriptor)">
            <summary>
            Infrastructure.
            </summary>
            <param name="nodeDescriptor">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.OnPropertyChanged(System.String)">
            <summary>
            Infrastructure.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeDescriptor.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.ServerDescriptor">
            <summary>Contains information necessary to identify and connect to an OPC server, such as the server's ProgID.
            </summary>
            <remarks>
            It is possible to construct this object from <see cref="T:OpcLabs.EasyOpc.ServerElement"/> returned by the browsing methods.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.DefaultDescriptorString">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.ServerDescriptor.DescriptorString"/> property. 
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.DefaultScheme">
            <summary>
            Default URI scheme. Equals to "opcda".
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.DefaultUrlString">
            <summary>
            Default URL string of the resource. Equals to "opcda:".
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.OpcAEScheme">
            <summary>
            A URI scheme for the OPC-A&amp;E.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.OpcBatchScheme">
            <summary>
            A URI scheme for the OPC Batch.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.OpcDAScheme">
            <summary>
            A URI scheme for the OPC-DA.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.OpcHdaScheme">
            <summary>
            A URI scheme for the OPC-HDA.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.OpcDXScheme">
            <summary>
            A URI scheme for the OPC-DX.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.OpcXmlDAScheme">
            <summary>
            A URI scheme for the OPC XML-DA.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerDescriptor.DefaultTechnology">
            <summary>
            Default technology. Equals to <see cref="F:OpcLabs.EasyOpc.OpcTechnologies.Com"/>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.ServerDescriptor"/> class.
            </summary>
            </overloads>
            
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration)">
            <summary>
            Initializes a new instance of the class, given a <see cref="T:OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration"/>.
            </summary>
            <param name="comClassRegistration">Registration data of a COM class.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(System.String,OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration)">
            <summary>
            Initializes a new instance of the class, given the machine name and a <see cref="T:OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration"/>.
            </summary>
            <param name="machineName">Name of the machine (computer on which the object is located).</param>
            <param name="comClassRegistration">Registration data of a COM class.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(System.String,System.Guid)">
            <summary>Initializes a new instance of the class, with specified machine name and object CLSID.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="clsid">The CLSID associated with the object to be created.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the class, with specified machine name and object ID.</summary>
            <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
            <param name="objectId">Contains the object ID of the OPC server. The object ID is either the server's ProgID, 
            or its {CLSID}, or ProgID/{CLSID}.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(System.Guid)">
            <summary>Initializes a new instance of the class, with specified object CLSID.</summary>
            <param name="clsid">The CLSID associated with the object to be created.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(System.String)">
            <summary>Initializes a new instance of the class, with specified server class (ProgID) or a URL string.</summary>
            <param name="descriptorString">Contains the descriptor string for the server.</param>
            <remarks>
            <para>
            The <paramref name="descriptorString"/> may contain one of the following:
            <ul>
              <li>A server class, i.e. ProgID (or {CLSID}) of the object.</li>
              <li>A string in the form "\\machineName\serverClass".</li>
              <li>A URI of the object.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(System.String,OpcLabs.BaseLib.Security.NetworkSecurity)">
            <summary>Initializes a new instance of the class, with specified server class (ProgID) or a URL string,
            and network security.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(System.String,OpcLabs.EasyOpc.ServerElement)">
            <summary>Initializes a new instance of the class, with specified machine name and <see cref="T:OpcLabs.EasyOpc.ServerElement"/>.
            </summary>
            <param name="location">Name of the machine (or host). 
            Replaces the location computer specified in the <paramref name="serverElement"/>.
            </param>
            <param name="serverElement">Server element object (obtained through browsing for servers) that contains the
            server's ProgID or CLSID.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.ServerDescriptor"/> object.</summary>
            <param name="serverDescriptor">The server descriptor object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(OpcLabs.EasyOpc.ServerElement)">
            <summary>Initializes a new instance of the class, with specified <see cref="T:OpcLabs.EasyOpc.ServerElement"/>.</summary>
            <param name="serverElement">Server element object (obtained through browsing for servers) that contains the
            server's ProgID or CLSID.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(OpcLabs.EasyOpc.ServerElement,OpcLabs.BaseLib.Security.NetworkSecurity)">
            <summary>Initializes a new instance of the class, with specified <see cref="T:OpcLabs.EasyOpc.ServerElement"/> and
            <see cref="T:OpcLabs.BaseLib.Security.NetworkSecurity"/>.</summary>
            <param name="serverElement">Server element object (obtained through browsing for servers) that contains the
            server's ProgID or CLSID.</param>
            <param name="networkSecurity">Security settings used when connecting to the endpoint.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerDescriptor.DefaultUri">
            <summary>
            Default URI. Represents "opcda:".
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerDescriptor.Null">
            <summary>
            A null server descriptor (contains an empty machine name and an empty server class).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.op_Equality(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.op_Inequality(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.op_Implicit(OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration)~OpcLabs.EasyOpc.ServerDescriptor">
            <summary>Converts a <see cref="T:OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration"/> to a server descriptor.</summary>
            <param name="comClassRegistration">Registration data of a COM class.</param>
            <returns>Returns the server descriptor created from the <see cref="T:OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration"/>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.op_Implicit(System.Guid)~OpcLabs.EasyOpc.ServerDescriptor">
            <summary>Converts a <see cref="T:System.Guid"/> containing object's CLSID to a server descriptor.</summary>
            <param name="clsid">Contains the CLSID for the object.</param>
            <returns>Returns the server descriptor created from the <see cref="T:System.Guid"/>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.op_Implicit(OpcLabs.EasyOpc.ServerElement)~OpcLabs.EasyOpc.ServerDescriptor">
            <summary>Converts a <see cref="T:OpcLabs.EasyOpc.ServerElement"/> to a server descriptor.</summary>
            <param name="serverElement">Contains the server element to be converted.</param>
            <returns>Returns the server descriptor created from the server element.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.op_Implicit(System.String)~OpcLabs.EasyOpc.ServerDescriptor">
            <summary>Converts a string containing server's descriptor string to a server descriptor.</summary>
            <param name="descriptorString">Contains the descriptor string for the server.</param>
            <returns>Returns the server descriptor created from the string.</returns>
            <remarks>
            <para>
            The <paramref name="descriptorString"/> may contain one of the following:
            <ul>
              <li>A server class, i.e. ProgID (or {CLSID}) of the object.</li>
              <li>A string in the form "\\machineName\serverClass".</li>
              <li>A URI of the object.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.FromComClassRegistration(OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration)">
            <summary>Converts a <see cref="T:OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration"/> to a server descriptor.</summary>
            <param name="comClassRegistration">Registration data of a COM class.</param>
            <returns>Returns the server descriptor created from the <see cref="T:OpcLabs.BaseLib.ComInterop.Database.ComClassRegistration"/>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.FromGuid(System.Guid)">
            <summary>Converts a <see cref="T:System.Guid"/> containing object's CLSID to a server descriptor.</summary>
            <param name="clsid">Contains the CLSID for the object.</param>
            <returns>Returns the server descriptor created from the <see cref="T:System.Guid"/>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.FromServerElement(OpcLabs.EasyOpc.ServerElement)">
            <summary>Converts a <see cref="T:OpcLabs.EasyOpc.ServerElement"/> to a server descriptor.</summary>
            <param name="serverElement">Contains the server element to be converted.</param>
            <returns>Returns the server descriptor created from the server element.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.FromString(System.String)">
            <summary>Converts a string containing server's descriptor string to a server descriptor.</summary>
            <param name="descriptorString">Contains the descriptor string for the server.</param>
            <returns>Returns the server descriptor created from the string.</returns>
            <remarks>
            <para>
            The <paramref name="descriptorString"/> may contain one of the following:
            <ul>
              <li>A server class, i.e. ProgID (or {CLSID}) of the object.</li>
              <li>A string in the form "\\machineName\serverClass".</li>
              <li>A URI of the object.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerDescriptor.DescriptorString">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerDescriptor.ServerClass">
            <summary>
            Contains ProgID or {CLSID} of the OPC server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerDescriptor.Technology">
            <summary>
            Determines the OPC technology used.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerDescriptor.Uri">
            <summary>
            Gets or sets the <see cref="P:OpcLabs.EasyOpc.ServerDescriptor.Uri"/> instance for this resource descriptor.
            </summary>
            <remarks>A <c>null</c> reference denotes that a URI is not available.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerDescriptor.UrlString">
            <summary>
            A URL string of the resource.
            </summary>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerDescriptor.OpcLabs#EasyOpc#ComTypes#_ServerDescriptor#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ComTypes._ServerDescriptor.DisplayString"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerDescriptor.InitialScheme">
            <inheritdoc cref="P:OpcLabs.BaseLib.ObjectDescriptor.InitialScheme"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.Equals(OpcLabs.EasyOpc.ServerDescriptor)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.ResetUri">
            <summary>
            Reset the <see cref="P:OpcLabs.EasyOpc.ServerDescriptor.Uri"/> property to its default value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.ShouldSerializeUri">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.ServerDescriptor.Uri"/> property is equal to its default value.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerDescriptor.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.NodeElement">
            <summary>Contains information gathered about an OPC node (branch or leaf in OPC server's address space).</summary>
            <remarks>
            This object is filled in and returned e.g. when you browse the OPC server's address space.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeElement.DefaultBrowsePath">
            <summary>
            Default browse path (none, i.e. <b>null</b>).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeElement.DefaultHasChildren">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.NodeElement.HasChildren"/>. Equals to <b>false</b>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeElement.DefaultNodeId">
            <summary>
            Default Node Id. Equals to <b>null</b>, meaning that no Node Id is specified.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeElement.DefaultIsBranch">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.NodeElement.IsBranch"/>. Equals to <b>false</b>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeElement.DefaultIsLeaf">
            <summary>
            Default value of <see cref="P:OpcLabs.EasyOpc.NodeElement.IsLeaf"/>. Equals to <b>false</b>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeElement.DefaultName">
            <summary>
            Default node name. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.NodeElement.DefaultNodePath">
            <summary>
            Default node path. Equals to <b>null</b>, meaning that no node path is specified.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.#ctor(OpcLabs.EasyOpc.NodeElement)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.NodeElement"/> object.</summary>
            <param name="nodeElement">The object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.#ctor(System.String,OpcLabs.BaseLib.Navigation.BrowsePath,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.op_Equality(OpcLabs.EasyOpc.NodeElement,OpcLabs.EasyOpc.NodeElement)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="nodeElement1">First object to be compared.</param>
            <param name="nodeElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.op_Inequality(OpcLabs.EasyOpc.NodeElement,OpcLabs.EasyOpc.NodeElement)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="nodeElement1">First object to be compared.</param>
            <param name="nodeElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.op_Implicit(OpcLabs.EasyOpc.NodeElement)~System.String">
            <summary>
            Converts the object into a string usable for identification of the node when passed to other methods.
            The value returned is the value of the <see cref="P:OpcLabs.EasyOpc.NodeElement.NodeId"/> property.
            </summary>
            <returns>Returns the main characteristics of the object expressed as a string.</returns>
            <param name="nodeElement">The object to be expressed as a string.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.MakePathElements``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a path containing <see cref="T:OpcLabs.EasyOpc.NodeElement"/>-s made from browse names, starting from the root.
            </summary>
            <param name="browseNames">The browse names that represent the path to be created.</param>
            <returns>An enumerable of node elements, starting from the root.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeElement.BrowsePath">
            <summary>
            Specifies the browse path for the OPC node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeElement.HasChildren">
            <summary>The element has children and can be used for a subsequent browse.</summary>
            <remarks>
            In some cases this property may contain True even if there are no actual nodes below it, e.g. if it is too consuming
            for the OPC server to determine if an element has children.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeElement.IsBranch">
            <summary>The node is a branch (a "folder" the can contain other nodes).</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeElement.IsLeaf">
            <summary>
            The element is a leaf.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeElement.IsRoot">
            <summary>
            Determines whether this element describes a root of the address space.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeElement.Name">
            <summary>Short user friendly portion of the namespace pointing to the element. This is the string to be used for 
            display purposes.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeElement.NodeId">
            <summary>The unique identifier for this node.</summary>
            <remarks>
            If the value is a null reference, then the server has failed provide the node ID.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeElement.NodePath">
            <summary>The node path for this node. Only used with OPC XML.</summary>
            <remarks>
            <para>
            Not to be confused with the <see cref="P:OpcLabs.EasyOpc.NodeElement.BrowsePath"/>, or the access path (only in OPC-DA 1.0, and quite rare). </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.ToString">
            <summary>Returns a string with the node Id.</summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.NodeElement.OpcLabs#EasyOpc#ComTypes#_NodeElement#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ComTypes._NodeElement.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.Equals(OpcLabs.EasyOpc.NodeElement)">
            <summary>
            Infrastructure
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.NodeElement.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.ServerElement">
            <summary>Contains information gathered about an OPC server.</summary>
            <remarks>
            This object is filled in and returned e.g. when you browse a machine for a list of OPC servers installed on it.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerElement.DefaultClsidString">
            <summary>
            Default CLSID string. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerElement.DefaultDescription">
            <summary>
            Default description. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerElement.DefaultLocation">
            <summary>
            Default location. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerElement.DefaultProgId">
            <summary>
            Default programmatic identifier (ProgId). An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerElement.DefaultTechnology">
            <summary>
            Default technology. Equals to <see cref="F:OpcLabs.EasyOpc.OpcTechnologies.None"/>.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerElement.DefaultUrlString">
            <summary>
            Default URL string. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerElement.DefaultVendor">
            <summary>
            Default vendor name. An empty string.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerElement.DefaultVersionIndependentProgId">
            <summary>
            Default version-independent programmatic identifier. An empty string.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.#ctor(System.String,System.Guid,System.String,System.String,System.String,System.String,OpcLabs.EasyOpc.ServerCategories,System.String)">
            <summary>Initializes a new instance of the class with given data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.#ctor(OpcLabs.EasyOpc.OpcTechnologies,System.String,System.String,System.Guid,System.String,System.String,System.String,System.String,System.String,OpcLabs.EasyOpc.ServerCategories)">
            <summary>Initializes a new instance of the class with given data (including URL string).</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.#ctor(OpcLabs.EasyOpc.ServerElement)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.ServerElement"/> object.</summary>
            <param name="serverElement">The server element object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.DefaultServerCategories">
            <summary>
            Default server categories (none).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.ServerElement.DefaultClsid">
            <summary>
            Default server's class identifier (CLSID). An empty GUID (<see cref="F:System.Guid.Empty"/>).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.op_Equality(OpcLabs.EasyOpc.ServerElement,OpcLabs.EasyOpc.ServerElement)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="serverElement1">First object to be compared.</param>
            <param name="serverElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.op_Inequality(OpcLabs.EasyOpc.ServerElement,OpcLabs.EasyOpc.ServerElement)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="serverElement1">First object to be compared.</param>
            <param name="serverElement2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.op_Implicit(OpcLabs.EasyOpc.ServerElement)~System.String">
            <summary>
            Converts the object into a string usable for identification of the OPC server when passed to other methods.
            The value returned is the value of the <see cref="P:OpcLabs.EasyOpc.ServerElement.UrlString"/> property.
            </summary>
            <returns>Returns the main characteristics of the object expressed as a string.</returns>
            <param name="serverElement">The object to be expressed as a string.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.Clsid">
            <summary>Gets or sets OPC server's class identifier (CLSID).</summary>
            <remarks>
            <para>
            A CLSID is a globally unique identifier that identifies an OPC server. The OPC server needs to register its CLSID
            with the system.</para>
            <para>
            In VBScript, use <see cref="P:OpcLabs.EasyOpc.ServerElement.ClsidString"/> instead.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.ClsidString">
            <summary>
            Contains the CLSID string of the server.
            </summary>
            <remarks>
            <para>
            The value is an empty string if no CLSID for the server is given.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.Description">
            <summary>Gets or sets a user readable name for the OPC server.</summary>
            <remarks>
            The description may be presented to the user as the name of an available OPC server.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.Location">
            <summary>
            The server's location.
            </summary>
            <remarks>
            Corresponds to the host or machine name.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.ProgId">
            <summary>Gets or sets a string value indicating the programmatic identifier (ProgID) of the OPC server.</summary>
            <remarks>
            ProgIDs present a human-readable version of the class identifier (CLSID) used to identify COM/ActiveX objects.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.ServerCategories">
            <summary>Gets or sets information about which specifications the OPC server claims to support.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.ServerClass">
            <summary>
            Returns a string usable for identification of the OPC server when passed to other methods.
            If the <see cref="P:OpcLabs.EasyOpc.ServerElement.ProgId"/> is not empty, it is used. Otherwise, if the <see cref="P:OpcLabs.EasyOpc.ServerElement.VersionIndependentProgId"/>
            is not empty, it is used. If both are empty, the string form of server's <see cref="P:OpcLabs.EasyOpc.ServerElement.Clsid"/> is returned.
            </summary>
            <remarks>
            For consistency, the corresponding property or parameter on other objects and methods is also called ServerClass.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.Technology">
            <summary>
            Determines the OPC technology used.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.UrlString">
            <summary>
            A URL string of the server.
            </summary>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.Vendor">
            <summary>Gets or sets a vendor name.</summary>
            <remarks>
            Vendor name may be empty when unknown, e.g. if obtained through OPCEnum object which does not provide it.
            It is simply a means of identifying the vendor who supplied the particular OPC server.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.VersionIndependentProgId">
            <summary>Gets or sets version-independent programmatic identifier of the OPC server application.</summary>
            <remarks>
            <para>VersionIndependentProgId may be empty when unknown, e.g. if obtained through IOPCServerList interface of 
            OPCEnum object which does not provide it, or when registry does not contain that information. In some cases (e.g. 
            when IOPCServerList2 is used, and the VersionIndependentProgID is not available in the registry), the ProgID will be 
            copied to this property.</para>
            <para>The VersionIndependentProgID associates a ProgID with a CLSID.</para>
            <para>The version-independent ProgID refers to the OPC server's class and does not change from version to version, 
            instead remaining constant across all versions. It refers to the currently installed version of the OPC server's 
            class. The version-independent ProgID corresponds to the name of the latest version of the OPC server application.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.ToString">
            <summary>
            Converts the object into a string usable for identification of the OPC server when passed to other methods.
            The value returned is the value of the <see cref="P:OpcLabs.EasyOpc.ServerElement.UrlString"/> property.
            </summary>
            <returns>Returns the object contents expressed as readable string.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElement.OpcLabs#EasyOpc#ComTypes#_ServerElement#DisplayString">
            <inheritdoc cref="P:OpcLabs.EasyOpc.ComTypes._ServerElement.DisplayString"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.ReadXmlElement(System.Xml.XmlReader)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.WriteXmlElement(System.Xml.XmlWriter)">
            <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.Equals(OpcLabs.EasyOpc.ServerElement)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.ServerElement"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.ServerElement"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.ResetServerCategories">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.ServerElement.ServerCategories"/> back to its default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElement.ShouldSerializeServerCategories">
            <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.ServerElement.ServerCategories"/> is in its default state.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.ServerElementCollection">
            <summary>
            A collection of server elements (<see cref="T:OpcLabs.EasyOpc.ServerElement"/>), keyed by their URI strings.
            </summary>
            <remarks>
            This collection is returned by the browsing methods.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.#ctor">
            <summary>
            Initializes a new, empty instance of the class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.ServerElement})">
            <summary>
            Initializes a new copy of the collection.
            </summary>
            <param name="elements">The collection to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElementCollection.Empty">
            <summary>
            An empty server element collection.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.op_Equality(OpcLabs.EasyOpc.ServerElementCollection,OpcLabs.EasyOpc.ServerElementCollection)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.op_Inequality(OpcLabs.EasyOpc.ServerElementCollection,OpcLabs.EasyOpc.ServerElementCollection)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.ServerElementCollection.Keys">
            <summary>
            A collection of server URIs that are keys to the server elements in the dictionary.
            </summary>
            <returns>Returns a collection of keys. Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.GetSchema">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.ReadXml(System.Xml.XmlReader)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.ServerElementCollection.GetKeyForItem(OpcLabs.EasyOpc.ServerElement)">
            <inheritdoc cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.OpcResultException">
            <summary>
            The exception that is thrown when an OPC Classic result (return value or an argument) was not expected for the 
            requested operation.
            </summary>
            <remarks>This type is intentionally *not* derived from <see cref="T:OpcLabs.BaseLib.ResultException"/>, because it represents an 
            exception in a different domain.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.OpcResultException.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.OpcResultException.#ctor(System.String)">
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.OpcResultException.#ctor(System.String,System.Exception)">
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference 
            (<b>Nothing</b> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.OpcResultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:System.Exception"/>
        </member>
        <member name="T:OpcCom.Da20.Server">
            <summary>
            An in-process wrapper for a remote OPC Data Access 2.0X server.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.#ctor">
            <summary>
            The default constructor for the object.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.#ctor(Opc.URL,System.Object)">
            <summary>
            Initializes the object with the specifed COM server.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.Initialize(Opc.URL,Opc.ConnectData)">
            <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
        </member>
        <member name="F:OpcCom.Da20.Server.m_group">
            <summary>
            A global group used for various item level operations. 
            </summary>
        </member>
        <member name="F:OpcCom.Da20.Server.m_groupHandle">
            <summary>
            The server handle for the global group.
            </summary>
        </member>
        <member name="F:OpcCom.Da20.Server.m_separators">
            <summary>
            A list of seperators used in the browse paths.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.Read(Opc.Da.Item[])">
            <summary>
            Reads the values for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.Write(Opc.Da.ItemValue[])">
            <summary>
            Write the values for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
            <summary>
            Fetches child elements of the specified branch which match the filter criteria.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.BrowseNext(Opc.Da.BrowsePosition@)">
            <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
            <summary>
            Returns the specified properties for a set of items.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.AddItems(Opc.Da.Item[])">
            <summary>
            Adds a set of temporary items used for a read/write operation.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.RemoveItems(Opc.IdentifiedResult[])">
            <summary>
            Removes a set of temporary items used for a read/write operation.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.ReadValues(Opc.Da.Item[],Opc.Da.ItemValueResult[],System.Boolean)">
            <summary>
            Reads a set of values.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.GetAvailableProperties(System.String)">
            <summary>
            Returns the set of available properties for the item.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.GetItemIDs(System.String,Opc.Da.ItemProperty[])">
            <summary>
            Fetches the property item id for the specified set of properties.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.GetValues(System.String,Opc.Da.ItemProperty[])">
            <summary>
            Fetches the property values for the specified set of properties.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.GetProperties(System.String,Opc.Da.PropertyID[],System.Boolean)">
            <summary>
            Gets the specified properties for the specified item.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.GetEnumerator(System.String,Opc.Da.BrowseFilters,System.Boolean,System.Boolean)">
            <summary>
            Returns an enumerator for the children of the specified branch.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.DetectAndSaveSeparators(System.String,System.String)">
            <summary>
            Detects the separators used in the item id.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.GetElement(Opc.ItemIdentifier,System.String,Opc.Da.BrowseFilters,System.Boolean)">
            <summary>
            Reads a single value from the enumerator and returns a browse element.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.GetElements(System.Int32,Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.Boolean,OpcCom.Da20.BrowsePosition@)">
            <summary>
            Returns a list of child elements that meet the filter criteria.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Server.CreateSubscription(System.Object,Opc.Da.SubscriptionState,System.Int32)">
            <summary>
            Creates a new instance of a subscription.
            </summary>
        </member>
        <member name="T:OpcCom.Da20.BrowsePosition">
            <summary>
            Implements an object that handles multi-step browse operations for DA2.05 servers.
            </summary>
        </member>
        <member name="F:OpcCom.Da20.BrowsePosition.Enumerator">
            <summary>
            The enumerator for a browse operation.
            </summary>
        </member>
        <member name="F:OpcCom.Da20.BrowsePosition.IsBranch">
            <summary>
            Whether the current enumerator returns branches or leaves.
            </summary>
        </member>
        <member name="F:OpcCom.Da20.BrowsePosition.Names">
            <summary>
            The pre-fetched set of names.
            </summary>
        </member>
        <member name="F:OpcCom.Da20.BrowsePosition.Index">
            <summary>
            The current index in the pre-fetched names.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.BrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters,OpcCom.EnumString,System.Boolean)">
            <summary>
            Initializes a browse position 
            </summary>
        </member>
        <member name="M:OpcCom.Da20.BrowsePosition.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.BrowsePosition.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:OpcCom.Da20.Subscription">
            <summary>
            An in-process wrapper for a remote OPC Data Access 2.0X group.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Subscription.#ctor(System.Object,Opc.Da.SubscriptionState,System.Int32)">
            <summary>
            Initializes a new instance of a subscription.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Subscription.Refresh">
            <summary>
            Tells the server to send an data change update for all subscription items containing the cached values. 
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Subscription.SetEnabled(System.Boolean)">
            <summary>
            Sets whether data change callbacks are enabled.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Subscription.GetEnabled">
            <summary>
            Gets whether data change callbacks are enabled.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Subscription.Read(Opc.ItemIdentifier[],Opc.Da.Item[])">
            <summary>
            Reads a set of items using DA2.0 interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Subscription.Read(Opc.Da.ItemValueResult[],System.Boolean)">
            <summary>
            Reads a set of values.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Subscription.Write(Opc.ItemIdentifier[],Opc.Da.ItemValue[])">
            <summary>
            Writes a set of items using DA2.0 interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Subscription.BeginRead(Opc.ItemIdentifier[],Opc.Da.Item[],System.Int32,System.Int32@)">
            <summary>
            Begins an asynchronous read of a set of items using DA2.0 interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da20.Subscription.BeginWrite(Opc.ItemIdentifier[],Opc.Da.ItemValue[],System.Int32,System.Int32@)">
            <summary>
            Begins an asynchronous write for a set of items using DA2.0 interfaces.
            </summary>
        </member>
        <member name="T:OpcCom.Da.BrowsePosition">
            <summary>
            Implements an object that handles multi-step browse operations.
            </summary>
        </member>
        <member name="F:OpcCom.Da.BrowsePosition.ContinuationPoint">
            <summary>
            The continuation point for a browse operation.
            </summary>
        </member>
        <member name="F:OpcCom.Da.BrowsePosition.MoreElements">
            <summary>
            Indicates that elements that meet the filter criteria have not been returned.
            </summary>
        </member>
        <member name="M:OpcCom.Da.BrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String)">
            <summary>
            Initializes a browse position 
            </summary>
        </member>
        <member name="T:OpcCom.Da.Interop">
            <summary>
            Contains state information for a single asynchronous OpcCom.Da.Interop.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.Convert(System.Runtime.InteropServices.FILETIME)">
            <summary>
            Converts a standard FILETIME to an OpcRcw.Da.FILETIME structure.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.Convert(OpcRcw.Da.FILETIME)">
            <summary>
            Converts an OpcRcw.Da.FILETIME to a standard FILETIME structure.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetServerStatus(Opc.Da.ServerStatus,System.Int32)">
            <summary>
            Allocates and marshals a OPCSERVERSTATUS structure.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetServerStatus(System.IntPtr@,System.Boolean)">
            <summary>
            Unmarshals and deallocates a OPCSERVERSTATUS structure.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetBrowseFilter(Opc.Da.browseFilter)">
            <summary>
            Converts a browseFilter values to the COM equivalent.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetBrowseFilter(OpcRcw.Da.OPCBROWSEFILTER)">
            <summary>
            Converts a browseFilter values from the COM equivalent.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetHRESULTs(Opc.IResult[])">
            <summary>
            Allocates and marshals an array of HRESULT codes.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetBrowseElements(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals and deallocates an array of OPCBROWSEELEMENT structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetBrowseElements(Opc.Da.BrowseElement[],System.Boolean)">
            <summary>
            Allocates and marshals an array of OPCBROWSEELEMENT structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetBrowseElement(System.IntPtr,System.Boolean)">
            <summary>
            Unmarshals and deallocates a OPCBROWSEELEMENT structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetBrowseElement(Opc.Da.BrowseElement,System.Boolean)">
            <summary>
            Allocates and marshals an OPCBROWSEELEMENT structure.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetPropertyIDs(Opc.Da.PropertyID[])">
            <summary>
            Creates an array of property codes.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetPropertyIDs(System.Int32[])">
            <summary>
            Creates an array of property codes.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetItemPropertyCollections(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals and deallocates an array of OPCITEMPROPERTIES structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetItemPropertyCollections(Opc.Da.ItemPropertyCollection[])">
            <summary>
            Allocates and marshals an array of OPCITEMPROPERTIES structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetItemProperties(OpcRcw.Da.OPCITEMPROPERTIES@,System.Boolean)">
            <summary>
            Unmarshals and deallocates a OPCITEMPROPERTIES structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetItemProperties(Opc.Da.ItemProperty[])">
            <summary>
            Allocates and marshals an array of OPCITEMPROPERTIES structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetItemProperty(System.IntPtr,System.Boolean)">
            <summary>
            Unmarshals and deallocates a OPCITEMPROPERTY structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetItemProperty(Opc.Da.ItemProperty)">
            <summary>
            Allocates and marshals an arary of OPCITEMPROPERTY structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetPropertyID(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Interop.UnmarshalPropertyValue(Opc.Da.PropertyID,System.Object)">
            <summary>
            Converts the property value to a type supported by the unified interface.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.MarshalPropertyValue(Opc.Da.PropertyID,System.Object)">
            <summary>
            Converts the property value to a type supported by COM-DA interface.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetOPCITEMVQTs(Opc.Da.ItemValue[])">
            <summary>
            Converts an array of item values to an array of OPCITEMVQT objects.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetOPCITEMDEFs(Opc.Da.Item[])">
            <summary>
            Converts an array of item objects to an array of GetOPCITEMDEF objects.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetItemValues(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals and deallocates a OPCITEMSTATE structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetItemResults(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals and deallocates a OPCITEMRESULT structures.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Interop.GetItemStates(Opc.Da.ItemValueResult[])">
            <summary>
            Allocates and marshals an array of OPCBROWSEELEMENT structures.
            </summary>
        </member>
        <member name="T:OpcCom.Da.ResultIDs">
            <summary>
            Defines all well known COM DA HRESULT codes.
            </summary>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.S_OK">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.S_FALSE">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_NOTIMPL">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_OUTOFMEMORY">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_INVALIDARG">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_NOINTERFACE">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_POINTER">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_FAIL">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.CONNECT_E_NOCONNECTION">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.CONNECT_E_ADVISELIMIT">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.DISP_E_TYPEMISMATCH">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.DISP_E_OVERFLOW">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_INVALIDHANDLE">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_BADTYPE">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_PUBLIC">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_BADRIGHTS">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_UNKNOWNITEMID">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_INVALIDITEMID">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_INVALIDFILTER">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_UNKNOWNPATH">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_RANGE">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_DUPLICATENAME">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.S_UNSUPPORTEDRATE">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.S_CLAMP">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.S_INUSE">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_INVALIDCONFIGFILE">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_NOTFOUND">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_INVALID_PID">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_DEADBANDNOTSET">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_DEADBANDNOTSUPPORTED">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_NOBUFFERING">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_INVALIDCONTINUATIONPOINT">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.S_DATAQUEUEOVERFLOW">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_RATENOTSET">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.ResultIDs.E_NOTSUPPORTED">
            <remarks/>
        </member>
        <member name="T:OpcCom.Da.Server">
            <summary>
            A .NET wrapper for a COM server that implements the DA server interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Server.#ctor">
            <summary>
            Initializes the object.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Server.#ctor(Opc.URL,System.Object)">
            <summary>
            Initializes the object with the specifed COM server.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Server.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Server.GetErrorText(System.String,Opc.ResultID)">
            <summary>
            Returns the localized text for the specified result code.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <param name="resultID">The result code identifier.</param>
            <returns>A message localized for the best match for the requested locale.</returns>
        </member>
        <member name="M:OpcCom.Da.Server.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:OpcCom.Da.Server.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:OpcCom.Da.Server.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:OpcCom.Da.Server.Read(Opc.Da.Item[])">
            <summary>
            Reads the current values for a set of items. 
            </summary>
            <param name="items">The set of items to read.</param>
            <returns>The results of the read operation for each item.</returns>
        </member>
        <member name="M:OpcCom.Da.Server.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
            <param name="items">The set of item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:OpcCom.Da.Server.CreateSubscription(Opc.Da.SubscriptionState)">
            <summary>
            Creates a new subscription.
            </summary>
            <param name="state">The initial state of the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:OpcCom.Da.Server.CancelSubscription(Opc.Da.ISubscription)">
            <summary>
            Cancels a subscription and releases all resources allocated for it.
            </summary>
            <param name="subscription">The subscription to cancel.</param>
        </member>
        <member name="M:OpcCom.Da.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
            <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
            <param name="itemID">The identifier of branch which is the target of the search.</param>
            <param name="filters">The filters to use to limit the set of child elements returned.</param>
            <param name="position">An object used to continue a browse that could not be completed.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:OpcCom.Da.Server.BrowseNext(Opc.Da.BrowsePosition@)">
            <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
            <param name="position">An object containing the browse operation state information.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:OpcCom.Da.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
            <summary>
            Returns the item properties for a set of items.
            </summary>
            <param name="itemIDs">A list of item identifiers.</param>
            <param name="propertyIDs">A list of properties to fetch for each item.</param>
            <param name="returnValues">Whether the property values should be returned with the properties.</param>
            <returns>A list of properties for each item.</returns>
        </member>
        <member name="M:OpcCom.Da.Server.ChangeType(System.Object,System.Type,System.String)">
            <summary>
            Converts a value to the specified type using the specified locale.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Server.CreateSubscription(System.Object,Opc.Da.SubscriptionState,System.Int32)">
            <summary>
            Creates a new instance of a subscription.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Server.ProcessResults(Opc.Da.BrowseElement[],Opc.Da.PropertyID[])">
            <summary>
            Updates the properties to convert COM values to OPC .NET API results.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Server.m_filters">
            <summary>
            The default result filters for the server.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Server.m_subscriptions">
            <summary>
            A table of active subscriptions for the server.
            </summary>
        </member>
        <member name="T:OpcCom.Da.Subscription">
            <summary>
            A .NET wrapper for a COM server that implements the DA group interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.#ctor(System.Object,Opc.Da.SubscriptionState,System.Int32)">
            <summary>
            Initializes a new instance of a subscription.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.m_group">
            <summary>
            The COM server for the group object.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.m_connection">
            <summary>
            A connect point with the COM server.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.m_callback">
            <summary>
            The internal object that implements the IOPCDataCallback interface.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.m_name">
            <summary>
            The name of the group on the server.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.m_handle">
            <summary>
            A handle assigned by the client for the subscription.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.m_filters">
            <summary>
            The default result filters for the subscription.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.m_items">
            <summary>
            A table of all item identifers which are indexed by internal handle.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.m_counter">
            <summary>
            A counter used to assign unique internal client handles.
            </summary>
        </member>
        <member name="E:OpcCom.Da.Subscription.DataChanged">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:OpcCom.Da.Subscription.GetState">
            <summary>
            Returns the current state of the subscription.
            </summary>
            <returns>The current state of the subscription.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
            <summary>
            Changes the state of a subscription.
            </summary>
            <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
            <param name="state">The new subscription state.</param>
            <returns>The actual subscption state after applying the changes.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.AddItems(Opc.Da.Item[])">
            <summary>
            Adds items to the subscription.
            </summary>
            <param name="items">The set of items to add to the subscription.</param>
            <returns>The results of the add item operation for each item.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.ModifyItems(System.Int32,Opc.Da.Item[])">
            <summary>
            Modifies the state of items in the subscription
            </summary>
            <param name="masks">Specifies which item state parameters are being modified.</param>
            <param name="items">The new state for each item.</param>
            <returns>The results of the modify item operation for each item.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.RemoveItems(Opc.ItemIdentifier[])">
            <summary>
            Removes items from the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being removed.</param>
            <returns>The results of the remove item operation for each item.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.Read(Opc.Da.Item[])">
            <summary>
            Reads the values for a set of items in the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being read.</param>
            <returns>The value for each of items.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items in the subscription.
            </summary>
            <param name="items">The item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
            <param name="items">The set of item values to write (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous read or write operation.
            </summary>
            <param name="request">The object returned from the BeginRead or BeginWrite request.</param>
            <param name="callback">The function to invoke when the cancel completes.</param>
        </member>
        <member name="M:OpcCom.Da.Subscription.Refresh">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Refresh(System.Object,Opc.IRequest@)">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.SetEnabled(System.Boolean)">
            <summary>
            Enables or disables data change notifications from the server.
            </summary>
            <param name="enabled">Whether data change notifications are enabled.</param>
        </member>
        <member name="M:OpcCom.Da.Subscription.GetEnabled">
            <summary>
            Checks whether data change notifications from the server are enabled.
            </summary>
            <returns>Whether data change notifications are enabled.</returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.Read(Opc.ItemIdentifier[],Opc.Da.Item[])">
            <summary>
            Reads a set of items using DA3.0 interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Write(Opc.ItemIdentifier[],Opc.Da.ItemValue[])">
            <summary>
            Writes a set of items using DA3.0 interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.BeginRead(Opc.ItemIdentifier[],Opc.Da.Item[],System.Int32,System.Int32@)">
            <summary>
            Begins an asynchronous read of a set of items using DA3.0 interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.BeginWrite(Opc.ItemIdentifier[],Opc.Da.ItemValue[],System.Int32,System.Int32@)">
            <summary>
            Begins an asynchronous write for a set of items using DA3.0 interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.SetReqTypes(Opc.Da.ItemResult[])">
            <summary>
            Sets the requested data type for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.SetActive(Opc.Da.ItemResult[],System.Boolean)">
            <summary>
            Sets the active state for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.UpdateActive(Opc.Da.ItemResult[])">
            <summary>
            Update the active state for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.SetDeadbands(Opc.Da.ItemResult[])">
            <summary>
            Sets the deadbands for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.ClearDeadbands(Opc.Da.ItemResult[])">
            <summary>
            Clears the deadbands for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.UpdateDeadbands(Opc.Da.ItemResult[])">
            <summary>
            Update the deadbands for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.SetSamplingRates(Opc.Da.ItemResult[])">
            <summary>
            Sets the sampling rates for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.ClearSamplingRates(Opc.Da.ItemResult[])">
            <summary>
            Clears the sampling rates for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.UpdateSamplingRates(Opc.Da.ItemResult[])">
            <summary>
            Update the sampling rates for the specified items.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.SetEnableBuffering(Opc.Da.ItemResult[])">
            <summary>
            Sets the enable buffering flags.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Advise">
            <summary>
            Establishes a connection point callback with the COM server.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Unadvise">
            <summary>
            Closes a connection point callback with the COM server.
            </summary>
        </member>
        <member name="T:OpcCom.Da.Subscription.ItemTable">
            <summary>
            A table of item identifiers indexed by internal handle.
            </summary>
        </member>
        <member name="P:OpcCom.Da.Subscription.ItemTable.Item(System.Object)">
            <summary>
            Looks up an item identifier for the specified internal handle.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.ItemTable.GetInvalidHandle">
            <summary>
            Returns a server handle that must be treated as invalid by the server,
            </summary>
            <returns> </returns>
        </member>
        <member name="M:OpcCom.Da.Subscription.ItemTable.GetItemIDs(Opc.ItemIdentifier[])">
            <summary>
            Copies a set of items an substitutes the client and server handles for use by the server.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.ItemTable.CreateItems(Opc.Da.Item[])">
            <summary>
            Creates a item result list from a set of items and sets the handles for use by the server.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.ItemTable.ApplyFilters(System.Int32,Opc.ItemIdentifier[])">
            <summary>
            Updates a result list based on the request options and sets the handles for use by the client.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.ItemTable.m_items">
            <summary>
            The table of known item identifiers.
            </summary>
        </member>
        <member name="T:OpcCom.Da.Subscription.Callback">
            <summary>
            A class that implements the IOPCDataCallback interface.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Callback.#ctor(System.Object,System.Int32,OpcCom.Da.Subscription.ItemTable)">
            <summary>
            Initializes the object with the containing subscription object.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Callback.SetFilters(System.Object,System.Int32)">
            <summary>
            Updates the result filters and subscription handle.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Callback.BeginRequest(OpcCom.Da.Request)">
            <summary>
            Adds an asynchrounous request.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Callback.CancelRequest(OpcCom.Da.Request)">
            <summary>
            Returns true is an asynchrounous request can be cancelled.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Callback.EndRequest(OpcCom.Da.Request)">
            <summary>
            Remvoes an asynchrounous request.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.Callback.m_handle">
            <summary>
            The handle to return with any callbacks. 
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.Callback.m_filters">
            <summary>
            The current request options for the subscription.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.Callback.m_items">
            <summary>
            A table of item identifiers indexed by internal handle.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Subscription.Callback.m_requests">
            <summary>
            A table of autstanding asynchronous requests.
            </summary>
        </member>
        <member name="E:OpcCom.Da.Subscription.Callback.DataChanged">
            <summary>
            Raised when data changed callbacks arrive.
            </summary>
        </member>
        <member name="E:OpcCom.Da.Subscription.Callback.m_dataChanged">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Subscription.Callback.OnDataChange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],System.Object[],System.Int16[],OpcRcw.Da.FILETIME[],System.Int32[])">
            <summary>
            Called when a data changed event is received.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Subscription.Callback.UnmarshalValues(System.Int32,System.Int32[],System.Object[],System.Int16[],OpcRcw.Da.FILETIME[],System.Int32[])">
            <summary>
            Creates an array of item value result objects from the callback data.
            </summary>
        </member>
        <member name="T:OpcCom.Da.Request">
            <summary>
            Contains the state of an asynchronous request to a COM server.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Request.RequestID">
            <summary>
            The unique id assigned by the subscription.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Request.CancelID">
            <summary>
            The unique id assigned by the server.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Request.Callback">
            <summary>
            The callback used when the request completes.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Request.Filters">
            <summary>
            The result filters to use for the request.
            </summary>
        </member>
        <member name="F:OpcCom.Da.Request.InitialResults">
            <summary>
            The set of initial results.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Request.#ctor(Opc.Da.ISubscription,System.Object,System.Int32,System.Int32,System.Delegate)">
            <summary>
            Initializes the object with a subscription and a unique id.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Request.BeginRead(System.Int32,Opc.IdentifiedResult[])">
            <summary>
            Begins a read request by storing the initial results.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Request.BeginWrite(System.Int32,Opc.IdentifiedResult[])">
            <summary>
            Begins a write request by storing the initial results.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Request.BeginRefresh(System.Int32)">
            <summary>
            Begins a refersh request by saving the cancel id.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Request.EndRequest">
            <summary>
            Completes a read request by processing the values and invoking the callback.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Request.EndRequest(Opc.Da.ItemValueResult[])">
            <summary>
            Completes a read request by processing the values and invoking the callback.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Request.EndRequest(Opc.IdentifiedResult[])">
            <summary>
            Completes a write request by processing the values and invoking the callback.
            </summary>
        </member>
        <member name="T:OpcCom.Da.Wrapper.Server">
            <summary>
            A class that implements the COM-DA interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.#ctor">
            <summary>
            Initializes the object with the default values.
            </summary>
        </member>
        <member name="P:OpcCom.Da.Wrapper.Server.IServer">
            <summary>
            The data access server object that is being wrapped and exposed via COM.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.SetGroupName(System.String,System.String)">
            <summary>
            Changes the name of an existing group.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.CreateException(System.Exception)">
            <summary>
            Converts an exception to an exception that returns a COM error code.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.CreateException(System.Int32)">
            <summary>
            Creates an exception from a COM error code.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.CreateGroup(Opc.Da.SubscriptionState@,System.Int32,System.Int32)">
            <summary>
            Creates a new group.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.Load(System.Guid)">
            <summary>
            Called when the object is loaded by the COM wrapper process.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.Unload">
            <summary>
            Called when the object is unloaded by the COM wrapper process.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.SetLocaleID(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.QueryAvailableLocaleIDs(System.Int32@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.GetLocaleID(System.Int32@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.OpcRcw#Comn#IOPCCommon#GetErrorString(System.Int32,System.String@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.SetClientName(System.String)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.GetGroupByName(System.String,System.Guid@,System.Object@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.GetErrorString(System.Int32,System.Int32,System.String@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.RemoveGroup(System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.CreateGroupEnumerator(OpcRcw.Da.OPCENUMSCOPE,System.Guid@,System.Object@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.AddGroup(System.String,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.Int32@,System.Int32@,System.Guid@,System.Object@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.GetStatus(System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.Browse(System.String,System.IntPtr@,System.Int32,OpcRcw.Da.OPCBROWSEFILTER,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32[],System.Int32@,System.Int32@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.GetProperties(System.Int32,System.String[],System.Int32,System.Int32,System.Int32[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.GetItemID(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.BrowseAccessPaths(System.String,OpcRcw.Comn.IEnumString@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.QueryOrganization(OpcRcw.Da.OPCNAMESPACETYPE@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.ChangeBrowsePosition(OpcRcw.Da.OPCBROWSEDIRECTION,System.String)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.BrowseOPCItemIDs(OpcRcw.Da.OPCBROWSETYPE,System.String,System.Int16,System.Int32,OpcRcw.Comn.IEnumString@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.LookupItemIDs(System.String,System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.QueryAvailableProperties(System.String,System.Int32@,System.IntPtr@,System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.GetItemProperties(System.String,System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.WriteVQT(System.Int32,System.String[],OpcRcw.Da.OPCITEMVQT[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.Read(System.Int32,System.String[],System.Int32[],System.IntPtr@,System.IntPtr@,System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.CleanupContinuationPoints">
            <summary>
            Removes all expired continuation points.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.IsItem(System.String)">
            <summary>
            Finds the item id at the current browse position corresponding the name.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.FindChild(System.String)">
            <summary>
            Finds the item id at the current browse position corresponding the name.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.BuildBrowseStack(Opc.ItemIdentifier)">
            <summary>
            Recursively rebuilds the browse stack.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.BuildBrowseStack(Opc.ItemIdentifier,Opc.ItemIdentifier)">
            <summary>
            Recursively rebuilds the browse stack.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Server.Browse(Opc.ItemIdentifier,OpcRcw.Da.OPCBROWSETYPE,System.String,System.Int16,System.Int32,System.Collections.ArrayList)">
            <summary>
            Browses for children of the specified item.
            </summary>
        </member>
        <member name="T:OpcCom.Da.Wrapper.Server.ContinuationPoint">
            <summary>
            Stores information about a continuation point.
            </summary>
        </member>
        <member name="T:OpcCom.Da.Wrapper.Group">
            <summary>
            A class that implements the COM-DA interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.#ctor(OpcCom.Da.Wrapper.Server,System.String,System.Int32,System.Int32,System.Int32,Opc.Da.ISubscription)">
            <summary>
            Initializes the object with the default values.
            </summary>
        </member>
        <member name="P:OpcCom.Da.Wrapper.Group.Name">
            <summary>
            The unique name for the group.
            </summary>
        </member>
        <member name="P:OpcCom.Da.Wrapper.Group.ServerHandle">
            <summary>
            The unique server assigned handle for the group.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.OnAdvise(System.Guid)">
            <summary>
            Called when a IConnectionPoint.Advise is called.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.OnUnadvise(System.Guid)">
            <summary>
            Called when a IConnectionPoint.Unadvise is called.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetActiveState(System.Int32,System.Int32[],System.Int32,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.AddItems(System.Int32,OpcRcw.Da.OPCITEMDEF[],System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetClientHandles(System.Int32,System.Int32[],System.Int32[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetDatatypes(System.Int32,System.Int32[],System.Int16[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.ValidateItems(System.Int32,OpcRcw.Da.OPCITEMDEF[],System.Int32,System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.CreateEnumerator(System.Guid@,System.Object@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.RemoveItems(System.Int32,System.Int32[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.Read(OpcRcw.Da.OPCDATASOURCE,System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.Write(System.Int32,System.Int32[],System.Object[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.ReadMaxAge(System.Int32,System.Int32[],System.Int32[],System.IntPtr@,System.IntPtr@,System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.WriteVQT(System.Int32,System.Int32[],OpcRcw.Da.OPCITEMVQT[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.Read(System.Int32,System.Int32[],System.Int32,System.Int32@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.Write(System.Int32,System.Int32[],System.Object[],System.Int32,System.Int32@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.Cancel2(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.Refresh2(OpcRcw.Da.OPCDATASOURCE,System.Int32,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetEnable(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.GetEnable(System.Int32@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.ReadMaxAge(System.Int32,System.Int32[],System.Int32[],System.Int32,System.Int32@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.WriteVQT(System.Int32,System.Int32[],OpcRcw.Da.OPCITEMVQT[],System.Int32,System.Int32@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.RefreshMaxAge(System.Int32,System.Int32,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.GetState(System.Int32@,System.Int32@,System.String@,System.Int32@,System.Single@,System.Int32@,System.Int32@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.CloneGroup(System.String,System.Guid@,System.Object@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetName(System.String)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetState(System.IntPtr,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.GetKeepAlive(System.Int32@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetKeepAlive(System.Int32,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetItemDeadband(System.Int32,System.Int32[],System.Single[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.GetItemDeadband(System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.ClearItemDeadband(System.Int32,System.Int32[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetItemSamplingRate(System.Int32,System.Int32[],System.Int32[],System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.GetItemSamplingRate(System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.ClearItemSamplingRate(System.Int32,System.Int32[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.SetItemBufferEnable(System.Int32,System.Int32[],System.Int32[],System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.GetItemBufferEnable(System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.AssignHandle">
            <summary>
            Creates a unique handle for transactions.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.OnDataChanged(System.Object,System.Object,Opc.Da.ItemValueResult[])">
            <summary>
            A delegate to receive asynchronous dta changed notifications.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.OnReadComplete(System.Object,Opc.Da.ItemValueResult[])">
            <summary>
            A delegate to receive asynchronous read completed notifications.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.InvokeCallback(System.Object,Opc.Da.ItemValueResult[],System.Boolean)">
            <summary>
            A delegate to receive asynchronous read completed notifications.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.OnWriteComplete(System.Object,Opc.IdentifiedResult[])">
            <summary>
            A delegate to receive asynchronous write completed notifications.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.Group.AddItems(Opc.Da.Item[])">
            <summary>
            Adds the items to group.
            </summary>
        </member>
        <member name="T:OpcCom.Da.Wrapper.ConnectionPointContainer">
            <summary>
            A class that implements the COM-DA interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.OnAdvise(System.Guid)">
            <summary>
            Called when a IConnectionPoint.Advise is called.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.OnUnadvise(System.Guid)">
            <summary>
            Called when a IConnectionPoint.Unadvise is called.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.RegisterInterface(System.Guid)">
            <summary>
            Registers an interface as a connection point.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.UnregisterInterface(System.Guid)">
            <summary>
            Unregisters an interface as a connection point.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.GetCallback(System.Guid)">
            <summary>
            Returns the callback interface for the connection point (if currently connected).
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.IsConnected(System.Guid)">
            <summary>
            Whether a client has connected to the specified connection point.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.EnumConnectionPoints(OpcRcw.Comn.IEnumConnectionPoints@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.FindConnectionPoint(System.Guid@,OpcRcw.Comn.IConnectionPoint@)">
            <remarks/>
        </member>
        <member name="T:OpcCom.Da.Wrapper.ConnectionPoint">
            <summary>
            A class that implements the COM-DA interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.#ctor(System.Guid,OpcCom.Da.Wrapper.ConnectionPointContainer)">
            <summary>
            Creates a connection point for the specified interface and container.
            </summary>
        </member>
        <member name="P:OpcCom.Da.Wrapper.ConnectionPoint.Callback">
            <summary>
            The current callback object.
            </summary>
        </member>
        <member name="P:OpcCom.Da.Wrapper.ConnectionPoint.IsConnected">
            <summary>
            Whether the client has connected to the connection point.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.Advise(System.Object,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.Unadvise(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.GetConnectionInterface(System.Guid@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.EnumConnections(OpcRcw.Comn.IEnumConnections@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.GetConnectionPointContainer(OpcRcw.Comn.IConnectionPointContainer@)">
            <remarks/>
        </member>
        <member name="T:OpcCom.Da.Wrapper.EnumConnectionPoints">
            <summary>
            A class that implements the COM-DA interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with a set of connection points.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.Skip(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.Clone(OpcRcw.Comn.IEnumConnectionPoints@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.Reset">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.RemoteNext(System.Int32,System.IntPtr,System.Int32@)">
            <remarks/>
        </member>
        <member name="T:OpcCom.Da.Wrapper.EnumOPCItemAttributes">
            <summary>
            A class that implements the COM-DA interfaces.
            </summary>
        </member>
        <member name="T:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.ItemID">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.AccessPath">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.ClientHandle">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.ServerHandle">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.Active">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.CanonicalDataType">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.RequestedDataType">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.AccessRights">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.EuType">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.MaxValue">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.MinValue">
            <remarks/>
        </member>
        <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.EuInfo">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with a set of connection points.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.Skip(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.Clone(OpcRcw.Da.IEnumOPCItemAttributes@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.Reset">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.Next(System.Int32,System.IntPtr@,System.Int32@)">
            <remarks/>
        </member>
        <member name="T:OpcCom.Da.Wrapper.EnumUnknown">
            <summary>
            A class that implements the COM-DA interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumUnknown.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with a set of interface pointers.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumUnknown.Skip(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumUnknown.Clone(OpcRcw.Comn.IEnumUnknown@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumUnknown.Reset">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumUnknown.RemoteNext(System.Int32,System.IntPtr,System.Int32@)">
            <remarks/>
        </member>
        <member name="T:OpcCom.Da.Wrapper.EnumString">
            <summary>
            A class that implements the COM-DA interfaces.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumString.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with a set of interface pointers.
            </summary>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumString.Skip(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumString.Clone(OpcRcw.Comn.IEnumString@)">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumString.Reset">
            <remarks/>
        </member>
        <member name="M:OpcCom.Da.Wrapper.EnumString.RemoteNext(System.Int32,System.IntPtr,System.Int32@)">
            <remarks/>
        </member>
        <member name="T:OpcCom.Cpx.ResultIDs">
            <summary>
            Defines all well known Complex Data HRESULT codes.
            </summary>
        </member>
        <member name="F:OpcCom.Cpx.ResultIDs.E_TYPE_CHANGED">
            <remarks/>
        </member>
        <member name="F:OpcCom.Cpx.ResultIDs.E_FILTER_DUPLICATE">
            <remarks/>
        </member>
        <member name="F:OpcCom.Cpx.ResultIDs.E_FILTER_INVALID">
            <remarks/>
        </member>
        <member name="F:OpcCom.Cpx.ResultIDs.E_FILTER_ERROR">
            <remarks/>
        </member>
        <member name="F:OpcCom.Cpx.ResultIDs.S_FILTER_NO_DATA">
            <remarks/>
        </member>
        <member name="T:OpcCom.ConnectionPoint">
            <summary>
            Adds and removes a connection point to a server.
            </summary>
        </member>
        <member name="F:OpcCom.ConnectionPoint.m_server">
            <summary>
            The COM server that supports connection points.
            </summary>
        </member>
        <member name="F:OpcCom.ConnectionPoint.m_cookie">
            <summary>
            The id assigned to the connection by the COM server.
            </summary>
        </member>
        <member name="F:OpcCom.ConnectionPoint.m_refs">
            <summary>
            The number of times Advise() has been called without a matching Unadvise(). 
            </summary>
        </member>
        <member name="M:OpcCom.ConnectionPoint.#ctor(System.Object,System.Guid)">
            <summary>
            Initializes the object by finding the specified connection point.
            </summary>
        </member>
        <member name="M:OpcCom.ConnectionPoint.Dispose">
            <summary>
            Releases the COM server.
            </summary>
        </member>
        <member name="P:OpcCom.ConnectionPoint.Cookie">
            <summary> 
            The cookie returned in the advise call. 
            </summary> 
        </member>
        <member name="M:OpcCom.ConnectionPoint.Advise(System.Object)">
            <summary>
            Establishes a connection, if necessary and increments the reference count.
            </summary>
        </member>
        <member name="M:OpcCom.ConnectionPoint.Unadvise">
            <summary>
            Decrements the reference count and closes the connection if no more references.
            </summary>
        </member>
        <member name="T:OpcCom.EnumGuid">
            <summary>
            Enumerates a set of GUIDs.
            </summary>
        </member>
        <member name="M:OpcCom.EnumGuid.#ctor(System.Object)">
            <summary>
            Saves a reference to the COM server.
            </summary>
        </member>
        <member name="M:OpcCom.EnumGuid.Release">
            <summary>
            releases the COM server.
            </summary>
        </member>
        <member name="M:OpcCom.EnumGuid.GetEnumerator">
            <summary>
            returns a reference to the COM server.
            </summary>
        </member>
        <member name="M:OpcCom.EnumGuid.GetAll">
            <summary>
            fetches all GUIDs. 
            </summary>
        </member>
        <member name="M:OpcCom.EnumGuid.Next(System.Int32)">
            <summary>
            fetches next group of GUIDs. 
            </summary>
        </member>
        <member name="M:OpcCom.EnumGuid.Skip(System.Int32)">
            <summary>
            skips elements.
            </summary>
        </member>
        <member name="M:OpcCom.EnumGuid.Reset">
            <summary>
            sets pointer to the start of the list.
            </summary>
        </member>
        <member name="M:OpcCom.EnumGuid.Clone">
            <summary>
            clones the enumerator.
            </summary>
        </member>
        <member name="T:OpcCom.EnumString">
            <summary>
            A wrapper for the COM IEnumString interface.
            </summary>
        </member>
        <member name="F:OpcCom.EnumString.m_enumerator">
            <summary>
            A reference to the remote COM object.
            </summary>
        </member>
        <member name="M:OpcCom.EnumString.#ctor(System.Object)">
            <summary>
            Initializes the object with an enumerator.
            </summary>
        </member>
        <member name="M:OpcCom.EnumString.Dispose">
            <summary>
            Releases the remote COM object.
            </summary>
        </member>
        <member name="M:OpcCom.EnumString.Next(System.Int32)">
            <summary>
            Fetches the next group of strings. 
            </summary>
        </member>
        <member name="M:OpcCom.EnumString.Skip(System.Int32)">
            <summary>
            Skips a number of strings.
            </summary>
        </member>
        <member name="M:OpcCom.EnumString.Reset">
            <summary>
            Sets pointer to the start of the list.
            </summary>
        </member>
        <member name="M:OpcCom.EnumString.Clone">
            <summary>
            Clones the enumerator.
            </summary>
        </member>
        <member name="T:OpcCom.Factory">
            <summary>
            The default class used to instantiate server objects.
            </summary>
        </member>
        <member name="M:OpcCom.Factory.#ctor">
            <summary>
            Initializes an instance for use for in process objects.
            </summary>
        </member>
        <member name="M:OpcCom.Factory.#ctor(System.Boolean)">
            <summary>
            Initializes an instance for use with .NET remoting.
            </summary>
        </member>
        <member name="M:OpcCom.Factory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:OpcCom.Factory.CreateInstance(Opc.URL,Opc.ConnectData)">
            <summary>
            Creates a new instance of the server.
            </summary>
        </member>
        <member name="M:OpcCom.Factory.Connect(Opc.URL,Opc.ConnectData)">
            <summary>
            Connects to the specified COM server server.
            </summary>
        </member>
        <member name="T:OpcCom.Interop">
            <summary>
            Exposes WIN32 and COM API functions.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.EnumComputers">
            <summary>
            Enumerates computers on the local network.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetSystemMessage(System.Int32)">
            <summary>
            Retrieves the system message text for the specified error.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetComputerName">
            <summary>
            Retrieves the name of the local computer.
            </summary>
        </member>
        <member name="T:OpcCom.Interop.ServerInfo">
            <summary>
            A class used to allocate and deallocate the elements of a COSERVERINFO structure.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.ServerInfo.Allocate(System.String,System.Net.NetworkCredential)">
            <summary>
            Allocates a COSERVERINFO structure.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.ServerInfo.Deallocate">
            <summary>
            Deallocated memory allocated when the COSERVERINFO structure was created.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.InitializeSecurity">
            <summary>
            Initializes COM security.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.CreateInstance(System.Guid,System.String,System.Net.NetworkCredential)">
            <summary>
            Creates an instance of a COM server.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.CreateInstanceWithLicenseKey(System.Guid,System.String,System.Net.NetworkCredential,System.String)">
            <summary>
            Creates an instance of a COM server using the specified license key.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetInt32s(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals and frees an array of 32 bit integers.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetInt32s(System.Int32[])">
            <summary>
            Allocates and marshals an array of 32 bit integers.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetInt16s(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals and frees a array of 16 bit integers.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetInt16s(System.Int16[])">
            <summary>
            Allocates and marshals an array of 16 bit integers.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetUnicodeStrings(System.String[])">
            <summary>
            Marshals an array of strings into a unmanaged memory buffer
            </summary>
            <param name="values">The array of strings to marshal</param>
            <returns>The pointer to the unmanaged memory buffer</returns>
        </member>
        <member name="M:OpcCom.Interop.GetUnicodeStrings(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals and frees a array of unicode strings.
            </summary>
        </member>
        <member name="P:OpcCom.Interop.PreserveUTC">
            <summary>
            This flag supresses the conversion to local time done during marhsalling.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetFILETIME(System.DateTime)">
            <summary>
            Marshals a DateTime as a WIN32 FILETIME.
            </summary>
            <param name="datetime">The DateTime object to marshal</param>
            <returns>The WIN32 FILETIME</returns>
        </member>
        <member name="M:OpcCom.Interop.GetFILETIME(System.IntPtr)">
            <summary>
            Unmarshals a WIN32 FILETIME from a pointer.
            </summary>
            <param name="pFiletime">A pointer to a FILETIME structure.</param>
            <returns>A DateTime object.</returns>
        </member>
        <member name="M:OpcCom.Interop.GetFILETIME(System.Runtime.InteropServices.FILETIME)">
            <summary>
            Unmarshals a WIN32 FILETIME.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetFILETIMEs(System.DateTime[])">
            <summary>
            Marshals an array of DateTimes into an unmanaged array of FILETIMEs
            </summary>
            <param name="datetimes">The array of DateTimes to marshal</param>
            <returns>The IntPtr array of FILETIMEs</returns>
        </member>
        <member name="M:OpcCom.Interop.GetFILETIMEs(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals an array of WIN32 FILETIMEs as DateTimes.
            </summary>
        </member>
        <member name="T:OpcCom.Interop.GUID">
            <summary>
            WIN32 GUID struct declaration.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetGUIDs(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals an array of WIN32 GUIDs as Guid.
            </summary>
        </member>
        <member name="P:OpcCom.Interop.VARIANT_SIZE">
            <summary>
            The size, in bytes, of a VARIANT structure.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.VariantClear(System.IntPtr)">
            <summary>
            Frees all memory referenced by a VARIANT stored in unmanaged memory.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetVARIANT(System.Object)">
            <summary>
            Converts an object into a value that can be marshalled to a VARIANT.
            </summary>
            <param name="source">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:OpcCom.Interop.GetVARIANTs(System.Object[],System.Boolean)">
            <summary>
            Marshals an array objects into an unmanaged array of VARIANTs.
            </summary>
            <param name="values">An array of the objects to be marshalled</param>
            <param name="preprocess">Whether the objects should have troublesome types removed before marhalling.</param>
            <returns>An pointer to the array in unmanaged memory</returns>
        </member>
        <member name="M:OpcCom.Interop.GetVARIANTs(System.IntPtr@,System.Int32,System.Boolean)">
            <summary>
            Unmarshals an array of VARIANTs as objects.
            </summary>
        </member>
        <member name="F:OpcCom.Interop.LOCALE_SYSTEM_DEFAULT">
            <summary>
            The constant used to selected the default locale.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetLocale(System.Int32)">
            <summary>
            Converts a LCID to a Locale string.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetLocale(System.String)">
            <summary>
            Converts a Locale string to a LCID.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetType(System.Runtime.InteropServices.VarEnum)">
            <summary>
            Converts the VARTYPE to a system type.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetType(System.Type)">
            <summary>
            Converts the system type to a VARTYPE.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetResultID(System.Int32)">
            <summary>
            Converts the HRESULT to a system type.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.GetResultID(Opc.ResultID)">
            <summary>
            Converts a result id to an HRESULT.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.CreateException(System.String,System.Exception)">
            <summary>
            Returns an exception after extracting HRESULT from the exception.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.CreateException(System.String,System.Int32)">
            <summary>
            Returns an exception after extracting HRESULT from the exception.
            </summary>
        </member>
        <member name="M:OpcCom.Interop.ReleaseServer(System.Object)">
            <summary>
            Releases the server if it is a true COM server.
            </summary>
        </member>
        <member name="T:OpcCom.Server">
            <summary>
            An in-process wrapper for a remote OPC COM-DA server (not thread safe).
            </summary>
        </member>
        <member name="M:OpcCom.Server.#ctor">
            <summary>
            Initializes the object.
            </summary>
        </member>
        <member name="M:OpcCom.Server.#ctor(Opc.URL,System.Object)">
            <summary>
            Initializes the object with the specifed COM server.
            </summary>
        </member>
        <member name="M:OpcCom.Server.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:OpcCom.Server.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:OpcCom.Server.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:OpcCom.Server.Initialize(Opc.URL,Opc.ConnectData)">
            <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
        </member>
        <member name="M:OpcCom.Server.Uninitialize">
            <summary>
            Releases the remote server.
            </summary>
        </member>
        <member name="E:OpcCom.Server.ServerShutdown">
            <summary>
            An event to receive server shutdown notifications.
            </summary>
        </member>
        <member name="M:OpcCom.Server.GetLocale">
            <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
            <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:OpcCom.Server.SetLocale(System.String)">
            <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <returns>A locale that the server supports and is the best match for the requested locale.</returns>
        </member>
        <member name="M:OpcCom.Server.GetSupportedLocales">
            <summary>
            Returns the locales supported by the server
            </summary>
            <remarks>The first element in the array must be the default locale for the server.</remarks>
            <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:OpcCom.Server.GetErrorText(System.String,Opc.ResultID)">
            <summary>
            Returns the localized text for the specified result code.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <param name="resultID">The result code identifier.</param>
            <returns>A message localized for the best match for the requested locale.</returns>
        </member>
        <member name="M:OpcCom.Server.Advise">
            <summary>
            Establishes a connection point callback with the COM server.
            </summary>
        </member>
        <member name="M:OpcCom.Server.Unadvise">
            <summary>
            Closes a connection point callback with the COM server.
            </summary>
        </member>
        <member name="T:OpcCom.Server.Callback">
            <summary>
            A class that implements the IOPCShutdown interface.
            </summary>
        </member>
        <member name="M:OpcCom.Server.Callback.#ctor(OpcCom.Server)">
            <summary>
            Initializes the object with the containing subscription object.
            </summary>
        </member>
        <member name="E:OpcCom.Server.Callback.ServerShutdown">
            <summary>
            An event to receive server shutdown notificiations.
            </summary>
        </member>
        <member name="F:OpcCom.Server.Callback.m_server">
            <summary>
            A table of item identifiers indexed by internal handle.
            </summary>
        </member>
        <member name="E:OpcCom.Server.Callback.m_serverShutdown">
            <summary>
            Raised when data changed callbacks arrive.
            </summary>
        </member>
        <member name="M:OpcCom.Server.Callback.ShutdownRequest(System.String)">
            <summary>
            Called when a shutdown event is received.
            </summary>
        </member>
        <member name="F:OpcCom.Server.m_server">
            <summary>
            The COM server wrapped by the object.
            </summary>
        </member>
        <member name="F:OpcCom.Server.m_url">
            <summary>
            The URL containing host, prog id and clsid information for the remote server.
            </summary>
        </member>
        <member name="F:OpcCom.Server.m_connection">
            <summary>
            A connect point with the COM server.
            </summary>
        </member>
        <member name="F:OpcCom.Server.m_callback">
            <summary>
            The internal object that implements the IOPCShutdown interface.
            </summary>
        </member>
        <member name="T:OpcCom.ServerEnumerator">
            <summary>
            A unique identifier for the result of an operation of an item.
            </summary>
        </member>
        <member name="M:OpcCom.ServerEnumerator.Dispose">
            <summary>
            Frees all unmanaged resources
            </summary>
        </member>
        <member name="M:OpcCom.ServerEnumerator.EnumerateHosts">
            <summary>
            Enumerates hosts that may be accessed for server discovery.
            </summary>
        </member>
        <member name="M:OpcCom.ServerEnumerator.GetAvailableServers(Opc.Specification)">
            <summary>
            Returns a list of servers that support the specified interface specification.
            </summary>
        </member>
        <member name="M:OpcCom.ServerEnumerator.GetAvailableServers(Opc.Specification,System.String,Opc.ConnectData)">
            <summary>
            Returns a list of servers that support the specified specification on the specified host.
            </summary>
        </member>
        <member name="M:OpcCom.ServerEnumerator.CLSIDFromProgID(System.String,System.String,Opc.ConnectData)">
            <summary>
            Looks up the CLSID for the specified prog id on a remote host.
            </summary>
        </member>
        <member name="F:OpcCom.ServerEnumerator.m_server">
            <summary>
            The server enumerator COM server.
            </summary>
        </member>
        <member name="F:OpcCom.ServerEnumerator.m_host">
            <summary>
            The host where the servers are being enumerated.
            </summary>
        </member>
        <member name="F:OpcCom.ServerEnumerator.ProgID">
            <summary>
            The ProgID for the OPC Server Enumerator.
            </summary>
        </member>
        <member name="F:OpcCom.ServerEnumerator.CLSID">
            <summary>
            The CLSID for the OPC Server Enumerator.
            </summary>
        </member>
        <member name="M:OpcCom.ServerEnumerator.ReadClasses(OpcRcw.Comn.IOPCEnumGUID)">
            <summary>
            Reads the guids from the enumerator.
            </summary>
        </member>
        <member name="M:OpcCom.ServerEnumerator.CreateUrl(Opc.Specification,System.Guid)">
            <summary>
            Reads the server details from the enumerator.
            </summary>
        </member>
        <member name="T:OpcCom.IOPCWrappedServer">
            <summary>
            An interface that is invoked when the wrapper loads/unloads the server.
            </summary>
        </member>
        <member name="M:OpcCom.IOPCWrappedServer.Load(System.Guid)">
            <summary>
            Called when the object is loaded by the COM wrapper process.
            </summary>
        </member>
        <member name="M:OpcCom.IOPCWrappedServer.Unload">
            <summary>
            Called when the object is unloaded by the COM wrapper process.
            </summary>
        </member>
        <member name="T:Opc.Da.BrowsePosition">
            <summary>
            Stores the state of a browse operation.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowsePosition.ItemID">
            <summary>
            The item identifier of the branch being browsed.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowsePosition.Filters">
            <summary>
            The filters applied during the browse operation.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowsePosition.MaxElementsReturned">
            <summary>
            The maximum number of elements that may be returned in a single browse.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters)">
            <summary>
            Saves the parameters for an incomplete browse information.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.ItemProperty">
            <summary>
            Contains a description of a single item property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.ID">
            <summary>
            The property identifier.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.Description">
            <summary>
            A short description of the property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.DataType">
            <summary>
            The data type of the property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.Value">
            <summary>
            The value of the property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.ItemName">
            <summary>
            The primary identifier for the property if it is directly accessible as an item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.ItemPath">
            <summary>
            The secondary identifier for the property if it is directly accessible as an item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.ResultID">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Opc.Da.ItemProperty.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.BrowseElement">
            <summary>
            Contains a description of an element in the server address space.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.Name">
            <summary>
            A descriptive name for element that is unique within a branch.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.ItemName">
            <summary>
            The primary identifier for the element within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.ItemPath">
            <summary>
            An secondary identifier for the element within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.IsItem">
            <summary>
            Whether the element refers to an item with data that can be accessed.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.HasChildren">
            <summary>
            Whether the element has children.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.Properties">
            <summary>
            The set of properties for the element.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowseElement.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.browseFilter">
            <summary>
            The type of browse elements to return during a browse.
            </summary>
        </member>
        <member name="F:Opc.Da.browseFilter.all">
            <summary>
            Return all types of browse elements.
            </summary>
        </member>
        <member name="F:Opc.Da.browseFilter.branch">
            <summary>
            Return only elements that contain other elements.
            </summary>
        </member>
        <member name="F:Opc.Da.browseFilter.item">
            <summary>
            Return only elements that represent items.
            </summary>
        </member>
        <member name="T:Opc.Da.BrowseFilters">
            <summary>
            Defines a set of filters to apply when browsing.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.MaxElementsReturned">
            <summary>
            The maximum number of elements to return. Zero means no limit.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.BrowseFilter">
            <summary>
            The type of element to return.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.ElementNameFilter">
            <summary>
            An expression used to match the name of the element.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.VendorFilter">
            <summary>
            A filter which has semantics that defined by the server.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.ReturnAllProperties">
            <summary>
            Whether all supported properties to return with each element.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.PropertyIDs">
            <summary>
            A list of names of the properties to return with each element.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.ReturnPropertyValues">
            <summary>
            Whether property values should be returned with the properties.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowseFilters.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.ItemPropertyCollection">
            <summary>
            A list of properties for a single item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.ItemName">
            <summary>
            The primary identifier for the item within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.ItemPath">
            <summary>
            An secondary identifier for the item within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.Item(System.Int32)">
            <summary>
            Accesses the items at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.#ctor">
            <summary>
            Initializes the object with its default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with the specified item identifier.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
            <summary>
            Initializes the object with the specified item identifier and result id.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.CopyTo(Opc.Da.ItemProperty[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.Insert(System.Int32,Opc.Da.ItemProperty)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.Remove(Opc.Da.ItemProperty)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.Contains(Opc.Da.ItemProperty)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.IndexOf(Opc.Da.ItemProperty)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.Add(Opc.Da.ItemProperty)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Da.IServer">
            <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Da.IServer.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:Opc.Da.IServer.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:Opc.Da.IServer.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Opc.Da.IServer.Read(Opc.Da.Item[])">
            <summary>
            Reads the current values for a set of items. 
            </summary>
            <param name="items">The set of items to read.</param>
            <returns>The results of the read operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.IServer.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
            <param name="values">The set of item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.IServer.CreateSubscription(Opc.Da.SubscriptionState)">
            <summary>
            Creates a new subscription.
            </summary>
            <param name="state">The initial state of the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:Opc.Da.IServer.CancelSubscription(Opc.Da.ISubscription)">
            <summary>
            Cancels a subscription and releases all resources allocated for it.
            </summary>
            <param name="subscription">The subscription to cancel.</param>
        </member>
        <member name="M:Opc.Da.IServer.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
            <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
            <param name="itemID">The identifier of branch which is the target of the search.</param>
            <param name="filters">The filters to use to limit the set of child elements returned.</param>
            <param name="position">An object used to continue a browse that could not be completed.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Opc.Da.IServer.BrowseNext(Opc.Da.BrowsePosition@)">
            <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
            <param name="position">An object containing the browse operation state information.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Opc.Da.IServer.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
            <summary>
            Returns the item properties for a set of items.
            </summary>
            <param name="itemIDs">A list of item identifiers.</param>
            <param name="propertyIDs">A list of properties to fetch for each item.</param>
            <param name="returnValues">Whether the property values should be returned with the properties.</param>
            <returns>A list of properties for each item.</returns>
        </member>
        <member name="T:Opc.Da.ResultFilter">
            <summary>
            Filters applied by the server before returning item results.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ItemName">
            <summary>
            Include the ItemName in the ItemIdentifier if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ItemPath">
            <summary>
            Include the ItemPath in the ItemIdentifier if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ClientHandle">
            <summary>
            Include the ClientHandle in the ItemIdentifier if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ItemTime">
            <summary>
            Include the Timestamp in the ItemValue if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ErrorText">
            <summary>
            Include verbose, localized error text with result if bit is set. 
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.DiagnosticInfo">
            <summary>
            Include additional diagnostic information with result if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.Minimal">
            <summary>
            Include the ItemName and Timestamp if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.All">
            <summary>
            Include all information in the results if bit is set.
            </summary>
        </member>
        <member name="T:Opc.Da.serverState">
            <summary>
            The set of possible server states.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.unknown">
            <summary>
            The server state is not known.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.running">
            <summary>
            The server is running normally.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.failed">
            <summary>
            The server is not functioning due to a fatal error.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.noConfig">
            <summary>
            The server cannot load its configuration information.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.suspended">
            <summary>
            The server has halted all communication with the underlying hardware.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.test">
            <summary>
            The server is disconnected from the underlying hardware.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.commFault">
            <summary>
            The server cannot communicate with the underlying hardware.
            </summary>
        </member>
        <member name="T:Opc.Da.ServerStatus">
            <summary>
            Contains properties that describe the current status of an OPC server.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.VendorInfo">
            <summary>
            The vendor name and product name for the server.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.ProductVersion">
            <summary>
            A string that contains the server software version number.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.ServerState">
            <summary>
            The current state of the server.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.StatusInfo">
            <summary>
            A string that describes the current server state.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.StartTime">
            <summary>
            The UTC time when the server started.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.CurrentTime">
            <summary>
            Th current UTC time at the server.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.LastUpdateTime">
            <summary>
            The last time the server sent an data update to the client.
            </summary>
        </member>
        <member name="M:Opc.Da.ServerStatus.Clone">
            <summary>
            Creates a deepcopy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.ISubscription">
            <summary>
            A subscription for a set of items on a single OPC server.
            </summary>
        </member>
        <member name="E:Opc.Da.ISubscription.DataChanged">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="M:Opc.Da.ISubscription.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:Opc.Da.ISubscription.GetState">
            <summary>
            Returns the current state of the subscription.
            </summary>
            <returns>The current state of the subscription.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
            <summary>
            Changes the state of a subscription.
            </summary>
            <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
            <param name="state">The new subscription state.</param>
            <returns>The actual subscption state after applying the changes.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.AddItems(Opc.Da.Item[])">
            <summary>
            Adds items to the subscription.
            </summary>
            <param name="items">The set of items to add to the subscription.</param>
            <returns>The results of the add item operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.ModifyItems(System.Int32,Opc.Da.Item[])">
            <summary>
            Modifies the state of items in the subscription
            </summary>
            <param name="masks">Specifies which item state parameters are being modified.</param>
            <param name="items">The new state for each item.</param>
            <returns>The results of the modify item operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.RemoveItems(Opc.ItemIdentifier[])">
            <summary>
            Removes items from the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being removed.</param>
            <returns>The results of the remove item operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Read(Opc.Da.Item[])">
            <summary>
            Reads the values for a set of items in the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being read.</param>
            <returns>The value for each of items.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items in the subscription.
            </summary>
            <param name="items">The item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
            <param name="items">The set of item values to write (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous read or write operation.
            </summary>
            <param name="request">The object returned from the BeginRead or BeginWrite request.</param>
            <param name="callback">The function to invoke when the cancel completes.</param>
        </member>
        <member name="M:Opc.Da.ISubscription.Refresh">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
        </member>
        <member name="M:Opc.Da.ISubscription.Refresh(System.Object,Opc.IRequest@)">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.SetEnabled(System.Boolean)">
            <summary>
            Enables or disables data change notifications from the server.
            </summary>
            <param name="enabled">Whether data change notifications are enabled.</param>
        </member>
        <member name="M:Opc.Da.ISubscription.GetEnabled">
            <summary>
            Checks whether data change notifications from the server are enabled.
            </summary>
            <returns>Whether data change notifications are enabled.</returns>
        </member>
        <member name="T:Opc.Da.DataChangedEventHandler">
            <summary>
            A delegate to receive data change updates from the server.
            </summary>
        </member>
        <member name="T:Opc.Da.ReadCompleteEventHandler">
            <summary>
            A delegate to receive asynchronous read completed notifications.
            </summary>
        </member>
        <member name="T:Opc.Da.WriteCompleteEventHandler">
            <summary>
            A delegate to receive asynchronous write completed notifications.
            </summary>
        </member>
        <member name="T:Opc.Da.CancelCompleteEventHandler">
            <summary>
            A delegate to receive asynchronous cancel completed notifications.
            </summary>
        </member>
        <member name="T:Opc.Da.Request">
            <summary>
            Describes the state of a subscription.
            </summary>
        </member>
        <member name="P:Opc.Da.Request.Subscription">
            <summary>
            The subscription processing the request.
            </summary>
        </member>
        <member name="P:Opc.Da.Request.Handle">
            <summary>
            An unique identifier, assigned by the client, for the request.
            </summary>
        </member>
        <member name="M:Opc.Da.Request.Cancel(Opc.Da.CancelCompleteEventHandler)">
            <summary>
            Cancels the request, if possible.
            </summary>
        </member>
        <member name="M:Opc.Da.Request.#ctor(Opc.Da.ISubscription,System.Object)">
            <summary>
            Initializes the object with a subscription and a unique id.
            </summary>
        </member>
        <member name="T:Opc.Da.StateMask">
            <summary>
            Defines masks to be used when modifying the subscription or item state.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.Name">
            <summary>
            The name of the subscription.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.ClientHandle">
            <summary>
            The client assigned handle for the item or subscription.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.Locale">
            <summary>
            The locale to use for results returned to the client from the subscription.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.Active">
            <summary>
            Whether the item or subscription is active.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.UpdateRate">
            <summary>
            The maximum rate at which data update notifications are sent.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.KeepAlive">
            <summary>
            The longest period between data update notifications.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.ReqType">
            <summary>
            The requested data type for the item.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.Deadband">
            <summary>
            The deadband for the item or subscription.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.SamplingRate">
            <summary>
            The rate at which the server should check for changes to an item value.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.EnableBuffering">
            <summary>
            Whether the server should buffer multiple changes to a single item.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.All">
            <summary>
            All fields are valid.
            </summary>
        </member>
        <member name="T:Opc.Da.SubscriptionState">
            <summary>
            Describes the state of a subscription.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.Name">
            <summary>
            A unique name for the subscription controlled by the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.ClientHandle">
            <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.ServerHandle">
            <summary>
            A unique subscription identifier assigned by the server.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.Locale">
            <summary>
            The locale used for any error messages or results returned to the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.Active">
            <summary>
            Whether the subscription is scanning for updates to send to the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.UpdateRate">
            <summary>
            The rate at which the server checks of updates to send to the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.KeepAlive">
            <summary>
            The maximum period between updates sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.Deadband">
            <summary>
            The minimum percentage change required to trigger a data update for an item.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionState.#ctor">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionState.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.Item">
            <summary>
            Describes how an item in the server address space should be accessed. 
            </summary>
        </member>
        <member name="P:Opc.Da.Item.ReqType">
            <summary>
            The data type to use when returning the item value.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.MaxAge">
            <summary>
            The oldest (in milliseconds) acceptable cached value when reading an item.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.MaxAgeSpecified">
            <summary>
            Whether the Max Age is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.Active">
            <summary>
            Whether the server should send data change updates. 
            </summary>
        </member>
        <member name="P:Opc.Da.Item.ActiveSpecified">
            <summary>
            Whether the Active state is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.Deadband">
            <summary>
            The minimum percentage change required to trigger a data update for an item. 
            </summary>
        </member>
        <member name="P:Opc.Da.Item.DeadbandSpecified">
            <summary>
            Whether the Deadband is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.SamplingRate">
            <summary>
            How frequently the server should sample the item value.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.SamplingRateSpecified">
            <summary>
            Whether the Sampling Rate is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.EnableBuffering">
            <summary>
            Whether the server should buffer multiple data changes between data updates.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.EnableBufferingSpecified">
            <summary>
            Whether the Enable Buffering is specified.
            </summary>
        </member>
        <member name="M:Opc.Da.Item.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.Item.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Da.Item.#ctor(Opc.Da.Item)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="T:Opc.Da.ItemCollection">
            <summary>
            A collection of items.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.Item(System.Int32)">
            <summary>
             Gets the item at the specified index.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.Item(Opc.ItemIdentifier)">
            <summary>
            Gets the first item with the specified item id.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.#ctor(Opc.Da.ItemCollection)">
            <summary>
            Initializes object with the specified ResultCollection object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Da.ItemCollection.CopyTo(Opc.Da.Item[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Da.ItemCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Da.ItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.ItemCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.ItemCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Da.ItemCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.Insert(System.Int32,Opc.Da.Item)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Remove(Opc.Da.Item)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Contains(Opc.Da.Item)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.ItemCollection.IndexOf(Opc.Da.Item)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.ItemCollection.Add(Opc.Da.Item)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Da.ItemResult">
            <summary>
            The results of an operation on a uniquely identifiable item.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
            <summary>
            Initializes the object with an ItemIdentifier object and ResultID.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.Da.Item)">
            <summary>
            Initializes the object with an Item object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.Da.Item,Opc.ResultID)">
            <summary>
            Initializes the object with an Item object and ResultID.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.Da.ItemResult)">
            <summary>
            Initializes object with the specified ItemResult object.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemResult.ResultID">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.Da.ItemValue">
            <summary>
            Contains the value for a single item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.Value">
            <summary>
            The item value.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.Quality">
            <summary>
            The quality of the item value.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.QualitySpecified">
            <summary>
            Whether the quality is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.Timestamp">
            <summary>
            The UTC timestamp for the item value.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.TimestampSpecified">
            <summary>
            Whether the timestamp is specified.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with and ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.#ctor(System.String)">
            <summary>
            Initializes the object with the specified item name.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.#ctor(Opc.Da.ItemValue)">
            <summary>
            Initializes object with the specified ItemValue object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.ItemValueResult">
            <summary>
            The results of an operation on a uniquely identifiable item value.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.Da.ItemValue)">
            <summary>
            Initializes the object with an ItemValue object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.Da.ItemValueResult)">
            <summary>
            Initializes object with the specified ItemValueResult object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(System.String,Opc.ResultID)">
            <summary>
            Initializes the object with the specified item name and result code.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(System.String,Opc.ResultID,System.String)">
            <summary>
            Initializes the object with the specified item name, result code and diagnostic info.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
            <summary>
            Initialize object with the specified ItemIdentifier and result code.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.ItemIdentifier,Opc.ResultID,System.String)">
            <summary>
            Initializes the object with the specified ItemIdentifier, result code and diagnostic info.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValueResult.ResultID">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValueResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.Da.PropertyID">
            <summary>
            Contains a unique identifier for a property.
            </summary>
        </member>
        <member name="T:Opc.Da.PropertyID.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks>
            <c>MP:</c> During deserialization, SerializationInfo is passed to the class using the constructor provided for this purpose. Any visibility 
             constraints placed on the constructor are ignored when the object is deserialized; so you can mark the class as public, 
             protected, internal, or private. However, it is best practice to make the constructor protected unless the class is sealed, in which case 
             the constructor should be marked private. The constructor should also perform thorough input validation. To avoid misuse by malicious code, 
             the constructor should enforce the same security checks and permissions required to obtain an instance of the class using any other 
             constructor. 
             </remarks>
             <summary>
             Contructs a server by de-serializing its URL from the stream.
             </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyID.Name">
            <summary>
            Used for properties identified by a qualified name.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyID.Code">
            <summary>
            Used for properties identified by a integer.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.op_Equality(Opc.Da.PropertyID,Opc.Da.PropertyID)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.op_Inequality(Opc.Da.PropertyID,Opc.Da.PropertyID)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.#ctor(System.Xml.XmlQualifiedName)">
            <summary>
            Initializes a property identified by a qualified name.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.#ctor(System.Int32)">
            <summary>
            Initializes a property identified by an integer.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a property identified by a property description.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.Equals(System.Object)">
            <summary>
            Returns true if the target object is equal to the object.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.GetHashCode">
            <summary>
            Returns a useful hash code for the object.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.ToString">
            <summary>
            Converts the property id to a string.
            </summary>
        </member>
        <member name="T:Opc.Da.Property">
            <summary>
            Defines identifiers for well-known properties.
            </summary>
        </member>
        <member name="F:Opc.Da.Property.DATATYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.QUALITY">
            <remarks/>    
        </member>
        <member name="F:Opc.Da.Property.TIMESTAMP">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.ACCESSRIGHTS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.SCANRATE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.EUTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.EUINFO">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.ENGINEERINGUINTS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.HIGHEU">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LOWEU">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.HIGHIR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LOWIR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.CLOSELABEL">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.OPENLABEL">
            <remarks/>     
        </member>
        <member name="F:Opc.Da.Property.TIMEZONE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.CONDITION_STATUS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.ALARM_QUICK_HELP">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.ALARM_AREA_LIST">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.PRIMARY_ALARM_AREA">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.CONDITION_LOGIC">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LIMIT_EXCEEDED">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DEADBAND">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.HIHI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.HI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LOLO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.RATE_CHANGE_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DEVIATION_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.SOUNDFILE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.TYPE_SYSTEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DICTIONARY_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.TYPE_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DICTIONARY">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.TYPE_DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.CONSISTENCY_WINDOW">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.WRITE_BEHAVIOR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.UNCONVERTED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.UNFILTERED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DATA_FILTER_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.MINIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.MAXIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.VALUE_PRECISION">
            <remarks/>
        </member>
        <member name="T:Opc.Da.PropertyDescription">
            <summary>
            Describes an item property.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyDescription.ID">
            <summary>
            The unique identifier for the property.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyDescription.Type">
            <summary>
            The .NET data type for the property.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyDescription.Name">
            <summary>
            The short description defined in the OPC specifications.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyDescription.#ctor(Opc.Da.PropertyID,System.Type,System.String)">
            <summary>
            Initializes the object with the specified values.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyDescription.ToString">
            <summary>
            Converts the description to a string.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyDescription.Find(Opc.Da.PropertyID)">
            <summary>
            Returns the description for the specified property.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyDescription.Enumerate">
            <summary>
            Returns an array of all well-known property descriptions.
            </summary>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DATATYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.QUALITY">
            <remarks/>    
        </member>
        <member name="F:Opc.Da.PropertyDescription.TIMESTAMP">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.ACCESSRIGHTS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.SCANRATE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.EUTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.EUINFO">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.ENGINEERINGUINTS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.HIGHEU">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LOWEU">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.HIGHIR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LOWIR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.CLOSELABEL">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.OPENLABEL">
            <remarks/>     
        </member>
        <member name="F:Opc.Da.PropertyDescription.TIMEZONE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.CONDITION_STATUS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.ALARM_QUICK_HELP">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.ALARM_AREA_LIST">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.PRIMARY_ALARM_AREA">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.CONDITION_LOGIC">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LIMIT_EXCEEDED">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DEADBAND">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.HIHI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.HI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LOLO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.RATE_CHANGE_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DEVIATION_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.SOUNDFILE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.TYPE_SYSTEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DICTIONARY_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.TYPE_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DICTIONARY">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.TYPE_DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.CONSISTENCY_WINDOW">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.WRITE_BEHAVIOR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.UNCONVERTED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.UNFILTERED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DATA_FILTER_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.MINIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.MAXIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.VALUE_PRECISION">
            <remarks/>
        </member>
        <member name="T:Opc.Da.accessRights">
            <summary>
            Defines possible item access rights.
            </summary>
        </member>
        <member name="F:Opc.Da.accessRights.readable">
            <remarks/>
        </member>
        <member name="F:Opc.Da.accessRights.writable">
            <remarks/>
        </member>
        <member name="F:Opc.Da.accessRights.readWritable">
            <remarks/>
        </member>
        <member name="T:Opc.Da.euType">
            <summary>
            Defines possible item engineering unit types
            </summary>
        </member>
        <member name="F:Opc.Da.euType.noEnum">
            <remarks/>
        </member>
        <member name="F:Opc.Da.euType.analog">
            <remarks/>
        </member>
        <member name="F:Opc.Da.euType.enumerated">
            <remarks/>
        </member>
        <member name="T:Opc.Da.qualityBits">
            <summary>
            Defines the possible quality status bits.
            </summary>
        </member>
        <member name="F:Opc.Da.qualityBits.good">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.goodLocalOverride">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.bad">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badConfigurationError">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badNotConnected">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badDeviceFailure">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badSensorFailure">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badLastKnownValue">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badCommFailure">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badOutOfService">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badWaitingForInitialData">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertain">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertainLastUsableValue">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertainSensorNotAccurate">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertainEUExceeded">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertainSubNormal">
            <remarks/>
        </member>
        <member name="T:Opc.Da.limitBits">
            <summary>
            Defines the possible limit status bits.
            </summary>
        </member>
        <member name="F:Opc.Da.limitBits.none">
            <remarks/>
        </member>
        <member name="F:Opc.Da.limitBits.low">
            <remarks/>
        </member>
        <member name="F:Opc.Da.limitBits.high">
            <remarks/>
        </member>
        <member name="F:Opc.Da.limitBits.constant">
            <remarks/>
        </member>
        <member name="T:Opc.Da.qualityMasks">
            <summary>
            Defines bit masks for the quality.
            </summary>
        </member>
        <member name="F:Opc.Da.qualityMasks.qualityMask">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityMasks.limitMask">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityMasks.vendorMask">
            <remarks/>
        </member>
        <member name="T:Opc.Da.Quality">
            <summary>
            Contains the quality field for an item value.
            </summary>
        </member>
        <member name="P:Opc.Da.Quality.QualityBits">
            <summary>
            The value in the quality bits field.
            </summary>
        </member>
        <member name="P:Opc.Da.Quality.LimitBits">
            <summary>
            The value in the limit bits field.
            </summary>
        </member>
        <member name="P:Opc.Da.Quality.VendorBits">
            <summary>
            The value in the vendor bits field.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.GetCode">
            <summary>
            Returns the quality as a 16 bit integer.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.SetCode(System.Int16)">
            <summary>
            Initializes the quality from a 16 bit integer.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.op_Equality(Opc.Da.Quality,Opc.Da.Quality)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.op_Inequality(Opc.Da.Quality,Opc.Da.Quality)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.#ctor(Opc.Da.qualityBits)">
            <summary>
            Initializes the object with the specified quality.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.#ctor(System.Int16)">
            <summary>
            Initializes the object from the contents of a 16 bit integer.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.ToString">
            <summary>
            Converts a quality to a string with the format: 'quality[limit]:vendor'.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the current Quality
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.GetHashCode">
            <summary>
            Returns hash code for the current Quality.
            </summary>
        </member>
        <member name="F:Opc.Da.Quality.Good">
            <summary>
            A 'good' quality value.
            </summary>
        </member>
        <member name="F:Opc.Da.Quality.Bad">
            <summary>
            An 'bad' quality value.
            </summary>
        </member>
        <member name="T:Opc.Da.Server">
            <summary>
            An in-process object used to access OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.#ctor(Opc.Factory,Opc.URL)">
            <summary>
            Initializes the object with a factory and a default URL.
            </summary>
            <param name="factory">The Opc.Factory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="T:Opc.Da.Server.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.Clone">
            <summary>
            Returns an unconnected copy of the server with the same URL. 
            </summary>
        </member>
        <member name="P:Opc.Da.Server.Subscriptions">
            <summary>
            Returns an array of all subscriptions for the server.
            </summary>
        </member>
        <member name="P:Opc.Da.Server.Filters">
            <summary>
            The current result filters applied by the server.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.Connect(Opc.URL,Opc.ConnectData)">
            <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.Disconnect">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:Opc.Da.Server.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:Opc.Da.Server.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Opc.Da.Server.Read(Opc.Da.Item[])">
            <summary>
            Reads the current values for a set of items. 
            </summary>
            <param name="items">The set of items to read.</param>
            <returns>The results of the read operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.Server.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
            <param name="items">The set of item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.Server.CreateSubscription(Opc.Da.SubscriptionState)">
            <summary>
            Creates a new subscription.
            </summary>
            <param name="state">The initial state of the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:Opc.Da.Server.CreateSubscription(Opc.Da.ISubscription)">
            <summary>
            Creates a new instance of the appropriate subcription object.
            </summary>
            <param name="subscription">The remote subscription object.</param>
        </member>
        <member name="M:Opc.Da.Server.CancelSubscription(Opc.Da.ISubscription)">
            <summary>
            Cancels a subscription and releases all resources allocated for it.
            </summary>
            <param name="subscription">The subscription to cancel.</param>
        </member>
        <member name="M:Opc.Da.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
            <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
            <param name="itemID">The identifier of branch which is the target of the search.</param>
            <param name="filters">The filters to use to limit the set of child elements returned.</param>
            <param name="position">An object used to continue a browse that could not be completed.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Opc.Da.Server.BrowseNext(Opc.Da.BrowsePosition@)">
            <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
            <param name="position">An object containing the browse operation state information.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Opc.Da.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
            <summary>
            Returns the item properties for a set of items.
            </summary>
            <param name="itemIDs">A list of item identifiers.</param>
            <param name="propertyIDs">A list of properties to fetch for each item.</param>
            <param name="returnValues">Whether the property values should be returned with the properties.</param>
            <returns>A list of properties for each item.</returns>
        </member>
        <member name="F:Opc.Da.Server.m_subscriptions">
            <summary>
            A list of subscriptions for the server.
            </summary>
        </member>
        <member name="F:Opc.Da.Server.m_filters">
            <summary>
            The local copy of the result filters.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.EstablishSubscription(Opc.Da.Subscription)">
            <summary>
            Establishes a subscription based on the template provided.
            </summary>
        </member>
        <member name="T:Opc.Da.SubscriptionCollection">
            <summary>
            A collection of subscriptions.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.Item(System.Int32)">
            <summary>
             Gets the item at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.#ctor(Opc.Da.SubscriptionCollection)">
            <summary>
            Initializes object with the specified SubscriptionCollection object.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.CopyTo(Opc.Da.Subscription[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList subscription at the specified index.
            </summary>
            <param name="index">The zero-based index of the subscription to remove.</param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an subscription to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Clear">
            <summary>
            Removes all subscriptions from the IList.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific subscription in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Add(System.Object)">
            <summary>
            Adds an subscription to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Insert(System.Int32,Opc.Da.Subscription)">
            <summary>
            Inserts an subscription to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Remove(Opc.Da.Subscription)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Contains(Opc.Da.Subscription)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.IndexOf(Opc.Da.Subscription)">
            <summary>
            Determines the index of a specific subscription in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Add(Opc.Da.Subscription)">
            <summary>
            Adds an subscription to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Da.GetResultFiltersAsyncDelegate">
            <summary>
            The asynchronous delegate for GetResultFilters.
            </summary>
        </member>
        <member name="T:Opc.Da.SetResultFiltersAsyncDelegate">
            <summary>
            The asynchronous delegate for SetResultFilters.
            </summary>
        </member>
        <member name="T:Opc.Da.GetStatusAsyncDelegate">
            <summary>
            The asynchronous delegate for GetStatus.
            </summary>
        </member>
        <member name="T:Opc.Da.ReadAsyncDelegate">
            <summary>
            The asynchronous delegate for Read.
            </summary>
        </member>
        <member name="T:Opc.Da.WriteAsyncDelegate">
            <summary>
            The asynchronous delegate for Write.
            </summary>
        </member>
        <member name="T:Opc.Da.CreateSubscriptionAsyncDelegate">
            <summary>
            The asynchronous delegate for CreateSubscription.
            </summary>
        </member>
        <member name="T:Opc.Da.CancelSubscriptionAsyncDelegate">
            <summary>
            The asynchronous delegate for CancelSubscription.
            </summary>
        </member>
        <member name="T:Opc.Da.BrowseAsyncDelegate">
            <summary>
            The asynchronous delegate for Browse.
            </summary>
        </member>
        <member name="T:Opc.Da.BrowseNextAsyncDelegate">
            <summary>
            The asynchronous delegate for BrowseNext.
            </summary>
        </member>
        <member name="T:Opc.Da.GetPropertiesAsyncDelegate">
            <summary>
            The asynchronous delegate for GetProperties.
            </summary>
        </member>
        <member name="T:Opc.Da.Subscription">
            <summary>
            An in-process object used to access subscriptions on OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.#ctor(Opc.Da.Server,Opc.Da.ISubscription)">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Dispose">
            <summary>
            This must be called explicitly by clients to ensure the remote server is released.
            </summary>
        </member>
        <member name="T:Opc.Da.Subscription.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Clone">
            <summary>
            Returns an unconnected copy of the subscription with the same items.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Server">
            <summary>
            The server that the subscription is attached to.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Name">
            <summary>
            The name assigned to the subscription by the client.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.ClientHandle">
            <summary>
            The handle assigned to the group by the client.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.ServerHandle">
            <summary>
            The handle assigned to the subscription by the server.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Active">
            <summary>
            Whether the subscription is active.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Enabled">
            <summary>
            Whether data callbacks are enabled.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Locale">
            <summary>
            The current locale used by the subscription.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Filters">
            <summary>
            The current result filters applied by the subscription.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.State">
            <summary>
            Returns a copy of the current subscription state.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Items">
            <summary>
            The items belonging to the subscription.
            </summary>
        </member>
        <member name="E:Opc.Da.Subscription.DataChanged">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.GetResultFilters">
            <summary>
            Gets default result filters for the server.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.SetResultFilters(System.Int32)">
            <summary>
            Sets default result filters for the server.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.GetState">
            <summary>
            Returns the current subscription state.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
            <summary>
            Updates the current subscription state.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.AddItems(Opc.Da.Item[])">
            <summary>
            Adds items to the subscription.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.ModifyItems(System.Int32,Opc.Da.Item[])">
            <summary>
            Modifies items that are already part of the subscription.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.RemoveItems(Opc.ItemIdentifier[])">
            <summary>
            Removes items from a subsription.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Read(Opc.Da.Item[])">
            <summary>
            Reads a set of subscription items.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes a set of subscription items.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.Subscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
            <param name="items">The set of item values to write (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.Subscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous request.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Refresh">
            <summary>
            Tells the server to send an data change update for all subscription items. 
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Refresh(System.Object,Opc.IRequest@)">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.Subscription.SetEnabled(System.Boolean)">
            <summary>
            Sets whether data change callbacks are enabled.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.GetEnabled">
            <summary>
            Gets whether data change callbacks are enabled.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_server">
            <summary>
            The containing server object.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_subscription">
            <summary>
            The remote subscription object.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_state">
            <summary>
            The local copy of the subscription state.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_items">
            <summary>
            The local copy of all subscription items.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_enabled">
            <summary>
            Whether data callbacks are enabled.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_filters">
            <summary>
            The local copy of the result filters.
            </summary>
        </member>
        <member name="T:Opc.ReadOnlyCollection">
            <summary>
            A read only collection class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.#ctor(System.Array)">
             <summary>
            Creates a collection that wraps the specified array instance.
             </summary>
        </member>
        <member name="P:Opc.ReadOnlyCollection.Array">
            <summary>
            The array instance exposed by the collection.
            </summary>
        </member>
        <member name="T:Opc.ReadOnlyCollection.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.ReadOnlyCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Opc.ReadOnlyCollection.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Opc.WriteableCollection">
            <summary>
            A writeable collection class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds a list of values to the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.#ctor(System.Collections.ICollection,System.Type)">
            <summary>
            Creates a collection that wraps the specified array instance.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.Array">
            <summary>
            The array instance exposed by the collection.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.ElementType">
            <summary>
            The type of objects allowed in the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.ValidateElement(System.Object)">
            <summary>
            Throws an exception if the element is not valid for the collection.
            </summary>
        </member>
        <member name="F:Opc.WriteableCollection.INVALID_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.WriteableCollection.INVALID_TYPE">
            <remarks/>
        </member>
        <member name="T:Opc.WriteableCollection.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.WriteableCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.WriteableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.WriteableCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.WriteableCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.WriteableCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.WriteableCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.WriteableCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.WriteableCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Opc.ReadOnlyDictionary">
            <summary>
            A read only dictionary class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.#ctor(System.Collections.Hashtable)">
             <summary>
            Creates a collection that wraps the specified array instance.
             </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Dictionary">
            <summary>
            The array instance exposed by the collection.
            </summary>
        </member>
        <member name="T:Opc.ReadOnlyDictionary.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key. 
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Contains(System.Object)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Clear">
            <summary>
            Removes all elements from the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Opc.WriteableDictionary">
            <summary>
            A read only dictionary class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.#ctor(System.Collections.IDictionary,System.Type,System.Type)">
            <summary>
            Creates a collection that wraps the specified array instance.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Dictionary">
            <summary>
            The dictionary instance exposed by the collection.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.KeyType">
            <summary>
            The type of objects allowed as keys in the dictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.ValueType">
            <summary>
            The type of objects allowed as values in the dictionary.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.ValidateKey(System.Object,System.Type)">
            <summary>
            Throws an exception if the key is not valid for the dictionary.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.ValidateValue(System.Object,System.Type)">
            <summary>
            Throws an exception if the value is not valid for the dictionary.
            </summary>
        </member>
        <member name="F:Opc.WriteableDictionary.INVALID_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.WriteableDictionary.INVALID_TYPE">
            <remarks/>
        </member>
        <member name="T:Opc.WriteableDictionary.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key. 
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.Contains(System.Object)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.Clear">
            <summary>
            Removes all elements from the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.WriteableDictionary.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Opc.WriteableDictionary.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Opc.ConnectData">
            <summary>
            Contains protocol dependent connection and authenication information.
            </summary>
        </member>
        <member name="P:Opc.ConnectData.Credentials">
            <summary>
            The credentials to submit to the proxy server for authentication.
            </summary>
        </member>
        <member name="P:Opc.ConnectData.LicenseKey">
            <summary>
            The license key used to connect to the server.
            </summary>
        </member>
        <member name="P:Opc.ConnectData.AlwaysUseDA20">
            <summary>
            Always uses the DA20 interfaces even if DA3.0 is supported.
            </summary>
        </member>
        <member name="P:Opc.ConnectData.ConnectionGroupName">
            <remarks/>
        </member>
        <member name="M:Opc.ConnectData.GetCredential(System.Uri,System.String)">
            <summary>
            Returns a NetworkCredential object that is associated with the specified URI, and authentication type.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.GetProxy">
            <summary>
            Returns the web proxy object to use when connecting to the server.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.SetProxy(System.Net.WebProxy)">
            <summary>
            Sets the web proxy object.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.#ctor(System.Net.NetworkCredential)">
            <summary>
            Initializes an instance with the specified credentials.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.#ctor(System.Net.NetworkCredential,System.Net.WebProxy)">
            <summary>
            Initializes an instance with the specified credentials and web proxy.
            </summary>
        </member>
        <member name="T:Opc.ConnectData.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs teh object by de-serializing from the stream.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="T:Opc.Convert">
            <summary>
            Defines various functions used to convert types.
            </summary>
        </member>
        <member name="M:Opc.Convert.IsValid(System.Array)">
            <summary>
            Checks whether the array contains any useful data.
            </summary>
        </member>
        <member name="M:Opc.Convert.IsEmpty(System.Array)">
            <summary>
            Checks whether the array contains any useful data.
            </summary>
        </member>
        <member name="M:Opc.Convert.IsValid(System.String)">
            <summary>
            Checks whether the string contains any useful data.
            </summary>
        </member>
        <member name="M:Opc.Convert.IsEmpty(System.String)">
            <summary>
            Checks whether the string contains any useful data.
            </summary>
        </member>
        <member name="M:Opc.Convert.Clone(System.Object)">
            <summary>
            Performs a deep copy of an object if possible.
            </summary>
        </member>
        <member name="M:Opc.Convert.Compare(System.Object,System.Object)">
            <summary>
            Does a deep comparison between two objects.
            </summary>
        </member>
        <member name="M:Opc.Convert.ChangeType(System.Object,System.Type)">
            <summary>
            Converts an object to the specified type and returns a deep copy.
            </summary>
        </member>
        <member name="M:Opc.Convert.ToString(System.Object)">
            <summary>
            Formats an item or property value as a string.
            </summary>
        </member>
        <member name="M:Opc.Convert.Match(System.String,System.String,System.Boolean)">
            <summary>
            Tests if the specified string matches the specified pattern.
            </summary>
        </member>
        <member name="T:Opc.IFactory">
            <summary>
            A interface to a factory used to instantiate servers.
            </summary>
        </member>
        <member name="M:Opc.IFactory.CreateInstance(Opc.URL,Opc.ConnectData)">
            <summary>
            Creates a new instance of the server at the specified URL.
            </summary>
        </member>
        <member name="T:Opc.Factory">
            <summary>
            The default class used to instantiate server objects.
            </summary>
        </member>
        <member name="M:Opc.Factory.#ctor(System.Type,System.Boolean)">
            <summary>
            Initializes the object with the type of the servers it can instantiate.
            </summary>
            <param name="systemType">The System.Type of the server object that the factory can create.</param>
            <param name="useRemoting">Whether the factory should use .NET Remoting to instantiate the servers.</param>
        </member>
        <member name="M:Opc.Factory.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:Opc.Factory.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Factory.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="T:Opc.Factory.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Factory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Factory.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Factory.Clone">
            <summary>
            Returns a clone of the factory.
            </summary>
        </member>
        <member name="M:Opc.Factory.CreateInstance(Opc.URL,Opc.ConnectData)">
            <summary>
            Creates a new instance of the server.
            </summary>
        </member>
        <member name="P:Opc.Factory.SystemType">
            <summary>
            The system type used to instantiate the remote server object.
            </summary>
        </member>
        <member name="P:Opc.Factory.UseRemoting">
            <summary>
            Whether the system type is a default system type for an OPC specification.
            </summary>
        </member>
        <member name="F:Opc.Factory.m_systemType">
            <summary>
            The system type used to instantiate the remote server object.
            </summary>
        </member>
        <member name="F:Opc.Factory.m_useRemoting">
            <summary>
            Whether the system type is a default system type for an OPC specification.
            </summary>
        </member>
        <member name="T:Opc.IDiscovery">
            <summary>
            This interface is used to discover OPC servers on the network.
            </summary>
        </member>
        <member name="M:Opc.IDiscovery.EnumerateHosts">
            <summary>
            Returns a list of host names which could contain OPC servers.
            </summary>
            <returns>A array of strings that are valid network host names.</returns>
        </member>
        <member name="M:Opc.IDiscovery.GetAvailableServers(Opc.Specification)">
            <summary>
            Returns a list of servers that support an OPC specification.
            </summary>
            <param name="specification">A unique identifier for an OPC specification.</param>
            <returns>An array of unconnected OPC server obejcts on the local machine.</returns>
        </member>
        <member name="M:Opc.IDiscovery.GetAvailableServers(Opc.Specification,System.String,Opc.ConnectData)">
            <summary>
            Returns a list of servers that support an OPC specification on remote machine.
            </summary>
            <param name="specification">A unique identifier for an OPC specification.</param>
            <param name="host">The network host name of the machine to search for servers.</param>
            <param name="connectData">Any necessary user authentication or protocol configuration information.</param>
            <returns>An array of unconnected OPC server objects.</returns>
        </member>
        <member name="T:Opc.Specification">
            <summary>
            A description of an interface version defined by an OPC specification.
            </summary>
        </member>
        <member name="P:Opc.Specification.ID">
            <summary>
            The unique identifier for the interface version. 
            </summary>
        </member>
        <member name="P:Opc.Specification.Description">
            <summary>
            The human readable description for the interface version.
            </summary>
        </member>
        <member name="M:Opc.Specification.op_Equality(Opc.Specification,Opc.Specification)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Opc.Specification.op_Inequality(Opc.Specification,Opc.Specification)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Opc.Specification.#ctor(System.String,System.String)">
            <summary>
            Initializes the object with the description and a GUID as a string.
            </summary>
        </member>
        <member name="M:Opc.Specification.Equals(System.Object)">
            <summary>
            Determines if the object is equal to the specified value.
            </summary>
        </member>
        <member name="M:Opc.Specification.ToString">
            <summary>
            Converts the object to a string used for display.
            </summary>
        </member>
        <member name="M:Opc.Specification.GetHashCode">
            <summary>
            Returns a suitable hash code for the result.
            </summary>
        </member>
        <member name="F:Opc.Specification.COM_AE_10">
            <summary>
            A set of Specification objects for existing OPC specifications.
            </summary>
        </member>
        <member name="F:Opc.Specification.COM_BATCH_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_BATCH_20">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_DA_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_DA_20">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_DA_30">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_DX_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_HDA_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.XML_DA_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.UA10">
            <remarks/>
        </member>
        <member name="T:Opc.URL">
            <summary>
            Contains information required to connect to the server.
            </summary>
        </member>
        <member name="P:Opc.URL.Scheme">
            <summary>
            The scheme (protocol) for the URL.
            </summary>
        </member>
        <member name="P:Opc.URL.HostName">
            <summary>
            The host name for the URL.
            </summary>
        </member>
        <member name="P:Opc.URL.Port">
            <summary>
            The port name for the URL (0 means default for protocol).
            </summary>
        </member>
        <member name="P:Opc.URL.Path">
            <summary>
            The path for the URL.
            </summary>
        </member>
        <member name="P:Opc.URL.UserInfo">
            <summary>
            The user info (user name and password) for the URL.
            </summary>
        </member>
        <member name="M:Opc.URL.#ctor">
            <summary>
            Initializes an empty instance.
            </summary>
        </member>
        <member name="M:Opc.URL.#ctor(System.String)">
            <summary>
            Initializes an instance by parsing a URL string.
            </summary>
        </member>
        <member name="M:Opc.URL.ToString">
            <summary>
            Returns a URL string for the object.
            </summary>
        </member>
        <member name="M:Opc.URL.Equals(System.Object)">
            <summary>
            Compares the object to either another URL object or a URL string.
            </summary>
        </member>
        <member name="M:Opc.URL.GetHashCode">
            <summary>
            Returns a hash code for the object.
            </summary>
        </member>
        <member name="M:Opc.URL.Clone">
            <summary>
            Returns a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.UrlScheme">
            <summary>
            Defines string constants for well-known URL schemes.
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.HTTP">
            <summary>
            XML Web Service.
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.AE">
            <summary>
            OPC Alarms and Events
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.BATCH">
            <summary>
            OPC Batch
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.DA">
            <summary>
            OPC Data Access
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.DX">
            <summary>
            OPC Data eXchange
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.HDA">
            <summary>
            OPC Historical Data Access
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.XMLDA">
            <summary>
            OPC XML Data Access over HTTP.
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.UA_HTTP">
            <summary>
            OPC Unified Architecture over SOAP/HTTP
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.UA_TCP">
            <summary>
            OPC Unified Architecture over SOAP/TCP
            </summary>
        </member>
        <member name="T:Opc.IServer">
            <summary>
            Defines functionality that is common to all OPC servers.
            </summary>
        </member>
        <member name="E:Opc.IServer.ServerShutdown">
            <summary>
            An event to receive server shutdown notifications.
            </summary>
        </member>
        <member name="M:Opc.IServer.GetLocale">
            <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
            <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Opc.IServer.SetLocale(System.String)">
            <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <returns>A locale that the server supports and is the best match for the requested locale.</returns>
        </member>
        <member name="M:Opc.IServer.GetSupportedLocales">
            <summary>
            Returns the locales supported by the server
            </summary>
            <remarks>The first element in the array must be the default locale for the server.</remarks>
            <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Opc.IServer.GetErrorText(System.String,Opc.ResultID)">
            <summary>
            Returns the localized text for the specified result code.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <param name="resultID">The result code identifier.</param>
            <returns>A message localized for the best match for the requested locale.</returns>
        </member>
        <member name="T:Opc.IRequest">
            <summary>
            Maintains the state of an asynchronous request.
            </summary>
        </member>
        <member name="P:Opc.IRequest.Handle">
            <summary>
            An unique identifier, assigned by the client, for the request.
            </summary>
        </member>
        <member name="T:Opc.IBrowsePosition">
            <summary>
            Maintains the state of a browse operation
            </summary>
        </member>
        <member name="T:Opc.ServerShutdownEventHandler">
            <summary>
            A delegate to receive shutdown notifiations from the server.
            </summary>
        </member>
        <member name="T:Opc.ItemIdentifier">
            <summary>
            A unique item identifier.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.ItemName">
            <summary>
            The primary identifier for an item within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.ItemPath">
            <summary>
            An secondary identifier for an item within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.ClientHandle">
            <summary>
            A unique item identifier assigned by the client.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.ServerHandle">
            <summary>
            A unique item identifier assigned by the server.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.Key">
            <summary>
            Create a string that can be used as index in a hash table for the item.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.#ctor(System.String)">
            <summary>
            Initializes the object with the specified item name.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.#ctor(System.String,System.String)">
            <summary>
            Initializes the object with the specified item path and item name.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with the specified item identifier.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.IResult">
            <summary>
            A interface used to access result information associated with a single item/value.
            </summary>
        </member>
        <member name="P:Opc.IResult.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.IResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.IdentifiedResult">
            <summary>
            A result code associated with a unique item identifier.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor">
            <summary>
            Initialize object with default values.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initialize object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(Opc.IdentifiedResult)">
            <summary>
            Initialize object with the specified IdentifiedResult object.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(System.String,Opc.ResultID)">
            <summary>
            Initializes the object with the specified item name and result code.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(System.String,Opc.ResultID,System.String)">
            <summary>
            Initialize object with the specified item name, result code and diagnostic info.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
            <summary>
            Initialize object with the specified ItemIdentifier and result code.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(Opc.ItemIdentifier,Opc.ResultID,System.String)">
            <summary>
            Initialize object with the specified ItemIdentifier, result code and diagnostic info.
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResult.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.ItemIdentifierCollection">
            <summary>
            A collection of item identifiers.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any ItemIdentifiers contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="P:Opc.ItemIdentifierCollection.Item(System.Int32)">
            <summary>
            Returns the itemID at the specified index.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any item ids contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.Clear">
            <summary>
            Removes all itemIDs in the collection.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifierCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifierCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.CopyTo(Opc.ItemIdentifier[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.ItemIdentifierCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Opc.IdentifiedResultCollection">
            <summary>
            A collection of identified results.
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResultCollection.Item(System.Int32)">
            <summary>
            Returns the IdentifiedResult at the specified index.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any IdentifiedResults contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any item ids contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.Clear">
            <summary>
            Removes all itemIDs in the collection.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResultCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResultCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.CopyTo(Opc.IdentifiedResult[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.IdentifiedResultCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Opc.Namespace">
            <summary>
            Declares constants for common XML Schema and OPC namespaces.
            </summary>
        </member>
        <member name="F:Opc.Namespace.XML_SCHEMA">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.XML_SCHEMA_INSTANCE">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_SAMPLE">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_ALARM_AND_EVENTS">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_COMPLEX_DATA">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_DATA_EXCHANGE">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_DATA_ACCESS">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_HISTORICAL_DATA_ACCESS">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_DATA_ACCESS_XML10">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_BINARY">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_UA10">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID">
            <summary>
            Contains a unique identifier for a result code.
            </summary>
        </member>
        <member name="T:Opc.ResultID.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.ResultID.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.ResultID.Name">
            <summary>
            Used for result codes identified by a qualified name.
            </summary>
        </member>
        <member name="P:Opc.ResultID.Code">
            <summary>
            Used for result codes identified by a integer.
            </summary>
        </member>
        <member name="M:Opc.ResultID.op_Equality(Opc.ResultID,Opc.ResultID)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Opc.ResultID.op_Inequality(Opc.ResultID,Opc.ResultID)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Opc.ResultID.Succeeded">
            <summary>
            Checks for the 'S_' prefix that indicates a success condition.
            </summary>
        </member>
        <member name="M:Opc.ResultID.Failed">
            <summary>
            Checks for the 'E_' prefix that indicates an error condition.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(System.Xml.XmlQualifiedName)">
            <summary>
            Initializes a result code identified by a qualified name.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(System.Int64)">
            <summary>
            Initializes a result code identified by an integer.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(System.String,System.String)">
            <summary>
            Initializes a result code identified by a qualified name.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(Opc.ResultID,System.Int64)">
            <summary>
            Initializes a result code with a general result code and a specific result code.
            </summary>
        </member>
        <member name="M:Opc.ResultID.Equals(System.Object)">
            <summary>
            Returns true if the target object is equal to the object.
            </summary>
        </member>
        <member name="M:Opc.ResultID.ToString">
            <summary>
            Formats the result identifier as a string.
            </summary>
        </member>
        <member name="M:Opc.ResultID.GetHashCode">
            <summary>
            Returns a useful hash code for the object.
            </summary>
        </member>
        <member name="F:Opc.ResultID.S_OK">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.S_FALSE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_FAIL">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_INVALIDARG">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_TIMEDOUT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_OUTOFMEMORY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_NETWORK_ERROR">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_ACCESS_DENIED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_NOTSUPPORTED">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Da">
            <summary>
            Results codes for Data Access.
            </summary>
        </member>
        <member name="F:Opc.ResultID.Da.S_DATAQUEUEOVERFLOW">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.S_UNSUPPORTEDRATE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.S_CLAMP">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALIDHANDLE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_UNKNOWN_ITEM_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALID_ITEM_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_UNKNOWN_ITEM_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALID_ITEM_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALID_PID">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_READONLY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_WRITEONLY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_BADTYPE">
            <remarks/> 
        </member>
        <member name="F:Opc.ResultID.Da.E_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALID_FILTER">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALIDCONTINUATIONPOINT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_NO_WRITEQT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_NO_ITEM_DEADBAND">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_NO_ITEM_SAMPLING">
            <remarks/> 
        </member>
        <member name="F:Opc.ResultID.Da.E_NO_ITEM_BUFFERING">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Cpx">
            <summary>
            Results codes for Complex Data.
            </summary>
        </member>
        <member name="F:Opc.ResultID.Cpx.E_TYPE_CHANGED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Cpx.E_FILTER_DUPLICATE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Cpx.E_FILTER_INVALID">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Cpx.E_FILTER_ERROR">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Cpx.S_FILTER_NO_DATA">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Hda">
            <summary>
            Results codes for Historical Data Access.
            </summary>
        </member>
        <member name="F:Opc.ResultID.Hda.E_MAXEXCEEDED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_NODATA">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_MOREDATA">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_INVALIDAGGREGATE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_CURRENTVALUE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_EXTRADATA">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.W_NOFILTER">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_UNKNOWNATTRID">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_NOT_AVAIL">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_INVALIDDATATYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_DATAEXISTS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_INVALIDATTRID">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_NODATAEXISTS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_INSERTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_REPLACED">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Dx">
            <summary>
            Results codes for Data eXchange.
            </summary>
        </member>
        <member name="F:Opc.ResultID.Dx.E_PERSISTING">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_NOITEMLIST">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SERVER_STATE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_VERSION_MISMATCH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_ITEM_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_ITEM_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_ITEM_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_ITEM_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_DUPLICATE_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_BROWSE_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_SERVER_URL">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_SERVER_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNSUPPORTED_SERVER_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_CONNECTIONS_EXIST">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TOO_MANY_CONNECTIONS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_OVERRIDE_BADTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_OVERRIDE_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SUBSTITUTE_BADTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SUBSTITUTE_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_TARGET_ITEM">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_TARGET_ITEM">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_ALREADY_CONNECTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_SERVER_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_SOURCE_ITEM">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_SOURCE_ITEM">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_QUEUE_SIZE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_DEADBAND">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_CONFIG_FILE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_PERSIST_FAILED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_FAULT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_NO_ACCESSS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_FAULT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_NO_ACCESSS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SUBSCRIPTION_FAULT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_BADRIGHTS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_BAD_QUALITY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_BADTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_NOT_CONNECTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_TIMEOUT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_ITEM_DISCONNECTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_NO_WRITES_ATTEMPTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_ITEM_BADTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_ITEM_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.S_TARGET_SUBSTITUTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.S_TARGET_OVERRIDEN">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.S_CLAMP">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Ae">
            <summary>
            Results codes for Alarms and Events
            </summary>
        </member>
        <member name="F:Opc.ResultID.Ae.S_ALREADYACKED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.S_INVALIDBUFFERTIME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.S_INVALIDMAXSIZE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.S_INVALIDKEEPALIVETIME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.E_INVALIDBRANCHNAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.E_INVALIDTIME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.E_BUSY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.E_NOINFO">
            <remarks/>
        </member>
        <member name="T:Opc.ResultIDException">
            <summary>
            Used to raise an exception with associated with a specified result code.
            </summary>
        </member>
        <member name="P:Opc.ResultIDException.Result">
            <remarks/>
        </member>
        <member name="M:Opc.ResultIDException.#ctor(Opc.ResultID)">
            <remarks/>
        </member>
        <member name="M:Opc.ResultIDException.#ctor(Opc.ResultID,System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.ResultIDException.#ctor(Opc.ResultID,System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ResultIDException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="F:Opc.ResultIDException.m_result">
            <remarks/>
        </member>
        <member name="T:Opc.Server">
            <summary>
            A base class for an in-process object used to access OPC servers.
            </summary>
        </member>
        <member name="M:Opc.Server.#ctor(Opc.Factory,Opc.URL)">
            <summary>
            Initializes the object with a factory and a default URL.
            </summary>
            <param name="factory">The Opc.Factory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="M:Opc.Server.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:Opc.Server.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Server.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="T:Opc.Server.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Server.Clone">
            <summary>
            Returns an unconnected copy of the server with the same URL. 
            </summary>
        </member>
        <member name="P:Opc.Server.Name">
            <summary>
            A short descriptive name for the server assigned by the client.
            </summary>
        </member>
        <member name="P:Opc.Server.Url">
            <summary>
            The URL that describes the network location of the server.
            </summary>
        </member>
        <member name="P:Opc.Server.Locale">
            <summary>
            The default of locale used by the remote server.
            </summary>
        </member>
        <member name="P:Opc.Server.SupportedLocales">
            <summary>
            The set of locales supported by the remote server.
            </summary>
        </member>
        <member name="P:Opc.Server.IsConnected">
            <summary>
            Whether the remote server is currently connected.
            </summary>
        </member>
        <member name="M:Opc.Server.Connect">
            <summary>
            Establishes a physical connection to the remote server.
            </summary>
        </member>
        <member name="M:Opc.Server.Connect(Opc.ConnectData)">
            <summary>
            Establishes a physical connection to the remote server.
            </summary>
            <param name="connectData">Any protocol configuration or user authenication information.</param>
        </member>
        <member name="M:Opc.Server.Connect(Opc.URL,Opc.ConnectData)">
            <summary>
            Establishes a physical connection to the remote server identified by a URL.
            </summary>
            <param name="url">The network address of the remote server.</param>
            <param name="connectData">Any protocol configuration or user authenication information.</param>
        </member>
        <member name="M:Opc.Server.Disconnect">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="M:Opc.Server.Duplicate">
            <summary>
            Creates a new instance of a server object with the same factory and url.
            </summary>
            <remarks>This method does not copy the value of any properties.</remarks>
            <returns>An unconnected duplicate instance of the server object.</returns>
        </member>
        <member name="E:Opc.Server.ServerShutdown">
            <summary>
            An event to receive server shutdown notifications.
            </summary>
        </member>
        <member name="M:Opc.Server.GetLocale">
            <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
            <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Opc.Server.SetLocale(System.String)">
            <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <returns>A locale that the server supports and is the best match for the requested locale.</returns>
        </member>
        <member name="M:Opc.Server.GetSupportedLocales">
            <summary>
            Returns the locales supported by the server
            </summary>
            <remarks>The first element in the array must be the default locale for the server.</remarks>
            <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Opc.Server.GetErrorText(System.String,Opc.ResultID)">
            <summary>
            Returns the localized text for the specified result code.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <param name="resultID">The result code identifier.</param>
            <returns>A message localized for the best match for the requested locale.</returns>
        </member>
        <member name="M:Opc.Server.GetString(System.String)">
            <summary>
            Returns a localized string with the specified name.
            </summary>
        </member>
        <member name="M:Opc.Server.SetUrl(Opc.URL)">
            <summary>
            Updates the URL for the server.
            </summary>
        </member>
        <member name="M:Opc.Server.FindBestLocale(System.String,System.String[])">
            <summary>
            Finds the best matching locale given a set of supported locales.
            </summary>
        </member>
        <member name="F:Opc.Server.m_server">
            <summary>
            The remote server object.
            </summary>
        </member>
        <member name="F:Opc.Server.m_url">
            <summary>
            The URL that describes the network location of the server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_factory">
            <summary>
            The factory used to instantiate the remote server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_connectData">
            <summary>
            The last set of credentials used to connect successfully to the server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_name">
            <summary>
            A short name for the server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_locale">
            <summary>
            The default locale used by the server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_supportedLocales">
            <summary>
            The set of locales supported by the remote server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_resourceManager">
            <summary>
            The resource manager used to access localized resources.
            </summary>
        </member>
        <member name="T:Opc.ConnectAsyncDelegate">
            <summary>
            The asynchronous delegate for Connect.
            </summary>
        </member>
        <member name="T:Opc.DisconnectAsyncDelegate">
            <summary>
            The asynchronous delegate for Disconnect.
            </summary>
        </member>
        <member name="T:Opc.GetLocaleAsyncDelegate">
            <summary>
            The asynchronous delegate for GetLocale.
            </summary>
        </member>
        <member name="T:Opc.SetLocaleAsyncDelegate">
            <summary>
            The asynchronous delegate for SetLocale.
            </summary>
        </member>
        <member name="T:Opc.GetSupportedLocalesAsyncDelegate">
            <summary>
            The asynchronous delegate for GetSupportedLocales.
            </summary>
        </member>
        <member name="T:Opc.GetErrorTextAsyncDelegate">
            <summary>
            The asynchronous delegate for GetErrorText.
            </summary>
        </member>
        <member name="T:Opc.AlreadyConnectedException">
            <summary>
            Raised if an operation cannot be executed because the server is not connected.
            </summary>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.NotConnectedException">
            <summary>
            Raised if an operation cannot be executed because the server is not connected.
            </summary>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.ConnectFailedException">
            <summary>
            Raised if an operation cannot be executed because the server is not reachable.
            </summary>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.AccessDeniedException">
            <summary>
            Raised if an operation cannot be executed because the server refuses access.
            </summary>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.ServerTimeoutException">
            <summary>
            Raised an remote operation by the server timed out
            </summary>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.InvalidResponseException">
            <summary>
            Raised an remote operation by the server returned unusable or invalid results.
            </summary>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.BrowseCannotContinueException">
            <summary>
            Raised if the browse position is not valid.
            </summary>
        </member>
        <member name="M:Opc.BrowseCannotContinueException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.BrowseCannotContinueException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.BrowseCannotContinueException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.BrowseCannotContinueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.Type">
            <summary>
            Defines constants for standard data types.
            </summary>
        </member>
        <member name="F:Opc.Type.SBYTE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.BYTE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.SHORT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.USHORT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.INT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.UINT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.LONG">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ULONG">
            <remarks/>
        </member>
        <member name="F:Opc.Type.FLOAT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.DOUBLE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.DECIMAL">
            <remarks/>
        </member>
        <member name="F:Opc.Type.BOOLEAN">
            <remarks/>
        </member>
        <member name="F:Opc.Type.DATETIME">
            <remarks/>
        </member>
        <member name="F:Opc.Type.DURATION">
            <remarks/>
        </member>
        <member name="F:Opc.Type.STRING">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ANY_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.BINARY">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_SHORT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_USHORT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_INT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_UINT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_LONG">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_ULONG">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_FLOAT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_DOUBLE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_DECIMAL">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_BOOLEAN">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_DATETIME">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_STRING">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_ANY_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ILLEGAL_TYPE">
            <remarks/>
        </member>
        <member name="M:Opc.Type.Enumerate">
            <summary>
            Returns an array of all well-known types.
            </summary>
        </member>
        <member name="T:OpcXml.Da.BrowsePosition">
            <summary>
            Implements an object that handles multi-step browse operations.
            </summary>
        </member>
        <member name="F:OpcXml.Da.BrowsePosition.ContinuationPoint">
            <summary>
            The continuation point for a browse operation.
            </summary>
        </member>
        <member name="F:OpcXml.Da.BrowsePosition.MoreElements">
            <summary>
            Indicates that elements that meet the filter criteria have not been returned.
            </summary>
        </member>
        <member name="F:OpcXml.Da.BrowsePosition.Locale">
            <summary>
            The the locale used for the browse operation.
            </summary>
        </member>
        <member name="F:OpcXml.Da.BrowsePosition.ReturnErrorText">
            <summary>
            Whether localized error texts should be reurned with the browse results.
            </summary>
        </member>
        <member name="M:OpcXml.Da.BrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String,System.Boolean)">
            <summary>
            Initializes a browse posistion 
            </summary>
        </member>
        <member name="T:OpcXml.Da.RootBrowsePosition">
            <summary>
            Implements an object that handles multi-step browse operations at root
            </summary>
        </member>
        <member name="F:OpcXml.Da.RootBrowsePosition.Names">
            <summary>
            The names of servers at root.
            </summary>
        </member>
        <member name="F:OpcXml.Da.RootBrowsePosition.Index">
            <summary>
            The index in the names array.
            </summary>
        </member>
        <member name="M:OpcXml.Da.RootBrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String,System.Boolean)">
            <summary>
            Initializes a browse posistion 
            </summary>
        </member>
        <member name="T:OpcXml.Da.IServer">
            <summary>
            Defines functionality that is common to all XML-DA OPC servers.
            </summary>
        </member>
        <member name="P:OpcXml.Da.IServer.SupportedLocales">
            <summary>
            Returns the set of supported locales.
            </summary>
        </member>
        <member name="M:OpcXml.Da.IServer.GetStatus(System.String,System.String,Opc.Da.ServerStatus@)">
            <summary>
            Returns the current server status.
            </summary>
        </member>
        <member name="M:OpcXml.Da.IServer.Read(OpcXml.Da.RequestOptions,OpcXml.Da.ItemList,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
            <summary>
            Reads a set of items.
            </summary>
        </member>
        <member name="M:OpcXml.Da.IServer.Write(OpcXml.Da.RequestOptions,OpcXml.Da.ItemValueList,System.Boolean,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
            <summary>
            Writes a set of items and, if requested, returns the current values.
            </summary>
        </member>
        <member name="M:OpcXml.Da.IServer.Subscribe(OpcXml.Da.RequestOptions,OpcXml.Da.ItemList,System.TimeSpan,System.Boolean,System.String@,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
            <summary>
            Establishes a subscription for the set of items.
            </summary>
        </member>
        <member name="M:OpcXml.Da.IServer.PolledRefresh(OpcXml.Da.RequestOptions,System.String[],System.TimeSpan,System.TimeSpan,System.Boolean,System.String[]@,OpcXml.Da.ItemValueResultList[]@,OpcXml.Da.Error[]@,System.Boolean@)">
            <summary>
            Polls the server for the any item changes for one or more subscriptions.
            </summary>
        </member>
        <member name="M:OpcXml.Da.IServer.Unsubscribe(System.String)">
            <summary>
            Terminates one subscription.
            </summary>
        </member>
        <member name="M:OpcXml.Da.IServer.Browse(System.String,System.String,System.Boolean,Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String@,System.Boolean@,Opc.Da.BrowseElement[]@,OpcXml.Da.Error[]@)">
            <summary>
            Returns a set of elements at the specified position and that meet the filter criteria.
            </summary>
        </member>
        <member name="M:OpcXml.Da.IServer.GetProperties(System.String,System.String,System.Boolean,Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.String,System.Boolean,Opc.Da.ItemPropertyCollection[]@,OpcXml.Da.Error[]@)">
            <summary>
            Returns the specified properties for a set of items.
            </summary>
        </member>
        <member name="T:OpcXml.Da.RequestOptions">
            <summary>
            The standard return parameter for XML-DA server methods.
            </summary>
        </member>
        <member name="F:OpcXml.Da.RequestOptions.RequestHandle">
            <summary>
            A request handle assigned by client.
            </summary>
        </member>
        <member name="F:OpcXml.Da.RequestOptions.RequestDeadline">
            <summary>
            The maximum time a server should wait before returning whatever results it has.
            </summary>
        </member>
        <member name="F:OpcXml.Da.RequestOptions.Locale">
            <summary>
            The locale to used for strings in the results.
            </summary>
        </member>
        <member name="F:OpcXml.Da.RequestOptions.Filters">
            <summary>
            The filters to apply to returned results.
            </summary>
        </member>
        <member name="T:OpcXml.Da.ReplyBase">
            <summary>
            The standard return parameter for XML-DA server methods.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ReplyBase.RcvTime">
            <summary>
            The UTC time a request arrives at the server.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ReplyBase.ReplyTime">
            <summary>
            The UTC time a response is returned from the server.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ReplyBase.ClientRequestHandle">
            <summary>
            The request handle assigned by the client.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ReplyBase.RevisedLocaleID">
            <summary>
            The actual locale id used by the server.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ReplyBase.ServerState">
            <summary>
            The current state of the server.
            </summary>
        </member>
        <member name="T:OpcXml.Da.Error">
            <summary>
            Contains the localized text for a result code.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Error.ID">
            <summary>
            The unique id for the result code.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Error.Text">
            <summary>
            The localized verbose message,
            </summary>
        </member>
        <member name="F:OpcXml.Da.Error.E_FAIL">
            <summary>
            All errors that are defined in the XML-DA specification.
            </summary>summary>
        </member>
        <member name="F:OpcXml.Da.Error.E_OUTOFMEMORY">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_SERVERSTATE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_TIMEDOUT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_BUSY">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_INVALIDCONTINUATIONPOINT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_INVALIDFILTER">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_NOSUBSCRIPTION">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_INVALIDHOLDTIME">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_UNKNOWNITEMNAME">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_INVALIDITEMNAME">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_UNKNOWNITEMPATH">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_INVALIDITEMPATH">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_NOTSUPPORTED">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_BADTYPE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_RANGE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_READONLY">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_WRITEONLY">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_INVALIDPID">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.S_FALSE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.S_CLAMP">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.S_UNSUPPORTEDRATE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.S_DATAQUEUEOVERFLOW">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_TYPE_CHANGED">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_FILTER_DUPLICATE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_FILTER_INVALID">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.E_FILTER_ERROR">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Error.S_FILTER_NO_DATA">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da.SubscribeItemValueResult">
            <summary>
            A XML-DA specific item value result that is used for subscriptions.
            </summary>
        </member>
        <member name="F:OpcXml.Da.SubscribeItemValueResult.SamplingRate">
            <summary>
            The actual sampling rate used for items in a subscription.
            </summary>
        </member>
        <member name="F:OpcXml.Da.SubscribeItemValueResult.SamplingRateSpecified">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da.SubscribeItemValueResult.#ctor">
            <summary>
            Initializes the object with the default values;
            </summary>
        </member>
        <member name="M:OpcXml.Da.SubscribeItemValueResult.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
        </member>
        <member name="M:OpcXml.Da.SubscribeItemValueResult.#ctor(Opc.Da.ItemValue)">
            <summary>
            Initializes the object with an ItemValue object.
            </summary>
        </member>
        <member name="T:OpcXml.Da.List">
            <summary>
            Contains properties that uniquely identify an OPC item list. 
            </summary>
        </member>
        <member name="F:OpcXml.Da.List.Name">
            <summary>
            An optional identifier for an item list.
            </summary>
        </member>
        <member name="F:OpcXml.Da.List.ClientHandle">
            <summary>
            A unique list identifier assigned by the client.
            </summary>
        </member>
        <member name="F:OpcXml.Da.List.ServerHandle">
            <summary>
            A unique list identifier assigned by the server.
            </summary>
        </member>
        <member name="T:OpcXml.Da.ItemList">
            <summary>
            Contain a list of items and default values for properties used to access an OPC item.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ItemList.ItemPath">
            <summary>
            The default item path for items in the list.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ItemList.ReqType">
            <summary>
            The default data type to use when reading items in the list.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ItemList.MaxAge">
            <summary>
            The default maximum age to use when reading items in the list.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ItemList.MaxAgeSpecified">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.ItemList.Deadband">
            <summary>
            The default deadband to use when subscribing to the items in the list.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ItemList.DeadbandSpecified">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.ItemList.SamplingRate">
            <summary>
            The default sampling rate to use when subscribing to the items in the list.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ItemList.SamplingRateSpecified">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.ItemList.EnableBuffering">
            <summary>
            The default buffering behavior to use when subscribing to the items in the list.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ItemList.EnableBufferingSpecified">
            <remarks/>
        </member>
        <member name="P:OpcXml.Da.ItemList.Item(System.Int32)">
            <summary>
            Accesses the item at the specified index.
            </summary>
        </member>
        <member name="T:OpcXml.Da.ItemValueResultList">
            <summary>
            Contains a list of item results and revised default values for item access properties.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ItemValueResultList.SamplingRate">
            <summary>
            The actual sampling rate used for items in a subscription.
            </summary>
        </member>
        <member name="F:OpcXml.Da.ItemValueResultList.SamplingRateSpecified">
            <remarks/>
        </member>
        <member name="P:OpcXml.Da.ItemValueResultList.Item(System.Int32)">
            <summary>
            Accesses the items at the specified index.
            </summary>
        </member>
        <member name="T:OpcXml.Da.ItemValueList">
            <summary>
            Contains a list of item values.
            </summary>
        </member>
        <member name="P:OpcXml.Da.ItemValueList.Item(System.Int32)">
            <summary>
            Accesses the items at the specified index.
            </summary>
        </member>
        <member name="T:OpcXml.Da.Property">
            <summary>
            Defines identifiers for well-known properties.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Property.DATATYPE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.VALUE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.QUALITY">
            <remarks/>    
        </member>
        <member name="F:OpcXml.Da.Property.TIMESTAMP">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.ACCESSRIGHTS">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.SCANRATE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.EUTYPE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.EUINFO">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.ENGINEERINGUINTS">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.HIGHEU">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.LOWEU">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.HIGHIR">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.LOWIR">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.CLOSELABEL">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.OPENLABEL">
            <remarks/>     
        </member>
        <member name="F:OpcXml.Da.Property.TIMEZONE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.CONDITION_STATUS">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.ALARM_QUICK_HELP">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.ALARM_AREA_LIST">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.PRIMARY_ALARM_AREA">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.CONDITION_LOGIC">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.LIMIT_EXCEEDED">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.DEADBAND">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.HIHI_LIMIT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.HI_LIMIT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.LO_LIMIT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.LOLO_LIMIT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.RATE_CHANGE_LIMIT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.DEVIATION_LIMIT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.SOUNDFILE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.TYPE_SYSTEM_ID">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.DICTIONARY_ID">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.TYPE_ID">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.DICTIONARY">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.TYPE_DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.CONSISTENCY_WINDOW">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.WRITE_BEHAVIOR">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.UNCONVERTED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.UNFILTERED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.DATA_FILTER_VALUE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.MINIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.MAXIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Property.VALUE_PRECISION">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da.Server">
            <summary>
            An in-process wrapper for a remote OPC XML-DA server (not thread safe).
            </summary>
        </member>
        <member name="M:OpcXml.Da.Server.#ctor">
            <summary>
            Initializes the object.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Server.Dispose">
            <summary>
            This must be called explicitly by clients to ensure the COM server is released.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Server.Initialize(Opc.URL,Opc.ConnectData)">
            <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Server.Uninitialize">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="E:OpcXml.Da.Server.ServerShutdown">
            <summary>
            An event to receive server shutdown notifications.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Server.GetLocale">
            <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
            <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:OpcXml.Da.Server.SetLocale(System.String)">
            <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <returns>A locale that the server supports and is the best match for the requested locale.</returns>
        </member>
        <member name="M:OpcXml.Da.Server.GetSupportedLocales">
            <summary>
            Returns the locales supported by the server
            </summary>
            <remarks>The first element in the array must be the default locale for the server.</remarks>
            <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:OpcXml.Da.Server.GetErrorText(System.String,Opc.ResultID)">
            <summary>
            Returns the localized text for the specified result code.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <param name="resultID">The result code identifier.</param>
            <returns>A message localized for the best match for the requested locale.</returns>
        </member>
        <member name="M:OpcXml.Da.Server.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:OpcXml.Da.Server.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:OpcXml.Da.Server.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:OpcXml.Da.Server.Read(Opc.Da.Item[])">
            <summary>
            Reads the current values for a set of items. 
            </summary>
            <param name="items">The set of items to read.</param>
            <returns>The results of the read operation for each item.</returns>
        </member>
        <member name="M:OpcXml.Da.Server.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
            <param name="items">The set of item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:OpcXml.Da.Server.CreateSubscription(Opc.Da.SubscriptionState)">
            <summary>
            Creates a new subscription.
            </summary>
            <param name="state">The initial state of the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:OpcXml.Da.Server.CancelSubscription(Opc.Da.ISubscription)">
            <summary>
            Creates a new instance of the appropriate subcription object.
            </summary>
            <param name="subscription">The remote subscription object.</param>
        </member>
        <member name="M:OpcXml.Da.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
            <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
            <param name="itemID">The identifier of branch which is the target of the search.</param>
            <param name="filters">The filters to use to limit the set of child elements returned.</param>
            <param name="position">An object used to continue a browse that could not be completed.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:OpcXml.Da.Server.BrowseNext(Opc.Da.BrowsePosition@)">
            <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
            <param name="position">An object containing the browse operation state information.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:OpcXml.Da.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
            <summary>
            Returns the item properties for a set of items.
            </summary>
            <param name="itemIDs">A list of item identifiers.</param>
            <param name="propertyIDs">A list of properties to fetch for each item.</param>
            <param name="returnValues">Whether the property values should be returned with the properties.</param>
            <returns>A list of properties for each item.</returns>
        </member>
        <member name="F:OpcXml.Da.Server.m_proxy">
            <summary>
            The autogenerated proxy object for the XML-DA 1.0 web service.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Server.m_url">
            <summary>
            The URL referencing the web service.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Server.m_options">
            <summary>
            The default reqeust options for the server.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Server.m_timebias">
            <summary>
            Keeps track of the difference between the server clock and the local clock.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Server.m_lastUpdateTime">
            <summary>
            The last time an update was received from the server.
            </summary>
        </member>
        <member name="P:OpcXml.Da.Server.ServerTime">
            <summary>
            Returns an estimate of the UTC time at the server.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Server.m_messageTables">
            <summary>
            Stores tables of error messages indexed by locale.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Server.CacheResponse(System.String,OpcXml.Da10.ReplyBase,OpcXml.Da10.OPCError[])">
            <summary>
            Caches error messages and request statistics after each request.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Server.PollCompleted(System.String,OpcXml.Da10.ReplyBase,OpcXml.Da10.OPCError[])">
            <summary>
            Called when a subscription receives a polled refresh response.
            </summary>
        </member>
        <member name="T:OpcXml.Da.Subscription">
            <summary>
            A subscription for a set of items on a single XML-DA server.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.#ctor(OpcXml.Da.Server,OpcXml.Da10.Service,Opc.Da.SubscriptionState,System.Int32)">
            <summary>
            Initializes a new instance of a subscription.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.Dispose">
            <summary>
            Releases any unmanaged resources used by the subscription.
            </summary>
        </member>
        <member name="P:OpcXml.Da.Subscription.Server">
            <summary>
            The server that the subscription is attached to.
            </summary>
        </member>
        <member name="E:OpcXml.Da.Subscription.DataChanged">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:OpcXml.Da.Subscription.GetState">
            <summary>
            Returns the current state of the subscription.
            </summary>
            <returns>The current state of the subscription.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
            <summary>
            Changes the state of a subscription.
            </summary>
            <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
            <param name="state">The new subscription state.</param>
            <returns>The actual subscption state after applying the changes.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.AddItems(Opc.Da.Item[])">
            <summary>
            Adds items to the subscription.
            </summary>
            <param name="items">The set of items to add to the subscription.</param>
            <returns>The results of the add item operation for each item.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.ModifyItems(System.Int32,Opc.Da.Item[])">
            <summary>
            Modifies the state of items in the subscription
            </summary>
            <param name="masks">Specifies which item state parameters are being modified.</param>
            <param name="items">The new state for each item.</param>
            <returns>The results of the modify item operation for each item.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.RemoveItems(Opc.ItemIdentifier[])">
            <summary>
            Removes items from the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being removed.</param>
            <returns>The results of the remove item operation for each item.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.Read(Opc.Da.Item[])">
            <summary>
            Reads the values for a set of items in the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being read.</param>
            <returns>The value for each of items.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items in the subscription.
            </summary>
            <param name="items">The item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
            <param name="items">The set of item values to write (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous read or write operation.
            </summary>
            <param name="request">The object returned from the BeginRead or BeginWrite request.</param>
            <param name="callback">The function to invoke when the cancel completes.</param>
        </member>
        <member name="M:OpcXml.Da.Subscription.Refresh">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.Refresh(System.Object,Opc.IRequest@)">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:OpcXml.Da.Subscription.SetEnabled(System.Boolean)">
            <summary>
            Enables or disables data change notifications from the server.
            </summary>
            <param name="enabled">Whether data change notifications are enabled.</param> 
        </member>
        <member name="M:OpcXml.Da.Subscription.GetEnabled">
            <summary>
            Checks whether data change notifications from the server are enabled.
            </summary>
            <returns>Whether data change notifications are enabled.</returns>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_pingRate">
            <summary>
            The maximum time between polled refreshes.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_enabled">
            <summary>
            Whether the subscription is currently enabled.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_items">
            <summary>
            An ordered list of all items which are part of the subscription.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_pollTimer">
            <summary>
            A timer used to schedule polled refreshes.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_basicPollTimer">
            <summary>
            A timer used to waiting for hold time in basic polled subscription.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_counter">
            <summary>
            A counter used to create unique subscription names.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_server">
            <summary>
            The containing server object.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_proxy">
            <summary>
            The autogenerated proxy object for the XML-DA 1.0 web service.
            </summary>
        </member>
        <member name="E:OpcXml.Da.Subscription.m_callback">
            <summary>
            The event raised when data change events occur.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_filters">
            <summary>
            The current subscription result filters options.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Subscription.m_state">
            <summary>
            The current subscription state.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.OnDataChange(OpcXml.Da.ItemValueResultList)">
            <summary>
            Sends data change notifications for all active items.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.Subscribe(System.Collections.ArrayList)">
            <summary>
            Establishes a subscription for the current set of items.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.Unsubscribe">
            <summary>
            Closes the current subscription with the server.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.OnPollCompleted(System.IAsyncResult)">
            <summary>
            Called when a poll completes.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.SchedulePoll">
            <summary>
            Starts polling for the current subscription.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Subscription.Poll(System.Object)">
            <summary>
            Starts polling for the current subscription.
            </summary>
        </member>
        <member name="T:OpcXml.Da.Type">
            <summary>
            Defines constants for all supported XML-DA types.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Type.ANY_TYPE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.SBYTE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.BYTE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.SHORT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.USHORT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.INT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.UINT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.LONG">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ULONG">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.FLOAT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.DOUBLE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.DECIMAL">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.DATETIME">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.TIME">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.DATE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.DURATION">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.BOOLEAN">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.STRING">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.QNAME">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.BINARY">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_SBYTE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_BYTE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_SHORT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_USHORT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_INT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_UINT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_LONG">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_ULONG">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_FLOAT">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_DOUBLE">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_DECIMAL">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_DATETIME">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_BOOLEAN">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_STRING">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da.Type.ARRAY_ANY_TYPE">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da.Wrapper.RemoteSubscription">
            <summary>
            Manages an item value cache for a subscription.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.#ctor">
            <summary>
            Initializes the object.
            </summary>
        </member>
        <member name="P:OpcXml.Da.Wrapper.RemoteSubscription.ItemPath">
            <summary>
            The item path which identifies the remote server which handles the subscription.
            </summary>
        </member>
        <member name="P:OpcXml.Da.Wrapper.RemoteSubscription.UpdateRate">
            <summary>
            The update rate for the subscription.
            </summary>
        </member>
        <member name="P:OpcXml.Da.Wrapper.RemoteSubscription.Deadband">
            <summary>
            The nominal deadband for the subscription.
            </summary>
        </member>
        <member name="E:OpcXml.Da.Wrapper.RemoteSubscription.DataChanged">
            <summary>
            A event raised when a new data change update arrives from the remote server.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.Initialize(System.String,System.Collections.Hashtable,OpcXml.Da.ItemList,OpcXml.Da.SubscribeItemValueResult[],System.Boolean,Opc.Da.ItemResult[])">
            <summary>
            Initializes the object by creating the remote subscription. 
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.AddItems(OpcXml.Da.ItemList,OpcXml.Da.SubscribeItemValueResult[],System.Boolean,Opc.Da.ItemResult[])">
            <summary>
            Adds items to the subscription.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.RemoveItems(Opc.ItemIdentifier[])">
            <summary>
            Removes items from the subscription.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.Dispose">
            <summary>
            Disposes of the subscription and disposes all contained cache objects.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.OnIncomingDataChanged(System.Object,System.Object,Opc.Da.ItemValueResult[])">
            <summary>
            Handles data changed events from the remote server.
            </summary>
        </member>
        <member name="T:OpcXml.Da.Wrapper.Server">
            <summary>
            A XML-DA server implementation that wraps a COM-DA server.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.#ctor">
            <summary>
            Initializes the XML-DA server.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.Dispose">
            <summary>
            Releases any unmanaged resources used by the server.
            </summary>
        </member>
        <member name="P:OpcXml.Da.Wrapper.Server.SupportedLocales">
            <summary>
            The names of the locales supported by the server.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.WrapServer(System.String,Opc.Da.IServer,System.Boolean)">
            <summary>
            Connects to the server with the specified address.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.GetStatus(System.String,System.String,Opc.Da.ServerStatus@)">
            <summary>
            Returns the current server status.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.Read(OpcXml.Da.RequestOptions,OpcXml.Da.ItemList,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
            <summary>
            Reads a set of items.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.Write(OpcXml.Da.RequestOptions,OpcXml.Da.ItemValueList,System.Boolean,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
            <summary>
            Writes a set of items and, if requested, returns the current values.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.Subscribe(OpcXml.Da.RequestOptions,OpcXml.Da.ItemList,System.TimeSpan,System.Boolean,System.String@,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
            <summary>
            Establishes a subscription for the set of items.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.PolledRefresh(OpcXml.Da.RequestOptions,System.String[],System.TimeSpan,System.TimeSpan,System.Boolean,System.String[]@,OpcXml.Da.ItemValueResultList[]@,OpcXml.Da.Error[]@,System.Boolean@)">
            <summary>
            Polls the server for the any item changes for one or more subscriptions.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.Unsubscribe(System.String)">
            <summary>
            Terminates one or more subscriptions.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.Browse(System.String,System.String,System.Boolean,Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String@,System.Boolean@,Opc.Da.BrowseElement[]@,OpcXml.Da.Error[]@)">
            <summary>
            Returns a set of elements at the specified position and that meet the filter criteria.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.BrowseRoot(Opc.Da.BrowseElement[],Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String,System.Boolean,Opc.Da.BrowsePosition@)">
            <summary>
            Returns the names of the wrapped servers.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.GetProperties(System.String,System.String,System.Boolean,Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.String,System.Boolean,Opc.Da.ItemPropertyCollection[]@,OpcXml.Da.Error[]@)">
            <summary>
            Returns the specified properties for a set of items.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_servers">
            <summary>
            The set of COM servers being wrapped by the XML-DA server.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_primaryServer">
            <summary>
            The item path for the wrapped server that should be used for get status requests.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_status">
            <summary>
            The current status of the XML-DA server (distinct from the status of the COM-DA server).
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_pingTimer">
            <summary>
            A timer that clears out expired subscriptions.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_subscriptionPollTimes">
            <summary>
            A table of last pool times indexed by subscription handle.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_supportedLocales">
            <summary>
            The names of the locales supported by the server.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_resourceManager">
            <summary>
            The resource manager used to access localized resources.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_positions">
            <summary>
            Stores browse positions for incomplete browse operations.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_subscriptions">
            <summary>
            Currently active client subscriptions.
            </summary>
        </member>
        <member name="F:OpcXml.Da.Wrapper.Server.m_remoteSubscriptions">
            <summary>
            Current remote subscriptions.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.GetString(System.String,System.String)">
            <summary>
            Returns a localized string with the specified name.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CreateReply(System.String,System.String)">
            <summary>
            Initializes a reply object.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CheckState(System.String,System.Boolean)">
            <summary>
            Checks that the server is aply to process requests.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CreateException(System.String,System.Xml.XmlQualifiedName)">
            <summary>
            Creates a SOAP exception for the specified error.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CreateException(System.String,System.Exception)">
            <summary>
            Creates a SOAP exception for the specified exception.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CheckDeadline(System.String,System.DateTime)">
            <summary>
            Verifies that the request deadline has been met.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.ApplyItemListDefaults(OpcXml.Da.ItemList)">
            <summary>
            Updates the item objects with values specified at the list level.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CheckDeadline(System.String,System.DateTime,System.Object)">
            <summary>
            Generates a list of error results if the deadline has already passed.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.ApplyOptions(System.String,OpcXml.Da.RequestOptions,System.Object)">
            <summary>
            Applies the request objects to the results.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.GetError(System.String,System.String,Opc.ResultID)">
            <summary>
            Constructs an error object for a result identifier.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.GetErrors(System.String,System.Object)">
            <summary>
            Constructs an error object for a result identifier.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CleanupSubscriptions(System.Object)">
            <summary>
            Cleans up any inactive subscriptions.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CancelSubscription(OpcXml.Da.Wrapper.Subscription)">
            <summary>
            Cancels a subscription and releases all resources.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.DataChanged(System.Object,System.Object,Opc.Da.ItemValueResult[])">
            <summary>
            Notify each subscription object that new data has arrived.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.Read(System.String,System.String,Opc.Da.Item[],Opc.Da.ItemValueResult[])">
            <summary>
            Reads all items with the specifed item path.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.Write(System.String,System.String,Opc.Da.ItemValue[],System.Boolean,Opc.Da.ItemValueResult[])">
            <summary>
            Writes all items with the specifed item path.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.GetProperties(System.String,System.String,Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean,Opc.Da.ItemPropertyCollection[])">
            <summary>
            Gets the properties with for specified items with the specifed item path.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CheckStringValue(Opc.Da.ItemValue)">
            <summary>
            Ensures that the item value contains valid data.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Server.CheckStringValue(Opc.Da.ItemProperty)">
            <summary>
            Ensures that the item property contains valid data.
            </summary>
        </member>
        <member name="T:OpcXml.Da.Wrapper.Subscription">
            <summary>
            Manages an item value cache for a subscription.
            </summary>
        </member>
        <member name="P:OpcXml.Da.Wrapper.Subscription.Handle">
            <summary>
            The unique handle assigned to the subscription.
            </summary>
        </member>
        <member name="P:OpcXml.Da.Wrapper.Subscription.PingTime">
            <summary>
            The ping time used for the subscription.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Subscription.#ctor(System.String,System.TimeSpan)">
            <summary>
            Initializes the cache with a table of servers, a handle and a ping time.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Subscription.Initialize(Opc.Da.ItemResult[],OpcXml.Da.SubscribeItemValueResult[])">
            <summary>
            Initializes the cache with the initial set of results. 
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Subscription.HasExpired">
            <summary>
            Checks if the subcription has expired.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Subscription.GetItems">
            <summary>
            Returns the current set of item values.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Subscription.GetItemValues(System.Boolean)">
            <summary>
            Returns the current set of item values.
            </summary>
        </member>
        <member name="M:OpcXml.Da.Wrapper.Subscription.OnDataChanged(Opc.Da.ItemValueResult[])">
            <summary>
            Called when data updates are received from the server.
            </summary>
        </member>
        <member name="T:OpcXml.Da10.Request">
            <summary>
            Contains state information for a single asynchronous request.
            </summary>
        </member>
        <member name="M:OpcXml.Da10.Request.GetRelativeTime(System.DateTime)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetRequestOptions(OpcXml.Da10.RequestOptions)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetRequestOptions(System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetReplyBase(System.String,OpcXml.Da.ReplyBase)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetErrors(OpcXml.Da.Error[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetErrors(OpcXml.Da10.OPCError[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetResultID(System.Xml.XmlQualifiedName)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetResultID(Opc.ResultID)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetBrowseFilter(Opc.Da.browseFilter)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetBrowseFilter(OpcXml.Da10.browseFilter)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetPropertyIDs(System.Xml.XmlQualifiedName[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetPropertyID(System.Xml.XmlQualifiedName)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetPropertyNames(Opc.Da.PropertyID[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetPropertyName(Opc.Da.PropertyID)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetBrowseElements(OpcXml.Da10.BrowseElement[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetBrowseElements(Opc.Da.BrowseElement[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetBrowseElement(OpcXml.Da10.BrowseElement)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetBrowseElement(Opc.Da.BrowseElement)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemProperty(OpcXml.Da10.ItemProperty)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemProperty(Opc.Da.ItemProperty)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.MarshalPropertyValue(Opc.Da.PropertyID,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.UnmarshalPropertyValue(Opc.Da.PropertyID,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetType(System.Type)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetType(System.Xml.XmlQualifiedName)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemIdentifiers(OpcXml.Da10.ItemIdentifier[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemIdentifiers(Opc.ItemIdentifier[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemPropertyCollections(OpcXml.Da10.PropertyReplyList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemPropertyCollections(Opc.Da.ItemPropertyCollection[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetServerState(OpcXml.Da10.serverState)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetServerState(Opc.Da.serverState)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetServerStatus(OpcXml.Da10.ReplyBase,OpcXml.Da10.ServerStatus)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetServerStatus(Opc.Da.ServerStatus,System.String[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeLists(OpcXml.Da10.SubscribeRequestItemList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeLists(OpcXml.Da.ItemList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeList(OpcXml.Da10.SubscribeRequestItemList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeList(OpcXml.Da.ItemList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeItem(OpcXml.Da10.SubscribeRequestItem)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeItem(Opc.Da.Item)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeRefreshLists(OpcXml.Da10.SubscribePolledRefreshReplyItemList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeRefreshLists(OpcXml.Da.ItemValueResultList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeRefreshList(OpcXml.Da10.SubscribePolledRefreshReplyItemList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeRefreshList(OpcXml.Da.ItemValueResultList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemLists(OpcXml.Da10.ReadRequestItemList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemLists(OpcXml.Da.ItemList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemList(OpcXml.Da10.ReadRequestItemList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemList(OpcXml.Da.ItemList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItem(OpcXml.Da10.ReadRequestItem)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItem(Opc.Da.Item)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemValueLists(OpcXml.Da10.WriteRequestItemList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemValueLists(OpcXml.Da.ItemValueList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemValueList(OpcXml.Da10.WriteRequestItemList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemValueList(OpcXml.Da.ItemValueList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemValue(OpcXml.Da10.ItemValue)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetItemValue(Opc.Da.ItemValue)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetResultLists(OpcXml.Da10.ReplyItemList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetResultLists(OpcXml.Da.ItemValueResultList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetResultList(OpcXml.Da10.ReplyItemList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetResultList(OpcXml.Da.ItemValueResultList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetResultItem(OpcXml.Da10.ItemValue)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetResultItem(Opc.Da.ItemValueResult)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeResultLists(OpcXml.Da10.SubscribeReplyItemList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeResultLists(OpcXml.Da.ItemValueResultList[])">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeResultList(OpcXml.Da10.SubscribeReplyItemList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeResultList(OpcXml.Da.ItemValueResultList)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeResultItem(OpcXml.Da10.SubscribeItemValue)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetSubscribeResultItem(OpcXml.Da.SubscribeItemValueResult)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetQuality(OpcXml.Da10.OPCQuality)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Request.GetQuality(Opc.Da.Quality)">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.Service">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.#ctor">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.GetStatus(System.String,System.String,OpcXml.Da10.ServerStatus@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.BeginGetStatus(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.EndGetStatus(System.IAsyncResult,OpcXml.Da10.ServerStatus@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.Read(OpcXml.Da10.RequestOptions,OpcXml.Da10.ReadRequestItemList,OpcXml.Da10.ReplyItemList@,OpcXml.Da10.OPCError[]@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.BeginRead(OpcXml.Da10.RequestOptions,OpcXml.Da10.ReadRequestItemList,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.EndRead(System.IAsyncResult,OpcXml.Da10.ReplyItemList@,OpcXml.Da10.OPCError[]@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.Write(OpcXml.Da10.RequestOptions,OpcXml.Da10.WriteRequestItemList,System.Boolean,OpcXml.Da10.ReplyItemList@,OpcXml.Da10.OPCError[]@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.BeginWrite(OpcXml.Da10.RequestOptions,OpcXml.Da10.WriteRequestItemList,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.EndWrite(System.IAsyncResult,OpcXml.Da10.ReplyItemList@,OpcXml.Da10.OPCError[]@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.Subscribe(OpcXml.Da10.RequestOptions,OpcXml.Da10.SubscribeRequestItemList,System.Boolean,System.Int32,OpcXml.Da10.SubscribeReplyItemList@,OpcXml.Da10.OPCError[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.BeginSubscribe(OpcXml.Da10.RequestOptions,OpcXml.Da10.SubscribeRequestItemList,System.Boolean,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.EndSubscribe(System.IAsyncResult,OpcXml.Da10.SubscribeReplyItemList@,OpcXml.Da10.OPCError[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.SubscriptionPolledRefresh(OpcXml.Da10.RequestOptions,System.String[],System.DateTime,System.Boolean,System.Int32,System.Boolean,System.String[]@,OpcXml.Da10.SubscribePolledRefreshReplyItemList[]@,OpcXml.Da10.OPCError[]@,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.BeginSubscriptionPolledRefresh(OpcXml.Da10.RequestOptions,System.String[],System.DateTime,System.Boolean,System.Int32,System.Boolean,System.AsyncCallback,System.Object,System.Int32)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.EndSubscriptionPolledRefresh(System.IAsyncResult,System.String[]@,OpcXml.Da10.SubscribePolledRefreshReplyItemList[]@,OpcXml.Da10.OPCError[]@,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.SubscriptionCancel(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.BeginSubscriptionCancel(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.EndSubscriptionCancel(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.Browse(System.Xml.XmlQualifiedName[],System.String,System.String,System.String,System.String,System.String@,System.Int32,OpcXml.Da10.browseFilter,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,OpcXml.Da10.BrowseElement[]@,OpcXml.Da10.OPCError[]@,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.BeginBrowse(System.Xml.XmlQualifiedName[],System.String,System.String,System.String,System.String,System.String,System.Int32,OpcXml.Da10.browseFilter,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.EndBrowse(System.IAsyncResult,System.String@,OpcXml.Da10.BrowseElement[]@,OpcXml.Da10.OPCError[]@,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.GetProperties(OpcXml.Da10.ItemIdentifier[],System.Xml.XmlQualifiedName[],System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,OpcXml.Da10.PropertyReplyList[]@,OpcXml.Da10.OPCError[]@)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.BeginGetProperties(OpcXml.Da10.ItemIdentifier[],System.Xml.XmlQualifiedName[],System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpcXml.Da10.Service.EndGetProperties(System.IAsyncResult,OpcXml.Da10.PropertyReplyList[]@,OpcXml.Da10.OPCError[]@)">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.BeginInvokeWatcher">
            <summary>
            Watch BeginInvoke whether callback method is called.
            </summary>
        </member>
        <member name="T:OpcXml.Da10.ReplyBase">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReplyBase.RcvTime">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReplyBase.ReplyTime">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReplyBase.ClientRequestHandle">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReplyBase.RevisedLocaleID">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReplyBase.ServerState">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.serverState">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.serverState.running">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.serverState.failed">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.serverState.noConfig">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.serverState.suspended">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.serverState.test">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.serverState.commFault">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.PropertyReplyList">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.PropertyReplyList.Properties">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.PropertyReplyList.ItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.PropertyReplyList.ItemName">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.PropertyReplyList.ResultID">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.ItemProperty">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemProperty.Value">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemProperty.Name">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemProperty.Description">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemProperty.ItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemProperty.ItemName">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemProperty.ResultID">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.ItemIdentifier">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemIdentifier.ItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemIdentifier.ItemName">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.BrowseElement">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.BrowseElement.Properties">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.BrowseElement.Name">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.BrowseElement.ItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.BrowseElement.ItemName">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.BrowseElement.IsItem">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.BrowseElement.HasChildren">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.SubscribePolledRefreshReplyItemList">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribePolledRefreshReplyItemList.Items">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribePolledRefreshReplyItemList.SubscriptionHandle">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.ItemValue">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.DiagnosticInfo">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.Value">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.Quality">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.ItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.ItemName">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.ClientItemHandle">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.Timestamp">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.TimestampSpecified">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.ResultID">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ItemValue.ValueTypeQualifier">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.OPCQuality">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.OPCQuality.QualityField">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.OPCQuality.LimitField">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.OPCQuality.VendorField">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.qualityBits">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.bad">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.badConfigurationError">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.badNotConnected">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.badDeviceFailure">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.badSensorFailure">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.badLastKnownValue">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.badCommFailure">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.badOutOfService">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.badWaitingForInitialData">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.uncertain">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.uncertainLastUsableValue">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.uncertainSensorNotAccurate">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.uncertainEUExceeded">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.uncertainSubNormal">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.good">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.qualityBits.goodLocalOverride">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.limitBits">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.limitBits.none">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.limitBits.low">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.limitBits.high">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.limitBits.constant">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.SubscribeItemValue">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeItemValue.ItemValue">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeItemValue.RevisedSamplingRate">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeItemValue.RevisedSamplingRateSpecified">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.SubscribeReplyItemList">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeReplyItemList.Items">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeReplyItemList.RevisedSamplingRate">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeReplyItemList.RevisedSamplingRateSpecified">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.SubscribeRequestItem">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.ItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.ReqType">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.ItemName">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.ClientItemHandle">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.Deadband">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.DeadbandSpecified">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.RequestedSamplingRate">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.RequestedSamplingRateSpecified">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.EnableBuffering">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItem.EnableBufferingSpecified">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.SubscribeRequestItemList">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItemList.Items">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItemList.ItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItemList.ReqType">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItemList.Deadband">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItemList.DeadbandSpecified">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItemList.RequestedSamplingRate">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItemList.RequestedSamplingRateSpecified">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItemList.EnableBuffering">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.SubscribeRequestItemList.EnableBufferingSpecified">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.WriteRequestItemList">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.WriteRequestItemList.Items">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.WriteRequestItemList.ItemPath">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.OPCError">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.OPCError.Text">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.OPCError.ID">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.ReplyItemList">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReplyItemList.Items">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReplyItemList.Reserved">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.ReadRequestItem">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItem.ItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItem.ReqType">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItem.ItemName">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItem.ClientItemHandle">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItem.MaxAge">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItem.MaxAgeSpecified">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.ReadRequestItemList">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItemList.Items">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItemList.ItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItemList.ReqType">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItemList.MaxAge">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ReadRequestItemList.MaxAgeSpecified">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.RequestOptions">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.RequestOptions.RequestDeadline">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.RequestOptions.RequestDeadlineSpecified">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.RequestOptions.ReturnErrorText">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.RequestOptions.ReturnDiagnosticInfo">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.RequestOptions.ReturnItemTime">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.RequestOptions.ReturnItemPath">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.RequestOptions.ReturnItemName">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.RequestOptions.ClientRequestHandle">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.RequestOptions.LocaleID">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.ServerStatus">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ServerStatus.StatusInfo">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ServerStatus.VendorInfo">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ServerStatus.SupportedLocaleIDs">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ServerStatus.SupportedInterfaceVersions">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ServerStatus.StartTime">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.ServerStatus.ProductVersion">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.InterfaceVersion">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.InterfaceVersion.XML_DA_Version_1_0">
            <remarks/>
        </member>
        <member name="T:OpcXml.Da10.browseFilter">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.browseFilter.all">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.browseFilter.branch">
            <remarks/>
        </member>
        <member name="F:OpcXml.Da10.browseFilter.item">
            <remarks/>
        </member>
        <member name="T:OpcXml.Factory">
            <summary>
            A class used to instantiate XML server object.
            </summary>
        </member>
        <member name="M:OpcXml.Factory.#ctor">
            <summary>
            Initializes an instance to auto-detect the COM server.
            </summary>
        </member>
        <member name="M:OpcXml.Factory.#ctor(System.Type,System.Boolean)">
            <summary>
            Initializes an instance with the specified system type.
            </summary>
        </member>
        <member name="M:OpcXml.Factory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:OpcXml.Factory.CreateInstance(Opc.URL,Opc.ConnectData)">
            <summary>
            Creates a new instance of the server.
            </summary>
        </member>
    </members>
</doc>
